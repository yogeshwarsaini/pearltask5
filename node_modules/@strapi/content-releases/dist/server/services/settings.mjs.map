{"version":3,"file":"settings.mjs","sources":["../../../server/src/services/settings.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\n\nimport type { Settings } from '../../../shared/contracts/settings';\n\nconst DEFAULT_SETTINGS = {\n  defaultTimezone: null,\n} satisfies Settings;\n\nconst createSettingsService = ({ strapi }: { strapi: Core.Strapi }) => {\n  const getStore = async () => strapi.store({ type: 'core', name: 'content-releases' });\n\n  return {\n    async update({ settings }: { settings: Settings }): Promise<Settings> {\n      const store = await getStore();\n      store.set({ key: 'settings', value: settings });\n      return settings;\n    },\n    async find(): Promise<Settings> {\n      const store = await getStore();\n      const settings = (await store.get({ key: 'settings' })) as Settings | undefined;\n\n      return {\n        ...DEFAULT_SETTINGS,\n        ...(settings || {}),\n      };\n    },\n  };\n};\n\nexport type SettingsService = ReturnType<typeof createSettingsService>;\n\nexport default createSettingsService;\n"],"names":["DEFAULT_SETTINGS","defaultTimezone","createSettingsService","strapi","getStore","store","type","name","update","settings","set","key","value","find","get"],"mappings":"AAIA,MAAMA,gBAAmB,GAAA;IACvBC,eAAiB,EAAA;AACnB,CAAA;AAEA,MAAMC,qBAAwB,GAAA,CAAC,EAAEC,MAAM,EAA2B,GAAA;AAChE,IAAA,MAAMC,QAAW,GAAA,UAAYD,MAAOE,CAAAA,KAAK,CAAC;YAAEC,IAAM,EAAA,MAAA;YAAQC,IAAM,EAAA;AAAmB,SAAA,CAAA;IAEnF,OAAO;QACL,MAAMC,MAAAA,CAAAA,CAAO,EAAEC,QAAQ,EAA0B,EAAA;AAC/C,YAAA,MAAMJ,QAAQ,MAAMD,QAAAA,EAAAA;AACpBC,YAAAA,KAAAA,CAAMK,GAAG,CAAC;gBAAEC,GAAK,EAAA,UAAA;gBAAYC,KAAOH,EAAAA;AAAS,aAAA,CAAA;YAC7C,OAAOA,QAAAA;AACT,SAAA;QACA,MAAMI,IAAAA,CAAAA,GAAAA;AACJ,YAAA,MAAMR,QAAQ,MAAMD,QAAAA,EAAAA;AACpB,YAAA,MAAMK,QAAY,GAAA,MAAMJ,KAAMS,CAAAA,GAAG,CAAC;gBAAEH,GAAK,EAAA;AAAW,aAAA,CAAA;YAEpD,OAAO;AACL,gBAAA,GAAGX,gBAAgB;gBACnB,GAAIS,QAAAA,IAAY;AAClB,aAAA;AACF;AACF,KAAA;AACF;;;;"}