{"version":3,"file":"EditConfigurationPage.mjs","sources":["../../../admin/src/pages/EditConfigurationPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Page, useNotification, useTracking, useAPIErrorHandler } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\n\nimport { TEMP_FIELD_NAME } from '../components/ConfigurationForm/Fields';\nimport { ConfigurationForm, ConfigurationFormProps } from '../components/ConfigurationForm/Form';\nimport { useDoc } from '../hooks/useDocument';\nimport { useDocLayout } from '../hooks/useDocumentLayout';\nimport { useTypedSelector } from '../modules/hooks';\nimport { useUpdateContentTypeConfigurationMutation } from '../services/contentTypes';\nimport { useGetInitialDataQuery } from '../services/init';\nimport { setIn } from '../utils/objects';\n\nimport type { Metadatas } from '../../../shared/contracts/content-types';\n\nconst EditConfigurationPage = () => {\n  const { trackUsage } = useTracking();\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n  const { isLoading: isLoadingSchema, schema, model } = useDoc();\n  const { isLoading: isLoadingLayout, error, list, edit } = useDocLayout();\n\n  const {\n    fieldSizes,\n    error: errorFieldSizes,\n    isLoading: isLoadingFieldSizes,\n    isFetching: isFetchingFieldSizes,\n  } = useGetInitialDataQuery(undefined, {\n    selectFromResult: (res) => {\n      const fieldSizes = Object.entries(res.data?.fieldSizes ?? {}).reduce<\n        ConfigurationFormProps['fieldSizes']\n      >((acc, [attributeName, { default: size }]) => {\n        acc[attributeName] = size;\n\n        return acc;\n      }, {});\n\n      return {\n        isFetching: res.isFetching,\n        isLoading: res.isLoading,\n        error: res.error,\n        fieldSizes,\n      };\n    },\n  });\n\n  React.useEffect(() => {\n    if (errorFieldSizes) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(errorFieldSizes),\n      });\n    }\n  }, [errorFieldSizes, formatAPIError, toggleNotification]);\n\n  const isLoading =\n    isLoadingSchema || isLoadingLayout || isLoadingFieldSizes || isFetchingFieldSizes;\n\n  const [updateConfiguration] = useUpdateContentTypeConfigurationMutation();\n  const handleSubmit: ConfigurationFormProps['onSubmit'] = async (data) => {\n    try {\n      trackUsage('willSaveContentTypeLayout');\n\n      /**\n       * We reconstruct the metadatas object by taking the existing list metadatas\n       * and re-merging that by attribute name with the current list metadatas, whilst overwriting\n       * the data from the form we've built.\n       */\n      const meta = Object.entries(list.metadatas).reduce<Metadatas>(\n        (acc, [name, { mainField: _mainField, ...listMeta }]) => {\n          const existingEditMeta = edit.metadatas[name];\n\n          const {\n            __temp_key__,\n            size: _size,\n            name: _name,\n            ...editedMetadata\n          } = data.layout.flatMap((row) => row.children).find((field) => field.name === name) ?? {};\n\n          acc[name] = {\n            edit: {\n              ...existingEditMeta,\n              ...editedMetadata,\n            },\n            list: listMeta,\n          };\n\n          return acc;\n        },\n        {}\n      );\n\n      const res = await updateConfiguration({\n        layouts: {\n          edit: data.layout.map((row) =>\n            row.children.reduce<Array<{ name: string; size: number }>>((acc, { name, size }) => {\n              if (name !== TEMP_FIELD_NAME) {\n                return [...acc, { name, size }];\n              }\n\n              return acc;\n            }, [])\n          ),\n          list: list.layout.map((field) => field.name),\n        },\n        settings: setIn(data.settings, 'displayName', undefined),\n        metadatas: meta,\n        uid: model,\n      });\n\n      if ('data' in res) {\n        trackUsage('didEditEditSettings');\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'notification.success.saved', defaultMessage: 'Saved' }),\n        });\n      } else {\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(res.error),\n        });\n      }\n    } catch {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n    }\n  };\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (errorFieldSizes || error || !schema) {\n    return <Page.Error />;\n  }\n\n  return (\n    <>\n      <Page.Title>{`Configure ${edit.settings.displayName} Edit View`}</Page.Title>\n      <ConfigurationForm\n        onSubmit={handleSubmit}\n        attributes={schema.attributes}\n        fieldSizes={fieldSizes}\n        layout={edit}\n      />\n    </>\n  );\n};\n\nconst ProtectedEditConfigurationPage = () => {\n  const permissions = useTypedSelector(\n    (state) => state.admin_app.permissions.contentManager?.collectionTypesConfigurations\n  );\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <EditConfigurationPage />\n    </Page.Protect>\n  );\n};\n\nexport { ProtectedEditConfigurationPage, EditConfigurationPage };\n"],"names":["EditConfigurationPage","trackUsage","useTracking","formatMessage","useIntl","toggleNotification","useNotification","_unstableFormatAPIError","formatAPIError","useAPIErrorHandler","isLoading","isLoadingSchema","schema","model","useDoc","isLoadingLayout","error","list","edit","useDocLayout","fieldSizes","errorFieldSizes","isLoadingFieldSizes","isFetching","isFetchingFieldSizes","useGetInitialDataQuery","undefined","selectFromResult","res","Object","entries","data","reduce","acc","attributeName","default","size","React","useEffect","type","message","updateConfiguration","useUpdateContentTypeConfigurationMutation","handleSubmit","meta","metadatas","name","mainField","_mainField","listMeta","existingEditMeta","__temp_key__","_size","_name","editedMetadata","layout","flatMap","row","children","find","field","layouts","map","TEMP_FIELD_NAME","settings","setIn","uid","id","defaultMessage","_jsx","Page","Loading","Error","_jsxs","_Fragment","Title","displayName","ConfigurationForm","onSubmit","attributes","ProtectedEditConfigurationPage","permissions","useTypedSelector","state","admin_app","contentManager","collectionTypesConfigurations","Protect"],"mappings":"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"}