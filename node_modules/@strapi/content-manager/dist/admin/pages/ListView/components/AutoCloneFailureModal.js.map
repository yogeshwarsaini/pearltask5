{"version":3,"file":"AutoCloneFailureModal.js","sources":["../../../../../admin/src/pages/ListView/components/AutoCloneFailureModal.tsx"],"sourcesContent":["import { Box, Flex, Typography } from '@strapi/design-system';\nimport { ChevronRight } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { getTranslation } from '../../../utils/translations';\n\nimport type { ProhibitedCloningField } from '../../../../../shared/contracts/collection-types';\n\ntype Reason = ProhibitedCloningField[1];\n\ninterface AutoCloneFailureModalBodyProps {\n  prohibitedFields: ProhibitedCloningField[];\n}\n\nconst AutoCloneFailureModalBody = ({ prohibitedFields }: AutoCloneFailureModalBodyProps) => {\n  const { formatMessage } = useIntl();\n\n  const getDefaultErrorMessage = (reason: Reason) => {\n    switch (reason) {\n      case 'relation':\n        return 'Duplicating the relation could remove it from the original entry.';\n      case 'unique':\n        return 'Identical values in a unique field are not allowed';\n      default:\n        return reason;\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"beta\">\n        {formatMessage({\n          id: getTranslation('containers.list.autoCloneModal.title'),\n          defaultMessage: \"This entry can't be duplicated directly.\",\n        })}\n      </Typography>\n      <Box marginTop={2}>\n        <Typography textColor=\"neutral600\">\n          {formatMessage({\n            id: getTranslation('containers.list.autoCloneModal.description'),\n            defaultMessage:\n              \"A new entry will be created with the same content, but you'll have to change the following fields to save it.\",\n          })}\n        </Typography>\n      </Box>\n      <Flex marginTop={6} gap={2} direction=\"column\" alignItems=\"stretch\">\n        {prohibitedFields.map(([fieldPath, reason]) => (\n          <Flex\n            direction=\"column\"\n            gap={2}\n            alignItems=\"flex-start\"\n            borderColor=\"neutral200\"\n            hasRadius\n            padding={6}\n            key={fieldPath.join()}\n          >\n            <Flex direction=\"row\" tag=\"ol\">\n              {fieldPath.map((pathSegment, index) => (\n                <Typography fontWeight=\"semiBold\" tag=\"li\" key={index}>\n                  {pathSegment}\n                  {index !== fieldPath.length - 1 && (\n                    <ChevronRight\n                      fill=\"neutral500\"\n                      height=\"0.8rem\"\n                      width=\"0.8rem\"\n                      style={{ margin: '0 0.8rem' }}\n                    />\n                  )}\n                </Typography>\n              ))}\n            </Flex>\n            <Typography tag=\"p\" textColor=\"neutral600\">\n              {formatMessage({\n                id: getTranslation(`containers.list.autoCloneModal.error.${reason}`),\n                defaultMessage: getDefaultErrorMessage(reason),\n              })}\n            </Typography>\n          </Flex>\n        ))}\n      </Flex>\n    </>\n  );\n};\n\nexport { AutoCloneFailureModalBody };\nexport type { AutoCloneFailureModalBodyProps };\n"],"names":["AutoCloneFailureModalBody","prohibitedFields","formatMessage","useIntl","getDefaultErrorMessage","reason","_jsxs","_Fragment","_jsx","Typography","variant","id","getTranslation","defaultMessage","Box","marginTop","textColor","Flex","gap","direction","alignItems","map","fieldPath","borderColor","hasRadius","padding","tag","pathSegment","index","fontWeight","length","ChevronRight","fill","height","width","style","margin","join"],"mappings":";;;;;;;;AAcA,MAAMA,yBAA4B,GAAA,CAAC,EAAEC,gBAAgB,EAAkC,GAAA;IACrF,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAE1B,IAAA,MAAMC,yBAAyB,CAACC,MAAAA,GAAAA;QAC9B,OAAQA,MAAAA;YACN,KAAK,UAAA;gBACH,OAAO,mEAAA;YACT,KAAK,QAAA;gBACH,OAAO,oDAAA;AACT,YAAA;gBACE,OAAOA,MAAAA;AACX;AACF,KAAA;IAEA,qBACEC,eAAA,CAAAC,mBAAA,EAAA;;0BACEC,cAACC,CAAAA,uBAAAA,EAAAA;gBAAWC,OAAQ,EAAA,MAAA;0BACjBR,aAAc,CAAA;AACbS,oBAAAA,EAAAA,EAAIC,2BAAe,CAAA,sCAAA,CAAA;oBACnBC,cAAgB,EAAA;AAClB,iBAAA;;0BAEFL,cAACM,CAAAA,gBAAAA,EAAAA;gBAAIC,SAAW,EAAA,CAAA;AACd,gBAAA,QAAA,gBAAAP,cAACC,CAAAA,uBAAAA,EAAAA;oBAAWO,SAAU,EAAA,YAAA;8BACnBd,aAAc,CAAA;AACbS,wBAAAA,EAAAA,EAAIC,2BAAe,CAAA,4CAAA,CAAA;wBACnBC,cACE,EAAA;AACJ,qBAAA;;;0BAGJL,cAACS,CAAAA,iBAAAA,EAAAA;gBAAKF,SAAW,EAAA,CAAA;gBAAGG,GAAK,EAAA,CAAA;gBAAGC,SAAU,EAAA,QAAA;gBAASC,UAAW,EAAA,SAAA;AACvDnB,gBAAAA,QAAAA,EAAAA,gBAAAA,CAAiBoB,GAAG,CAAC,CAAC,CAACC,SAAWjB,EAAAA,MAAAA,CAAO,iBACxCC,eAACW,CAAAA,iBAAAA,EAAAA;wBACCE,SAAU,EAAA,QAAA;wBACVD,GAAK,EAAA,CAAA;wBACLE,UAAW,EAAA,YAAA;wBACXG,WAAY,EAAA,YAAA;wBACZC,SAAS,EAAA,IAAA;wBACTC,OAAS,EAAA,CAAA;;0CAGTjB,cAACS,CAAAA,iBAAAA,EAAAA;gCAAKE,SAAU,EAAA,KAAA;gCAAMO,GAAI,EAAA,IAAA;AACvBJ,gCAAAA,QAAAA,EAAAA,SAAAA,CAAUD,GAAG,CAAC,CAACM,WAAAA,EAAaC,sBAC3BtB,eAACG,CAAAA,uBAAAA,EAAAA;wCAAWoB,UAAW,EAAA,UAAA;wCAAWH,GAAI,EAAA,IAAA;;AACnCC,4CAAAA,WAAAA;AACAC,4CAAAA,KAAAA,KAAUN,SAAUQ,CAAAA,MAAM,GAAG,CAAA,kBAC5BtB,cAACuB,CAAAA,kBAAAA,EAAAA;gDACCC,IAAK,EAAA,YAAA;gDACLC,MAAO,EAAA,QAAA;gDACPC,KAAM,EAAA,QAAA;gDACNC,KAAO,EAAA;oDAAEC,MAAQ,EAAA;AAAW;;;AAPcR,qCAAAA,EAAAA,KAAAA,CAAAA;;0CAapDpB,cAACC,CAAAA,uBAAAA,EAAAA;gCAAWiB,GAAI,EAAA,GAAA;gCAAIV,SAAU,EAAA,YAAA;0CAC3Bd,aAAc,CAAA;AACbS,oCAAAA,EAAAA,EAAIC,2BAAe,CAAA,CAAC,qCAAqC,EAAEP,OAAO,CAAC,CAAA;AACnEQ,oCAAAA,cAAAA,EAAgBT,sBAAuBC,CAAAA,MAAAA;AACzC,iCAAA;;;AArBGiB,qBAAAA,EAAAA,SAAAA,CAAUe,IAAI,EAAA,CAAA;;;;AA4B/B;;;;"}