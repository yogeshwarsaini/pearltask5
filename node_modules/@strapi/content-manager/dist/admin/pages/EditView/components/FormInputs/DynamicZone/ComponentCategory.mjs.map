{"version":3,"file":"ComponentCategory.mjs","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/DynamicZone/ComponentCategory.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Accordion, Box, Flex, FlexComponent, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { ComponentIcon } from '../../../../../components/ComponentIcon';\nimport { RESPONSIVE_CONTAINER_BREAKPOINTS } from '../../FormLayout';\n\ninterface ComponentCategoryProps {\n  category: string;\n  components?: Array<{\n    uid: string;\n    displayName: string;\n    icon?: string;\n  }>;\n  onAddComponent: (\n    componentUid: string\n  ) => React.MouseEventHandler<HTMLButtonElement> & React.MouseEventHandler<HTMLDivElement>;\n  variant?: Accordion.Variant;\n}\n\nconst ComponentCategory = ({\n  category,\n  components = [],\n  variant = 'primary',\n  onAddComponent,\n}: ComponentCategoryProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Accordion.Item value={category}>\n      <Accordion.Header variant={variant}>\n        <Accordion.Trigger>\n          {formatMessage({ id: category, defaultMessage: category })}\n        </Accordion.Trigger>\n      </Accordion.Header>\n      <ResponsiveAccordionContent>\n        <Grid paddingTop={4} paddingBottom={4} paddingLeft={3} paddingRight={3}>\n          {components.map(({ uid, displayName, icon }) => (\n            <ComponentBox\n              key={uid}\n              tag=\"button\"\n              type=\"button\"\n              background=\"neutral100\"\n              justifyContent=\"center\"\n              onClick={onAddComponent(uid)}\n              hasRadius\n              height=\"8.4rem\"\n              shrink={0}\n              borderColor=\"neutral200\"\n            >\n              <Flex direction=\"column\" gap={1} alignItems=\"center\" justifyContent=\"center\">\n                <ComponentIcon color=\"currentColor\" background=\"primary200\" icon={icon} />\n\n                <Typography variant=\"pi\" fontWeight=\"bold\">\n                  {displayName}\n                </Typography>\n              </Flex>\n            </ComponentBox>\n          ))}\n        </Grid>\n      </ResponsiveAccordionContent>\n    </Accordion.Item>\n  );\n};\n\nconst ResponsiveAccordionContent = styled(Accordion.Content)`\n  container-type: inline-size;\n`;\n\n/**\n * TODO:\n * JSDOM cannot handle container queries.\n * This is a temporary workaround so that tests do not fail in the CI when jestdom throws an error\n * for failing to parse the stylesheet.\n */\nconst Grid =\n  process.env.NODE_ENV !== 'test'\n    ? styled(Box)`\n        display: grid;\n        grid-template-columns: repeat(auto-fill, 100%);\n        grid-gap: 4px;\n\n        @container (min-width: ${() => RESPONSIVE_CONTAINER_BREAKPOINTS.sm}) {\n          grid-template-columns: repeat(auto-fill, 14rem);\n        }\n      `\n    : styled(Box)`\n        display: grid;\n        grid-template-columns: repeat(auto-fill, 100%);\n        grid-gap: 4px;\n      `;\n\nconst ComponentBox = styled<FlexComponent<'button'>>(Flex)`\n  color: ${({ theme }) => theme.colors.neutral600};\n  cursor: pointer;\n\n  @media (prefers-reduced-motion: no-preference) {\n    transition: color 120ms ${(props) => props.theme.motion.easings.easeOutQuad};\n  }\n\n  &:focus,\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.colors.primary200};\n    background: ${({ theme }) => theme.colors.primary100};\n    color: ${({ theme }) => theme.colors.primary600};\n  }\n`;\n\nexport { ComponentCategory };\nexport type { ComponentCategoryProps };\n"],"names":["ComponentCategory","category","components","variant","onAddComponent","formatMessage","useIntl","_jsxs","Accordion","Item","value","_jsx","Header","Trigger","id","defaultMessage","ResponsiveAccordionContent","Grid","paddingTop","paddingBottom","paddingLeft","paddingRight","map","uid","displayName","icon","ComponentBox","tag","type","background","justifyContent","onClick","hasRadius","height","shrink","borderColor","Flex","direction","gap","alignItems","ComponentIcon","color","Typography","fontWeight","styled","Content","process","env","NODE_ENV","Box","RESPONSIVE_CONTAINER_BREAKPOINTS","sm","theme","colors","neutral600","props","motion","easings","easeOutQuad","primary200","primary100","primary600"],"mappings":"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"}