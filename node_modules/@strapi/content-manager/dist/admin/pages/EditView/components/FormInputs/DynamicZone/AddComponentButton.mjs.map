{"version":3,"file":"AddComponentButton.mjs","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/DynamicZone/AddComponentButton.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Button, Flex, Typography, TypographyComponent } from '@strapi/design-system';\nimport { PlusCircle } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\ninterface AddComponentButtonProps {\n  children: React.ReactNode;\n  hasError?: boolean;\n  isDisabled?: boolean;\n  isOpen?: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement> & React.MouseEventHandler<HTMLDivElement>;\n}\n\nconst AddComponentButton = ({\n  hasError,\n  isDisabled,\n  isOpen,\n  children,\n  onClick,\n}: AddComponentButtonProps) => {\n  return (\n    <StyledButton\n      type=\"button\"\n      onClick={onClick}\n      disabled={isDisabled}\n      background=\"neutral0\"\n      style={{ cursor: isDisabled ? 'not-allowed' : 'pointer' }}\n      variant=\"tertiary\"\n    >\n      <Flex tag=\"span\" gap={2}>\n        <StyledAddIcon aria-hidden $isOpen={isOpen} $hasError={hasError && !isOpen} />\n        <Typography\n          variant=\"pi\"\n          fontWeight=\"bold\"\n          textColor={hasError && !isOpen ? 'danger600' : 'neutral600'}\n        >\n          {children}\n        </Typography>\n      </Flex>\n    </StyledButton>\n  );\n};\n\nconst StyledAddIcon = styled(PlusCircle)<{ $isOpen?: boolean; $hasError?: boolean }>`\n  height: ${({ theme }) => theme.spaces[6]};\n  width: ${({ theme }) => theme.spaces[6]};\n  transform: ${({ $isOpen }) => ($isOpen ? 'rotate(45deg)' : 'rotate(0deg)')};\n\n  > circle {\n    fill: ${({ theme, $hasError }) =>\n      $hasError ? theme.colors.danger200 : theme.colors.neutral150};\n  }\n  > path {\n    fill: ${({ theme, $hasError }) =>\n      $hasError ? theme.colors.danger600 : theme.colors.neutral500};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  padding-left: ${({ theme }) => theme.spaces[3]};\n  border-radius: 26px;\n  box-shadow: ${({ theme }) => theme.shadows.filterShadow};\n  height: 5rem;\n`;\n\nexport { AddComponentButton };\nexport type { AddComponentButtonProps };\n"],"names":["AddComponentButton","hasError","isDisabled","isOpen","children","onClick","_jsx","StyledButton","type","disabled","background","style","cursor","variant","_jsxs","Flex","tag","gap","StyledAddIcon","aria-hidden","$isOpen","$hasError","Typography","fontWeight","textColor","styled","PlusCircle","theme","spaces","colors","danger200","neutral150","danger600","neutral500","Button","shadows","filterShadow"],"mappings":";;;;;;AAcA,MAAMA,kBAAqB,GAAA,CAAC,EAC1BC,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,OAAO,EACiB,GAAA;AACxB,IAAA,qBACEC,GAACC,CAAAA,YAAAA,EAAAA;QACCC,IAAK,EAAA,QAAA;QACLH,OAASA,EAAAA,OAAAA;QACTI,QAAUP,EAAAA,UAAAA;QACVQ,UAAW,EAAA,UAAA;QACXC,KAAO,EAAA;AAAEC,YAAAA,MAAAA,EAAQV,aAAa,aAAgB,GAAA;AAAU,SAAA;QACxDW,OAAQ,EAAA,UAAA;AAER,QAAA,QAAA,gBAAAC,IAACC,CAAAA,IAAAA,EAAAA;YAAKC,GAAI,EAAA,MAAA;YAAOC,GAAK,EAAA,CAAA;;8BACpBX,GAACY,CAAAA,aAAAA,EAAAA;oBAAcC,aAAW,EAAA,IAAA;oBAACC,OAASjB,EAAAA,MAAAA;AAAQkB,oBAAAA,SAAAA,EAAWpB,YAAY,CAACE;;8BACpEG,GAACgB,CAAAA,UAAAA,EAAAA;oBACCT,OAAQ,EAAA,IAAA;oBACRU,UAAW,EAAA,MAAA;oBACXC,SAAWvB,EAAAA,QAAAA,IAAY,CAACE,MAAAA,GAAS,WAAc,GAAA,YAAA;AAE9CC,oBAAAA,QAAAA,EAAAA;;;;;AAKX;AAEA,MAAMc,aAAAA,GAAgBO,MAAOC,CAAAA,UAAAA,CAAuD;UAC1E,EAAE,CAAC,EAAEC,KAAK,EAAE,GAAKA,KAAMC,CAAAA,MAAM,CAAC,CAAA,CAAE,CAAC;SAClC,EAAE,CAAC,EAAED,KAAK,EAAE,GAAKA,KAAMC,CAAAA,MAAM,CAAC,CAAA,CAAE,CAAC;AAC7B,aAAA,EAAE,CAAC,EAAER,OAAO,EAAE,GAAMA,OAAAA,GAAU,kBAAkB,cAAgB,CAAA;;;AAGnE,UAAA,EAAE,CAAC,EAAEO,KAAK,EAAEN,SAAS,EAAE,GAC3BA,SAAAA,GAAYM,KAAME,CAAAA,MAAM,CAACC,SAAS,GAAGH,MAAME,MAAM,CAACE,UAAU,CAAC;;;AAGzD,UAAA,EAAE,CAAC,EAAEJ,KAAK,EAAEN,SAAS,EAAE,GAC3BA,SAAAA,GAAYM,KAAME,CAAAA,MAAM,CAACG,SAAS,GAAGL,MAAME,MAAM,CAACI,UAAU,CAAC;;AAEnE,CAAC;AAED,MAAM1B,YAAAA,GAAekB,MAAOS,CAAAA,MAAAA,CAAO;gBACnB,EAAE,CAAC,EAAEP,KAAK,EAAE,GAAKA,KAAMC,CAAAA,MAAM,CAAC,CAAA,CAAE,CAAC;;cAEnC,EAAE,CAAC,EAAED,KAAK,EAAE,GAAKA,KAAMQ,CAAAA,OAAO,CAACC,YAAY,CAAC;;AAE1D,CAAC;;;;"}