{"version":3,"file":"WysiwygNav.js","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/Wysiwyg/WysiwygNav.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Button,\n  Flex,\n  IconButton,\n  IconButtonGroup,\n  SingleSelectOption,\n  SingleSelect,\n  Field,\n  Menu,\n} from '@strapi/design-system';\nimport {\n  Bold,\n  BulletList,\n  Code,\n  Italic,\n  Link,\n  NumberList,\n  Image,\n  Quotes,\n  StrikeThrough,\n  Underline,\n  HeadingOne,\n  HeadingTwo,\n  HeadingThree,\n  HeadingFour,\n  HeadingFive,\n  HeadingSix,\n} from '@strapi/icons';\nimport { EditorFromTextArea } from 'codemirror5';\nimport { useIntl } from 'react-intl';\n\nimport { EditorToolbarObserver, type ObservedComponent } from '../../EditorToolbarObserver';\n\nimport { listHandler, markdownHandler, quoteAndCodeHandler, titleHandler } from './utils/utils';\n\ninterface WysiwygNavProps {\n  disabled?: boolean;\n  editorRef: React.MutableRefObject<EditorFromTextArea>;\n  isExpandMode?: boolean;\n  isPreviewMode?: boolean;\n  onToggleMediaLib: () => void;\n  onTogglePreviewMode?: () => void;\n}\n\n/**\n * TODO: refactor this mess.\n */\nconst WysiwygNav = ({\n  disabled,\n  editorRef,\n  isPreviewMode,\n  onToggleMediaLib,\n  onTogglePreviewMode,\n}: WysiwygNavProps) => {\n  const { formatMessage } = useIntl();\n  const isDisabled = disabled || isPreviewMode;\n\n  const handleActionClick = (\n    value: string,\n    currentEditorRef: React.MutableRefObject<EditorFromTextArea>\n  ) => {\n    switch (value) {\n      case 'Link': {\n        markdownHandler(currentEditorRef, value);\n        break;\n      }\n      case 'Code':\n      case 'Quote': {\n        quoteAndCodeHandler(currentEditorRef, value);\n        break;\n      }\n      case 'Bold':\n      case 'Italic':\n      case 'Underline':\n      case 'Strikethrough': {\n        markdownHandler(currentEditorRef, value);\n        break;\n      }\n      case 'BulletList':\n      case 'NumberList': {\n        listHandler(currentEditorRef, value);\n        break;\n      }\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6': {\n        titleHandler(currentEditorRef, value);\n        break;\n      }\n      default: {\n        // Nothing\n      }\n    }\n  };\n\n  const observedComponents: ObservedComponent[] = [\n    {\n      toolbar: (\n        <IconButtonGroup>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Bold', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.modifiers.bold',\n              defaultMessage: 'Bold',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.modifiers.bold',\n              defaultMessage: 'Bold',\n            })}\n          >\n            <Bold />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Italic', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.modifiers.italic',\n              defaultMessage: 'Italic',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.modifiers.italic',\n              defaultMessage: 'Italic',\n            })}\n          >\n            <Italic />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Underline', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.modifiers.underline',\n              defaultMessage: 'Underline',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.modifiers.underline',\n              defaultMessage: 'Underline',\n            })}\n          >\n            <Underline />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Strikethrough', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.modifiers.strikethrough',\n              defaultMessage: 'Strikethrough',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.modifiers.strikethrough',\n              defaultMessage: 'Strikethrough',\n            })}\n          >\n            <StrikeThrough />\n          </IconButton>\n        </IconButtonGroup>\n      ),\n      menu: (\n        <>\n          <Menu.Separator />\n          <Menu.Item\n            startIcon={<Bold fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Bold', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.modifiers.bold',\n                defaultMessage: 'Bold',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<Italic fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Italic', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.modifiers.italic',\n                defaultMessage: 'Italic',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<Underline fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Underline', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.modifiers.underline',\n                defaultMessage: 'Underline',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<StrikeThrough fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Strikethrough', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.modifiers.strikethrough',\n                defaultMessage: 'Strikethrough',\n              })}\n            </Flex>\n          </Menu.Item>\n        </>\n      ),\n      key: 'formatting-group-1',\n    },\n    {\n      toolbar: (\n        <IconButtonGroup>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('BulletList', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.blocks.bulletList',\n              defaultMessage: 'Bulleted list',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.blocks.bulletList',\n              defaultMessage: 'Bulleted list',\n            })}\n          >\n            <BulletList />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('NumberList', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.blocks.numberList',\n              defaultMessage: 'Numbered list',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.blocks.numberList',\n              defaultMessage: 'Numbered list',\n            })}\n          >\n            <NumberList />\n          </IconButton>\n        </IconButtonGroup>\n      ),\n      menu: (\n        <>\n          <Menu.Separator />\n          <Menu.Item\n            startIcon={<BulletList fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('BulletList', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.blocks.unorderedList',\n                defaultMessage: 'Bulleted list',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<NumberList fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('NumberList', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.blocks.orderedList',\n                defaultMessage: 'Numbered list',\n              })}\n            </Flex>\n          </Menu.Item>\n        </>\n      ),\n      key: 'formatting-group-2',\n    },\n    {\n      toolbar: (\n        <IconButtonGroup>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Code', editorRef)}\n            label={formatMessage({\n              id: 'components.Wysiwyg.blocks.code',\n              defaultMessage: 'Code',\n            })}\n            name={formatMessage({\n              id: 'components.Wysiwyg.blocks.code',\n              defaultMessage: 'Code',\n            })}\n          >\n            <Code />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => {\n              onToggleMediaLib();\n            }}\n            label={formatMessage({\n              id: 'components.Blocks.blocks.image',\n              defaultMessage: 'Image',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.blocks.image',\n              defaultMessage: 'Image',\n            })}\n          >\n            <Image />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Link', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.popover.link',\n              defaultMessage: 'Link',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.popover.link',\n              defaultMessage: 'Link',\n            })}\n          >\n            <Link />\n          </IconButton>\n          <IconButton\n            disabled={isDisabled}\n            onClick={() => handleActionClick('Quote', editorRef)}\n            label={formatMessage({\n              id: 'components.Blocks.blocks.quote',\n              defaultMessage: 'Quote',\n            })}\n            name={formatMessage({\n              id: 'components.Blocks.blocks.quote',\n              defaultMessage: 'Quote',\n            })}\n          >\n            <Quotes />\n          </IconButton>\n        </IconButtonGroup>\n      ),\n      menu: (\n        <>\n          <Menu.Separator />\n          <Menu.Item\n            startIcon={<Code fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Code', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Wysiwyg.blocks.code',\n                defaultMessage: 'Code',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<Image fill=\"neutral500\" />}\n            onSelect={() => {\n              onToggleMediaLib();\n            }}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.blocks.image',\n                defaultMessage: 'Image',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<Link fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Link', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.popover.link',\n                defaultMessage: 'Link',\n              })}\n            </Flex>\n          </Menu.Item>\n          <Menu.Item\n            startIcon={<Quotes fill=\"neutral500\" />}\n            onSelect={() => handleActionClick('Quote', editorRef)}\n            disabled={isDisabled}\n          >\n            <Flex tag=\"span\" gap={2}>\n              {formatMessage({\n                id: 'components.Blocks.blocks.quote',\n                defaultMessage: 'Quote',\n              })}\n            </Flex>\n          </Menu.Item>\n        </>\n      ),\n      key: 'formatting-group-3',\n    },\n  ];\n\n  return (\n    <Flex\n      padding={2}\n      background=\"neutral100\"\n      justifyContent=\"space-between\"\n      borderRadius=\"0.4rem 0.4rem 0 0\"\n      width=\"100%\"\n      gap={4}\n    >\n      <Field.Root>\n        <SingleSelect\n          disabled={isDisabled}\n          placeholder={formatMessage({\n            id: 'components.Wysiwyg.selectOptions.title',\n            defaultMessage: 'Headings',\n          })}\n          aria-label={formatMessage({\n            id: 'components.Wysiwyg.selectOptions.title',\n            defaultMessage: 'Headings',\n          })}\n          // @ts-expect-error – DS v2 will only allow strings.\n          onChange={(value) => handleActionClick(value, editorRef)}\n          size=\"S\"\n        >\n          <SingleSelectOption value=\"h1\" startIcon={<HeadingOne fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H1',\n              defaultMessage: 'Heading 1',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"h2\" startIcon={<HeadingTwo fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H2',\n              defaultMessage: 'Heading 2',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"h3\" startIcon={<HeadingThree fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H3',\n              defaultMessage: 'Heading 3',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"h4\" startIcon={<HeadingFour fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H4',\n              defaultMessage: 'Heading 4',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"h5\" startIcon={<HeadingFive fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H5',\n              defaultMessage: 'Heading 5',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"h6\" startIcon={<HeadingSix fill=\"neutral500\" />}>\n            {formatMessage({\n              id: 'components.Wysiwyg.selectOptions.H6',\n              defaultMessage: 'Heading 6',\n            })}\n          </SingleSelectOption>\n        </SingleSelect>\n      </Field.Root>\n      <Flex width=\"100%\" justifyContent=\"space-between\" overflow=\"hidden\">\n        <Flex gap={2} overflow=\"hidden\" width=\"100%\">\n          <EditorToolbarObserver\n            menuTriggerVariant=\"tertiary\"\n            observedComponents={observedComponents}\n          />\n        </Flex>\n\n        {onTogglePreviewMode && (\n          <Button onClick={onTogglePreviewMode} variant=\"tertiary\" minWidth=\"132px\">\n            {isPreviewMode\n              ? formatMessage({\n                  id: 'components.Wysiwyg.ToggleMode.markdown-mode',\n                  defaultMessage: 'Markdown mode',\n                })\n              : formatMessage({\n                  id: 'components.Wysiwyg.ToggleMode.preview-mode',\n                  defaultMessage: 'Preview mode',\n                })}\n          </Button>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport { WysiwygNav };\nexport type { WysiwygNavProps };\n"],"names":["WysiwygNav","disabled","editorRef","isPreviewMode","onToggleMediaLib","onTogglePreviewMode","formatMessage","useIntl","isDisabled","handleActionClick","value","currentEditorRef","markdownHandler","quoteAndCodeHandler","listHandler","titleHandler","observedComponents","toolbar","_jsxs","IconButtonGroup","_jsx","IconButton","onClick","label","id","defaultMessage","name","Bold","Italic","Underline","StrikeThrough","menu","_Fragment","Menu","Separator","Item","startIcon","fill","onSelect","Flex","tag","gap","key","BulletList","NumberList","Code","Image","Link","Quotes","padding","background","justifyContent","borderRadius","width","Field","Root","SingleSelect","placeholder","aria-label","onChange","size","SingleSelectOption","HeadingOne","HeadingTwo","HeadingThree","HeadingFour","HeadingFive","HeadingSix","overflow","EditorToolbarObserver","menuTriggerVariant","Button","variant","minWidth"],"mappings":";;;;;;;;;;AA8CA;;AAEC,IACKA,MAAAA,UAAAA,GAAa,CAAC,EAClBC,QAAQ,EACRC,SAAS,EACTC,aAAa,EACbC,gBAAgB,EAChBC,mBAAmB,EACH,GAAA;IAChB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAC1B,IAAA,MAAMC,aAAaP,QAAYE,IAAAA,aAAAA;IAE/B,MAAMM,iBAAAA,GAAoB,CACxBC,KACAC,EAAAA,gBAAAA,GAAAA;QAEA,OAAQD,KAAAA;YACN,KAAK,MAAA;AAAQ,gBAAA;AACXE,oBAAAA,qBAAAA,CAAgBD,gBAAkBD,EAAAA,KAAAA,CAAAA;AAClC,oBAAA;AACF;YACA,KAAK,MAAA;YACL,KAAK,OAAA;AAAS,gBAAA;AACZG,oBAAAA,yBAAAA,CAAoBF,gBAAkBD,EAAAA,KAAAA,CAAAA;AACtC,oBAAA;AACF;YACA,KAAK,MAAA;YACL,KAAK,QAAA;YACL,KAAK,WAAA;YACL,KAAK,eAAA;AAAiB,gBAAA;AACpBE,oBAAAA,qBAAAA,CAAgBD,gBAAkBD,EAAAA,KAAAA,CAAAA;AAClC,oBAAA;AACF;YACA,KAAK,YAAA;YACL,KAAK,YAAA;AAAc,gBAAA;AACjBI,oBAAAA,iBAAAA,CAAYH,gBAAkBD,EAAAA,KAAAA,CAAAA;AAC9B,oBAAA;AACF;YACA,KAAK,IAAA;YACL,KAAK,IAAA;YACL,KAAK,IAAA;YACL,KAAK,IAAA;YACL,KAAK,IAAA;YACL,KAAK,IAAA;AAAM,gBAAA;AACTK,oBAAAA,kBAAAA,CAAaJ,gBAAkBD,EAAAA,KAAAA,CAAAA;AAC/B,oBAAA;AACF;AAIF;AACF,KAAA;AAEA,IAAA,MAAMM,kBAA0C,GAAA;AAC9C,QAAA;AACEC,YAAAA,OAAAA,gBACEC,eAACC,CAAAA,4BAAAA,EAAAA;;kCACCC,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;AACzCqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,kCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,kCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACO,CAAAA,UAAAA,EAAAA,EAAAA;;kCAEHP,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,QAAUP,EAAAA,SAAAA,CAAAA;AAC3CqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,oCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,oCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACQ,CAAAA,YAAAA,EAAAA,EAAAA;;kCAEHR,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,WAAaP,EAAAA,SAAAA,CAAAA;AAC9CqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,uCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,uCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACS,CAAAA,eAAAA,EAAAA,EAAAA;;kCAEHT,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,eAAiBP,EAAAA,SAAAA,CAAAA;AAClDqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACU,CAAAA,mBAAAA,EAAAA,EAAAA;;;;YAIPC,IACE,gBAAAb,eAAA,CAAAc,mBAAA,EAAA;;AACE,kCAAAZ,cAAA,CAACa,kBAAKC,SAAS,EAAA,EAAA,CAAA;AACf,kCAAAd,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACO,CAAAA,UAAAA,EAAAA;4BAAKU,IAAK,EAAA;;wBACtBC,QAAU,EAAA,IAAM7B,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;wBAC1CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,kCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACQ,CAAAA,YAAAA,EAAAA;4BAAOS,IAAK,EAAA;;wBACxBC,QAAU,EAAA,IAAM7B,kBAAkB,QAAUP,EAAAA,SAAAA,CAAAA;wBAC5CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,oCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACS,CAAAA,eAAAA,EAAAA;4BAAUQ,IAAK,EAAA;;wBAC3BC,QAAU,EAAA,IAAM7B,kBAAkB,WAAaP,EAAAA,SAAAA,CAAAA;wBAC/CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,uCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACU,CAAAA,mBAAAA,EAAAA;4BAAcO,IAAK,EAAA;;wBAC/BC,QAAU,EAAA,IAAM7B,kBAAkB,eAAiBP,EAAAA,SAAAA,CAAAA;wBACnDD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,2CAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;;;YAKRiB,GAAK,EAAA;AACP,SAAA;AACA,QAAA;AACEzB,YAAAA,OAAAA,gBACEC,eAACC,CAAAA,4BAAAA,EAAAA;;kCACCC,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,YAAcP,EAAAA,SAAAA,CAAAA;AAC/CqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,qCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,qCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACuB,CAAAA,gBAAAA,EAAAA,EAAAA;;kCAEHvB,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,YAAcP,EAAAA,SAAAA,CAAAA;AAC/CqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,qCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,qCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACwB,CAAAA,gBAAAA,EAAAA,EAAAA;;;;YAIPb,IACE,gBAAAb,eAAA,CAAAc,mBAAA,EAAA;;AACE,kCAAAZ,cAAA,CAACa,kBAAKC,SAAS,EAAA,EAAA,CAAA;AACf,kCAAAd,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACuB,CAAAA,gBAAAA,EAAAA;4BAAWN,IAAK,EAAA;;wBAC5BC,QAAU,EAAA,IAAM7B,kBAAkB,YAAcP,EAAAA,SAAAA,CAAAA;wBAChDD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,wCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACwB,CAAAA,gBAAAA,EAAAA;4BAAWP,IAAK,EAAA;;wBAC5BC,QAAU,EAAA,IAAM7B,kBAAkB,YAAcP,EAAAA,SAAAA,CAAAA;wBAChDD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,sCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;;;YAKRiB,GAAK,EAAA;AACP,SAAA;AACA,QAAA;AACEzB,YAAAA,OAAAA,gBACEC,eAACC,CAAAA,4BAAAA,EAAAA;;kCACCC,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;AACzCqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAACyB,CAAAA,UAAAA,EAAAA,EAAAA;;kCAEHzB,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAA;AACPlB,4BAAAA,gBAAAA,EAAAA;AACF,yBAAA;AACAmB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAAC0B,CAAAA,WAAAA,EAAAA,EAAAA;;kCAEH1B,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;AACzCqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAAC2B,CAAAA,UAAAA,EAAAA,EAAAA;;kCAEH3B,cAACC,CAAAA,uBAAAA,EAAAA;wBACCpB,QAAUO,EAAAA,UAAAA;wBACVc,OAAS,EAAA,IAAMb,kBAAkB,OAASP,EAAAA,SAAAA,CAAAA;AAC1CqB,wBAAAA,KAAAA,EAAOjB,aAAc,CAAA;4BACnBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AACAC,wBAAAA,IAAAA,EAAMpB,aAAc,CAAA;4BAClBkB,EAAI,EAAA,gCAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA;AAEA,wBAAA,QAAA,gBAAAL,cAAC4B,CAAAA,YAAAA,EAAAA,EAAAA;;;;YAIPjB,IACE,gBAAAb,eAAA,CAAAc,mBAAA,EAAA;;AACE,kCAAAZ,cAAA,CAACa,kBAAKC,SAAS,EAAA,EAAA,CAAA;AACf,kCAAAd,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAACyB,CAAAA,UAAAA,EAAAA;4BAAKR,IAAK,EAAA;;wBACtBC,QAAU,EAAA,IAAM7B,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;wBAC1CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,gCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAAC0B,CAAAA,WAAAA,EAAAA;4BAAMT,IAAK,EAAA;;wBACvBC,QAAU,EAAA,IAAA;AACRlC,4BAAAA,gBAAAA,EAAAA;AACF,yBAAA;wBACAH,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,gCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAAC2B,CAAAA,UAAAA,EAAAA;4BAAKV,IAAK,EAAA;;wBACtBC,QAAU,EAAA,IAAM7B,kBAAkB,MAAQP,EAAAA,SAAAA,CAAAA;wBAC1CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,gCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;AAGJ,kCAAAL,cAAA,CAACa,kBAAKE,IAAI,EAAA;AACRC,wBAAAA,SAAAA,gBAAWhB,cAAC4B,CAAAA,YAAAA,EAAAA;4BAAOX,IAAK,EAAA;;wBACxBC,QAAU,EAAA,IAAM7B,kBAAkB,OAASP,EAAAA,SAAAA,CAAAA;wBAC3CD,QAAUO,EAAAA,UAAAA;AAEV,wBAAA,QAAA,gBAAAY,cAACmB,CAAAA,iBAAAA,EAAAA;4BAAKC,GAAI,EAAA,MAAA;4BAAOC,GAAK,EAAA,CAAA;sCACnBnC,aAAc,CAAA;gCACbkB,EAAI,EAAA,gCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;;;YAKRiB,GAAK,EAAA;AACP;AACD,KAAA;AAED,IAAA,qBACExB,eAACqB,CAAAA,iBAAAA,EAAAA;QACCU,OAAS,EAAA,CAAA;QACTC,UAAW,EAAA,YAAA;QACXC,cAAe,EAAA,eAAA;QACfC,YAAa,EAAA,mBAAA;QACbC,KAAM,EAAA,MAAA;QACNZ,GAAK,EAAA,CAAA;;AAEL,0BAAArB,cAAA,CAACkC,mBAAMC,IAAI,EAAA;AACT,gBAAA,QAAA,gBAAArC,eAACsC,CAAAA,yBAAAA,EAAAA;oBACCvD,QAAUO,EAAAA,UAAAA;AACViD,oBAAAA,WAAAA,EAAanD,aAAc,CAAA;wBACzBkB,EAAI,EAAA,wCAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA,CAAA;AACAiC,oBAAAA,YAAAA,EAAYpD,aAAc,CAAA;wBACxBkB,EAAI,EAAA,wCAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA,CAAA;;oBAEAkC,QAAU,EAAA,CAACjD,KAAUD,GAAAA,iBAAAA,CAAkBC,KAAOR,EAAAA,SAAAA,CAAAA;oBAC9C0D,IAAK,EAAA,GAAA;;sCAELxC,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC0C,CAAAA,gBAAAA,EAAAA;gCAAWzB,IAAK,EAAA;;sCACxD/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;sCAEFL,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC2C,CAAAA,gBAAAA,EAAAA;gCAAW1B,IAAK,EAAA;;sCACxD/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;sCAEFL,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC4C,CAAAA,kBAAAA,EAAAA;gCAAa3B,IAAK,EAAA;;sCAC1D/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;sCAEFL,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC6C,CAAAA,iBAAAA,EAAAA;gCAAY5B,IAAK,EAAA;;sCACzD/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;sCAEFL,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC8C,CAAAA,iBAAAA,EAAAA;gCAAY7B,IAAK,EAAA;;sCACzD/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;sCAEFL,cAACyC,CAAAA,+BAAAA,EAAAA;4BAAmBnD,KAAM,EAAA,IAAA;AAAK0B,4BAAAA,SAAAA,gBAAWhB,cAAC+C,CAAAA,gBAAAA,EAAAA;gCAAW9B,IAAK,EAAA;;sCACxD/B,aAAc,CAAA;gCACbkB,EAAI,EAAA,qCAAA;gCACJC,cAAgB,EAAA;AAClB,6BAAA;;;;;0BAINP,eAACqB,CAAAA,iBAAAA,EAAAA;gBAAKc,KAAM,EAAA,MAAA;gBAAOF,cAAe,EAAA,eAAA;gBAAgBiB,QAAS,EAAA,QAAA;;kCACzDhD,cAACmB,CAAAA,iBAAAA,EAAAA;wBAAKE,GAAK,EAAA,CAAA;wBAAG2B,QAAS,EAAA,QAAA;wBAASf,KAAM,EAAA,MAAA;AACpC,wBAAA,QAAA,gBAAAjC,cAACiD,CAAAA,2CAAAA,EAAAA;4BACCC,kBAAmB,EAAA,UAAA;4BACnBtD,kBAAoBA,EAAAA;;;AAIvBX,oBAAAA,mBAAAA,kBACCe,cAACmD,CAAAA,mBAAAA,EAAAA;wBAAOjD,OAASjB,EAAAA,mBAAAA;wBAAqBmE,OAAQ,EAAA,UAAA;wBAAWC,QAAS,EAAA,OAAA;AAC/DtE,wBAAAA,QAAAA,EAAAA,aAAAA,GACGG,aAAc,CAAA;4BACZkB,EAAI,EAAA,6CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA,CAAA,GACAnB,aAAc,CAAA;4BACZkB,EAAI,EAAA,4CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;;;;;;AAMhB;;;;"}