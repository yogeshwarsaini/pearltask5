{"version":3,"file":"Modifiers.js","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/BlocksInput/Modifiers.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Typography, TypographyComponent } from '@strapi/design-system';\nimport { Bold, Italic, Underline, StrikeThrough, Code } from '@strapi/icons';\nimport { type MessageDescriptor } from 'react-intl';\nimport { Editor, Text, Transforms } from 'slate';\nimport { styled, css } from 'styled-components';\n\nconst stylesToInherit = css`\n  font-size: inherit;\n  color: inherit;\n  line-height: inherit;\n`;\n\nconst BoldText = styled<TypographyComponent>(Typography).attrs({ fontWeight: 'bold' })`\n  ${stylesToInherit}\n`;\n\nconst ItalicText = styled<TypographyComponent>(Typography)`\n  font-style: italic;\n  ${stylesToInherit}\n`;\n\nconst UnderlineText = styled<TypographyComponent>(Typography).attrs({\n  textDecoration: 'underline',\n})`\n  ${stylesToInherit}\n`;\n\nconst StrikeThroughText = styled<TypographyComponent>(Typography).attrs({\n  textDecoration: 'line-through',\n})`\n  ${stylesToInherit}\n`;\n\nconst InlineCode = styled.code`\n  background-color: ${({ theme }) => theme.colors.neutral150};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  padding: ${({ theme }) => `0 ${theme.spaces[2]}`};\n  font-family: 'SF Mono', SFMono-Regular, ui-monospace, 'DejaVu Sans Mono', Menlo, Consolas,\n    monospace;\n  color: inherit;\n`;\n\ntype ModifierKey = Exclude<keyof Text, 'type' | 'text'>;\n\ntype ModifiersStore = {\n  [K in ModifierKey]: {\n    icon: React.ComponentType;\n    isValidEventKey: (event: React.KeyboardEvent<HTMLElement>) => boolean;\n    label: MessageDescriptor;\n    checkIsActive: (editor: Editor) => boolean;\n    handleToggle: (editor: Editor) => void;\n    renderLeaf: (children: React.JSX.Element | string) => React.JSX.Element;\n  };\n};\n\n/**\n * The default handler for checking if a modifier is active\n */\nconst baseCheckIsActive = (editor: Editor, name: ModifierKey) => {\n  const marks = Editor.marks(editor);\n  if (!marks) return false;\n\n  return Boolean(marks[name]);\n};\n\n/**\n * The default handler for toggling a modifier\n */\nconst baseHandleToggle = (editor: Editor, name: ModifierKey) => {\n  const marks = Editor.marks(editor);\n\n  // If there is no selection, set selection to the end of line\n  if (!editor.selection) {\n    const endOfEditor = Editor.end(editor, []);\n    Transforms.select(editor, endOfEditor);\n  }\n\n  // Toggle the modifier\n  if (marks?.[name]) {\n    Editor.removeMark(editor, name);\n  } else {\n    Editor.addMark(editor, name, true);\n  }\n};\n\nconst modifiers: ModifiersStore = {\n  bold: {\n    icon: Bold,\n    isValidEventKey: (event) => event.key === 'b',\n    label: { id: 'components.Blocks.modifiers.bold', defaultMessage: 'Bold' },\n    checkIsActive: (editor) => baseCheckIsActive(editor, 'bold'),\n    handleToggle: (editor) => baseHandleToggle(editor, 'bold'),\n    renderLeaf: (children) => <BoldText>{children}</BoldText>,\n  },\n  italic: {\n    icon: Italic,\n    isValidEventKey: (event) => event.key === 'i',\n    label: { id: 'components.Blocks.modifiers.italic', defaultMessage: 'Italic' },\n    checkIsActive: (editor) => baseCheckIsActive(editor, 'italic'),\n    handleToggle: (editor) => baseHandleToggle(editor, 'italic'),\n    renderLeaf: (children) => <ItalicText>{children}</ItalicText>,\n  },\n  underline: {\n    icon: Underline,\n    isValidEventKey: (event) => event.key === 'u',\n    label: { id: 'components.Blocks.modifiers.underline', defaultMessage: 'Underline' },\n    checkIsActive: (editor) => baseCheckIsActive(editor, 'underline'),\n    handleToggle: (editor) => baseHandleToggle(editor, 'underline'),\n    renderLeaf: (children) => <UnderlineText>{children}</UnderlineText>,\n  },\n  strikethrough: {\n    icon: StrikeThrough,\n    isValidEventKey: (event) => event.key === 'S' && event.shiftKey,\n    label: { id: 'components.Blocks.modifiers.strikethrough', defaultMessage: 'Strikethrough' },\n    checkIsActive: (editor) => baseCheckIsActive(editor, 'strikethrough'),\n    handleToggle: (editor) => baseHandleToggle(editor, 'strikethrough'),\n    renderLeaf: (children) => <StrikeThroughText>{children}</StrikeThroughText>,\n  },\n  code: {\n    icon: Code,\n    isValidEventKey: (event) => event.key === 'e',\n    label: { id: 'components.Blocks.modifiers.code', defaultMessage: 'Inline code' },\n    checkIsActive: (editor) => baseCheckIsActive(editor, 'code'),\n    handleToggle: (editor) => baseHandleToggle(editor, 'code'),\n    renderLeaf: (children) => <InlineCode>{children}</InlineCode>,\n  },\n};\n\nexport { type ModifiersStore, modifiers };\n"],"names":["stylesToInherit","css","BoldText","styled","Typography","attrs","fontWeight","ItalicText","UnderlineText","textDecoration","StrikeThroughText","InlineCode","code","theme","colors","neutral150","borderRadius","spaces","baseCheckIsActive","editor","name","marks","Editor","Boolean","baseHandleToggle","selection","endOfEditor","end","Transforms","select","removeMark","addMark","modifiers","bold","icon","Bold","isValidEventKey","event","key","label","id","defaultMessage","checkIsActive","handleToggle","renderLeaf","children","_jsx","italic","Italic","underline","Underline","strikethrough","StrikeThrough","shiftKey","Code"],"mappings":"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"}