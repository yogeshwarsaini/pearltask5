{"version":3,"file":"Input.mjs","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/Component/Input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { InputProps, useField } from '@strapi/admin/strapi-admin';\nimport { Field, Flex, IconButton } from '@strapi/design-system';\nimport { Trash } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { useDocumentContext } from '../../../../../hooks/useDocumentContext';\nimport { EditFieldLayout } from '../../../../../hooks/useDocumentLayout';\nimport { getTranslation } from '../../../../../utils/translations';\nimport { transformDocument } from '../../../utils/data';\nimport { createDefaultForm } from '../../../utils/forms';\nimport { type InputRendererProps } from '../../InputRenderer';\n\nimport { Initializer } from './Initializer';\nimport { NonRepeatableComponent } from './NonRepeatable';\nimport { RepeatableComponent } from './Repeatable';\n\ninterface ComponentInputProps\n  extends Omit<Extract<EditFieldLayout, { type: 'component' }>, 'size' | 'hint'>,\n    Pick<InputProps, 'hint'> {\n  labelAction?: React.ReactNode;\n  children: (props: InputRendererProps) => React.ReactNode;\n  /**\n   * We need layout to come from the props, and not via a hook, because Content History needs\n   * a way to modify the normal component layout to add hidden fields.\n   */\n  layout: EditFieldLayout[][];\n}\n\nconst ComponentInput = ({\n  label,\n  required,\n  name,\n  attribute,\n  disabled,\n  labelAction,\n  ...props\n}: ComponentInputProps) => {\n  const { formatMessage } = useIntl();\n  const field = useField(name);\n\n  const showResetComponent = !attribute.repeatable && field.value && !disabled;\n\n  const {\n    currentDocument: { components },\n  } = useDocumentContext('ComponentInput');\n\n  const handleInitialisationClick = () => {\n    const schema = components[attribute.component];\n    const form = createDefaultForm(schema, components);\n    const data = transformDocument(schema, components)(form);\n\n    field.onChange(name, data);\n  };\n\n  return (\n    <Field.Root error={field.error} required={required}>\n      <Flex justifyContent=\"space-between\">\n        <Field.Label action={labelAction}>\n          {label}\n          {attribute.repeatable && (\n            <>&nbsp;({Array.isArray(field.value) ? field.value.length : 0})</>\n          )}\n        </Field.Label>\n\n        {showResetComponent && (\n          <IconButton\n            label={formatMessage({\n              id: getTranslation('components.reset-entry'),\n              defaultMessage: 'Reset Entry',\n            })}\n            variant=\"ghost\"\n            onClick={() => {\n              field.onChange(name, null);\n            }}\n          >\n            <Trash />\n          </IconButton>\n        )}\n      </Flex>\n      {/**\n       * if the field isn't repeatable then we display a button to start the field\n       * TODO: should this just live in the `NonRepeatableComponent`?\n       */}\n      {!attribute.repeatable && !field.value && (\n        <Initializer disabled={disabled} name={name} onClick={handleInitialisationClick} />\n      )}\n      {!attribute.repeatable && field.value ? (\n        <NonRepeatableComponent attribute={attribute} name={name} disabled={disabled} {...props}>\n          {props.children}\n        </NonRepeatableComponent>\n      ) : null}\n      {attribute.repeatable && (\n        <RepeatableComponent attribute={attribute} name={name} disabled={disabled} {...props}>\n          {props.children}\n        </RepeatableComponent>\n      )}\n      <Field.Error />\n    </Field.Root>\n  );\n};\n\nconst MemoizedComponentInput = React.memo(ComponentInput);\n\nexport { MemoizedComponentInput as ComponentInput };\nexport type { ComponentInputProps };\n"],"names":["ComponentInput","label","required","name","attribute","disabled","labelAction","props","formatMessage","useIntl","field","useField","showResetComponent","repeatable","value","currentDocument","components","useDocumentContext","handleInitialisationClick","schema","component","form","createDefaultForm","data","transformDocument","onChange","_jsxs","Field","Root","error","Flex","justifyContent","Label","action","_Fragment","Array","isArray","length","_jsx","IconButton","id","getTranslation","defaultMessage","variant","onClick","Trash","Initializer","NonRepeatableComponent","children","RepeatableComponent","Error","MemoizedComponentInput","React","memo"],"mappings":"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"}