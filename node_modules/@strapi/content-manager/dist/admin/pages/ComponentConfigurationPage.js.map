{"version":3,"file":"ComponentConfigurationPage.js","sources":["../../../admin/src/pages/ComponentConfigurationPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Page, useNotification, useAPIErrorHandler } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\n\nimport { TEMP_FIELD_NAME } from '../components/ConfigurationForm/Fields';\nimport { ConfigurationForm, ConfigurationFormProps } from '../components/ConfigurationForm/Form';\nimport { ComponentsDictionary, extractContentTypeComponents } from '../hooks/useContentTypeSchema';\nimport {\n  DEFAULT_SETTINGS,\n  EditLayout,\n  convertEditLayoutToFieldLayouts,\n} from '../hooks/useDocumentLayout';\nimport { useTypedSelector } from '../modules/hooks';\nimport {\n  useGetComponentConfigurationQuery,\n  useUpdateComponentConfigurationMutation,\n} from '../services/components';\nimport { useGetInitialDataQuery } from '../services/init';\nimport { setIn } from '../utils/objects';\n\nimport type { Component, FindComponentConfiguration } from '../../../shared/contracts/components';\nimport type { Metadatas } from '../../../shared/contracts/content-types';\n\n/* -------------------------------------------------------------------------------------------------\n * ComponentConfigurationPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst ComponentConfigurationPage = () => {\n  /**\n   * useDocumentLayout only works for documents, not components,\n   * it feels weird to make that hook work for both when this is SUCH\n   * a unique use case and we only do it here, so in short, we essentially\n   * just extracted the logic to make an edit view layout and reproduced it here.\n   */\n  const { slug: model } = useParams<{ slug: string }>();\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n\n  const {\n    components,\n    fieldSizes,\n    schema,\n    error: errorSchema,\n    isLoading: isLoadingSchema,\n    isFetching: isFetchingSchema,\n  } = useGetInitialDataQuery(undefined, {\n    selectFromResult: (res) => {\n      const schema = res.data?.components.find((ct) => ct.uid === model);\n\n      const componentsByKey = res.data?.components.reduce<ComponentsDictionary>(\n        (acc, component) => {\n          acc[component.uid] = component;\n\n          return acc;\n        },\n        {}\n      );\n\n      const components = extractContentTypeComponents(schema?.attributes, componentsByKey);\n\n      const fieldSizes = Object.entries(res.data?.fieldSizes ?? {}).reduce<\n        ConfigurationFormProps['fieldSizes']\n      >((acc, [attributeName, { default: size }]) => {\n        acc[attributeName] = size;\n\n        return acc;\n      }, {});\n\n      return {\n        isFetching: res.isFetching,\n        isLoading: res.isLoading,\n        error: res.error,\n        components,\n        schema,\n        fieldSizes,\n      };\n    },\n  });\n\n  React.useEffect(() => {\n    if (errorSchema) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(errorSchema),\n      });\n    }\n  }, [errorSchema, formatAPIError, toggleNotification]);\n\n  const {\n    data,\n    isLoading: isLoadingConfig,\n    isFetching: isFetchingConfig,\n    error,\n  } = useGetComponentConfigurationQuery(model ?? '');\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(error),\n      });\n    }\n  }, [error, formatAPIError, toggleNotification]);\n\n  /**\n   * you **must** check if we're loading or fetching in case the component gets new props\n   * but nothing was unmounted, it then becomes a fetch, not a load.\n   */\n  const isLoading = isLoadingConfig || isLoadingSchema || isFetchingConfig || isFetchingSchema;\n\n  const editLayout = React.useMemo(\n    () =>\n      data && !isLoading\n        ? formatEditLayout(data, { schema, components })\n        : ({\n            layout: [],\n            components: {},\n            metadatas: {},\n            options: {},\n            settings: DEFAULT_SETTINGS,\n          } as EditLayout),\n    [data, isLoading, schema, components]\n  );\n\n  const [updateConfiguration] = useUpdateComponentConfigurationMutation();\n  const handleSubmit: ConfigurationFormProps['onSubmit'] = async (formData) => {\n    try {\n      /**\n       * We reconstruct the metadatas object by taking the existing list metadatas\n       * and re-merging that by attribute name with the current list metadatas, whilst overwriting\n       * the data from the form we've built.\n       */\n      const meta = Object.entries(data?.component.metadatas ?? {}).reduce<Metadatas>(\n        (acc, [name, { edit, list }]) => {\n          const {\n            __temp_key__,\n            size: _size,\n            name: _name,\n            ...editedMetadata\n          } = formData.layout.flatMap((row) => row.children).find((field) => field.name === name) ??\n          {};\n\n          acc[name] = {\n            edit: {\n              ...edit,\n              ...editedMetadata,\n            },\n            list,\n          };\n\n          return acc;\n        },\n        {}\n      );\n\n      const res = await updateConfiguration({\n        layouts: {\n          edit: formData.layout.map((row) =>\n            row.children.reduce<Array<{ name: string; size: number }>>((acc, { name, size }) => {\n              if (name !== TEMP_FIELD_NAME) {\n                return [...acc, { name, size }];\n              }\n\n              return acc;\n            }, [])\n          ),\n          list: data?.component.layouts.list,\n        },\n        settings: setIn(formData.settings, 'displayName', undefined),\n        metadatas: meta,\n        uid: model,\n      });\n\n      if ('data' in res) {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'notification.success.saved', defaultMessage: 'Saved' }),\n        });\n      } else {\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(res.error),\n        });\n      }\n    } catch {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n    }\n  };\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (error || errorSchema || !schema) {\n    return <Page.Error />;\n  }\n\n  return (\n    <>\n      <Page.Title>{`Configure ${editLayout.settings.displayName} Edit View`}</Page.Title>\n      <ConfigurationForm\n        onSubmit={handleSubmit}\n        attributes={schema.attributes}\n        fieldSizes={fieldSizes}\n        layout={editLayout}\n      />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\n\nconst formatEditLayout = (\n  data: FindComponentConfiguration.Response['data'],\n  { schema, components }: { schema?: Component; components: ComponentsDictionary }\n) => {\n  const editAttributes = convertEditLayoutToFieldLayouts(\n    data.component.layouts.edit,\n    schema?.attributes,\n    data.component.metadatas,\n    { configurations: data.components, schemas: components }\n  );\n\n  const componentEditAttributes = Object.entries(data.components).reduce<EditLayout['components']>(\n    (acc, [uid, configuration]) => {\n      acc[uid] = {\n        layout: convertEditLayoutToFieldLayouts(\n          configuration.layouts.edit,\n          components[uid].attributes,\n          configuration.metadatas\n        ),\n        settings: {\n          ...configuration.settings,\n          icon: components[uid].info.icon,\n          displayName: components[uid].info.displayName,\n        },\n      };\n      return acc;\n    },\n    {}\n  );\n\n  const editMetadatas = Object.entries(data.component.metadatas).reduce<EditLayout['metadatas']>(\n    (acc, [attribute, metadata]) => {\n      return {\n        ...acc,\n        [attribute]: metadata.edit,\n      };\n    },\n    {}\n  );\n\n  return {\n    layout: [editAttributes],\n    components: componentEditAttributes,\n    metadatas: editMetadatas,\n    options: {\n      ...schema?.options,\n      ...schema?.pluginOptions,\n    },\n    settings: {\n      ...data.component.settings,\n      displayName: schema?.info.displayName,\n    },\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\n\nconst ProtectedComponentConfigurationPage = () => {\n  const permissions = useTypedSelector(\n    (state) => state.admin_app.permissions.contentManager?.componentsConfigurations\n  );\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <ComponentConfigurationPage />\n    </Page.Protect>\n  );\n};\n\nexport { ComponentConfigurationPage, ProtectedComponentConfigurationPage };\n"],"names":["ComponentConfigurationPage","slug","model","useParams","toggleNotification","useNotification","formatMessage","useIntl","_unstableFormatAPIError","formatAPIError","useAPIErrorHandler","components","fieldSizes","schema","error","errorSchema","isLoading","isLoadingSchema","isFetching","isFetchingSchema","useGetInitialDataQuery","undefined","selectFromResult","res","data","find","ct","uid","componentsByKey","reduce","acc","component","extractContentTypeComponents","attributes","Object","entries","attributeName","default","size","React","useEffect","type","message","isLoadingConfig","isFetchingConfig","useGetComponentConfigurationQuery","editLayout","useMemo","formatEditLayout","layout","metadatas","options","settings","DEFAULT_SETTINGS","updateConfiguration","useUpdateComponentConfigurationMutation","handleSubmit","formData","meta","name","edit","list","__temp_key__","_size","_name","editedMetadata","flatMap","row","children","field","layouts","map","TEMP_FIELD_NAME","setIn","id","defaultMessage","_jsx","Page","Loading","Error","_jsxs","_Fragment","Title","displayName","ConfigurationForm","onSubmit","editAttributes","convertEditLayoutToFieldLayouts","configurations","schemas","componentEditAttributes","configuration","icon","info","editMetadatas","attribute","metadata","pluginOptions","ProtectedComponentConfigurationPage","permissions","useTypedSelector","state","admin_app","contentManager","componentsConfigurations","Protect"],"mappings":"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"}