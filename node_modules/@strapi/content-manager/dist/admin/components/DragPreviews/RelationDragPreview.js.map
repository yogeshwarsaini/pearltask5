{"version":3,"file":"RelationDragPreview.js","sources":["../../../../admin/src/components/DragPreviews/RelationDragPreview.tsx"],"sourcesContent":["import { Box, Flex, IconButton, Typography } from '@strapi/design-system';\nimport { Cross, Drag } from '@strapi/icons';\n\nimport { DocumentStatus } from '../../pages/EditView/components/DocumentStatus';\nimport {\n  DisconnectButton,\n  LinkEllipsis,\n  FlexWrapper,\n} from '../../pages/EditView/components/FormInputs/Relations/Relations';\n\nimport type { Data } from '@strapi/types';\n\ninterface RelationDragPreviewProps {\n  status?: string;\n  displayedValue: string;\n  id: Data.ID;\n  index: number;\n  width: number;\n}\n\nconst RelationDragPreview = ({ status, displayedValue, width }: RelationDragPreviewProps) => {\n  return (\n    <Box style={{ width }}>\n      <Flex\n        paddingTop={2}\n        paddingBottom={2}\n        paddingLeft={2}\n        paddingRight={4}\n        hasRadius\n        borderWidth={1}\n        background=\"neutral0\"\n        borderColor=\"neutral200\"\n        justifyContent=\"space-between\"\n        gap={4}\n      >\n        <FlexWrapper gap={1}>\n          <IconButton withTooltip={false} label=\"\" variant=\"ghost\">\n            <Drag />\n          </IconButton>\n          <Flex width=\"100%\" minWidth={0} justifyContent=\"space-between\">\n            <Box minWidth={0} paddingTop={1} paddingBottom={1} paddingRight={4}>\n              <LinkEllipsis href=\"\">\n                <Typography textColor=\"primary600\" ellipsis>\n                  {displayedValue}\n                </Typography>\n              </LinkEllipsis>\n            </Box>\n            {status ? <DocumentStatus status={status} /> : null}\n          </Flex>\n        </FlexWrapper>\n        <DisconnectButton type=\"button\">\n          <Cross width=\"12px\" />\n        </DisconnectButton>\n      </Flex>\n    </Box>\n  );\n};\n\nexport { RelationDragPreview };\nexport type { RelationDragPreviewProps };\n"],"names":["RelationDragPreview","status","displayedValue","width","_jsx","Box","style","_jsxs","Flex","paddingTop","paddingBottom","paddingLeft","paddingRight","hasRadius","borderWidth","background","borderColor","justifyContent","gap","FlexWrapper","IconButton","withTooltip","label","variant","Drag","minWidth","LinkEllipsis","href","Typography","textColor","ellipsis","DocumentStatus","DisconnectButton","type","Cross"],"mappings":";;;;;;;;AAoBMA,MAAAA,mBAAAA,GAAsB,CAAC,EAAEC,MAAM,EAAEC,cAAc,EAAEC,KAAK,EAA4B,GAAA;AACtF,IAAA,qBACEC,cAACC,CAAAA,gBAAAA,EAAAA;QAAIC,KAAO,EAAA;AAAEH,YAAAA;AAAM,SAAA;AAClB,QAAA,QAAA,gBAAAI,eAACC,CAAAA,iBAAAA,EAAAA;YACCC,UAAY,EAAA,CAAA;YACZC,aAAe,EAAA,CAAA;YACfC,WAAa,EAAA,CAAA;YACbC,YAAc,EAAA,CAAA;YACdC,SAAS,EAAA,IAAA;YACTC,WAAa,EAAA,CAAA;YACbC,UAAW,EAAA,UAAA;YACXC,WAAY,EAAA,YAAA;YACZC,cAAe,EAAA,eAAA;YACfC,GAAK,EAAA,CAAA;;8BAELX,eAACY,CAAAA,qBAAAA,EAAAA;oBAAYD,GAAK,EAAA,CAAA;;sCAChBd,cAACgB,CAAAA,uBAAAA,EAAAA;4BAAWC,WAAa,EAAA,KAAA;4BAAOC,KAAM,EAAA,EAAA;4BAAGC,OAAQ,EAAA,OAAA;AAC/C,4BAAA,QAAA,gBAAAnB,cAACoB,CAAAA,UAAAA,EAAAA,EAAAA;;sCAEHjB,eAACC,CAAAA,iBAAAA,EAAAA;4BAAKL,KAAM,EAAA,MAAA;4BAAOsB,QAAU,EAAA,CAAA;4BAAGR,cAAe,EAAA,eAAA;;8CAC7Cb,cAACC,CAAAA,gBAAAA,EAAAA;oCAAIoB,QAAU,EAAA,CAAA;oCAAGhB,UAAY,EAAA,CAAA;oCAAGC,aAAe,EAAA,CAAA;oCAAGE,YAAc,EAAA,CAAA;AAC/D,oCAAA,QAAA,gBAAAR,cAACsB,CAAAA,sBAAAA,EAAAA;wCAAaC,IAAK,EAAA,EAAA;AACjB,wCAAA,QAAA,gBAAAvB,cAACwB,CAAAA,uBAAAA,EAAAA;4CAAWC,SAAU,EAAA,YAAA;4CAAaC,QAAQ,EAAA,IAAA;AACxC5B,4CAAAA,QAAAA,EAAAA;;;;AAIND,gCAAAA,MAAAA,iBAASG,cAAC2B,CAAAA,6BAAAA,EAAAA;oCAAe9B,MAAQA,EAAAA;AAAa,iCAAA,CAAA,GAAA;;;;;8BAGnDG,cAAC4B,CAAAA,0BAAAA,EAAAA;oBAAiBC,IAAK,EAAA,QAAA;AACrB,oBAAA,QAAA,gBAAA7B,cAAC8B,CAAAA,WAAAA,EAAAA;wBAAM/B,KAAM,EAAA;;;;;;AAKvB;;;;"}