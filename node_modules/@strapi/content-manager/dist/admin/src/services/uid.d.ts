/**
 * Related to the InputUID component, not the UIDs of content-types.
 */
import { GenerateUID, CheckUIDAvailability } from '../../../shared/contracts/uid';
declare const useGenerateUIDMutation: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseMutation<import("@reduxjs/toolkit/query").MutationDefinition<{
    contentTypeUID: string;
    data: {
        id: import("@strapi/types/dist/data").ID;
    } & {
        [key: string]: any;
    };
    field: string;
} & {
    params: GenerateUID.Request['query'];
}, import("@reduxjs/toolkit/query").BaseQueryFn<string | import("@strapi/admin/strapi-admin").QueryArguments, unknown, import("@strapi/admin/strapi-admin").BaseQueryError, {}, {}>, "ComponentConfiguration" | "ContentTypesConfiguration" | "ContentTypeSettings" | "Document" | "InitialData" | "HistoryVersion" | "Relations" | "UidAvailability" | "RecentDocumentList" | "GuidedTourMeta" | "CountDocuments", string, "adminApi">>, useGetDefaultUIDQuery: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQuery<import("@reduxjs/toolkit/query").QueryDefinition<{
    contentTypeUID: string;
    data: {
        id: import("@strapi/types/dist/data").ID;
    } & {
        [key: string]: any;
    };
    field: string;
} & {
    params: GenerateUID.Request['query'];
}, import("@reduxjs/toolkit/query").BaseQueryFn<string | import("@strapi/admin/strapi-admin").QueryArguments, unknown, import("@strapi/admin/strapi-admin").BaseQueryError, {}, {}>, "ComponentConfiguration" | "ContentTypesConfiguration" | "ContentTypeSettings" | "Document" | "InitialData" | "HistoryVersion" | "Relations" | "UidAvailability" | "RecentDocumentList" | "GuidedTourMeta" | "CountDocuments", string, "adminApi">>, useGetAvailabilityQuery: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQuery<import("@reduxjs/toolkit/query").QueryDefinition<{
    contentTypeUID: string;
    field: string;
    value: string;
} & {
    params: CheckUIDAvailability.Request['query'];
}, import("@reduxjs/toolkit/query").BaseQueryFn<string | import("@strapi/admin/strapi-admin").QueryArguments, unknown, import("@strapi/admin/strapi-admin").BaseQueryError, {}, {}>, "ComponentConfiguration" | "ContentTypesConfiguration" | "ContentTypeSettings" | "Document" | "InitialData" | "HistoryVersion" | "Relations" | "UidAvailability" | "RecentDocumentList" | "GuidedTourMeta" | "CountDocuments", CheckUIDAvailability.Response, "adminApi">>;
export { useGenerateUIDMutation, useGetDefaultUIDQuery, useGetAvailabilityQuery };
