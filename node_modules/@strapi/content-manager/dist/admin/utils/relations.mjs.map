{"version":3,"file":"relations.mjs","sources":["../../../admin/src/utils/relations.ts"],"sourcesContent":["import type { MainField } from './attributes';\nimport type { RelationResult } from '../../../shared/contracts/relations';\n\n/**\n * @internal\n * @description Get the label of a relation, the contract has [key: string]: unknown,\n * so we need to check if the mainFieldKey is defined and if the relation has a value\n * under that property. If it does, we then verify it's type of string and return it.\n *\n * We fallback to the documentId.\n */\nconst getRelationLabel = (relation: RelationResult, mainField?: MainField): string => {\n  const label = mainField && relation[mainField.name] ? relation[mainField.name] : null;\n\n  if (typeof label === 'string') {\n    return label;\n  }\n\n  return relation.documentId;\n};\n\nexport { getRelationLabel };\n"],"names":["getRelationLabel","relation","mainField","label","name","documentId"],"mappings":"AAGA;;;;;;;IAQA,MAAMA,gBAAmB,GAAA,CAACC,QAA0BC,EAAAA,SAAAA,GAAAA;AAClD,IAAA,MAAMC,KAAQD,GAAAA,SAAAA,IAAaD,QAAQ,CAACC,SAAUE,CAAAA,IAAI,CAAC,GAAGH,QAAQ,CAACC,SAAUE,CAAAA,IAAI,CAAC,GAAG,IAAA;IAEjF,IAAI,OAAOD,UAAU,QAAU,EAAA;QAC7B,OAAOA,KAAAA;AACT;AAEA,IAAA,OAAOF,SAASI,UAAU;AAC5B;;;;"}