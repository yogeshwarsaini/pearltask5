{"version":3,"file":"attributes.js","sources":["../../../../../server/src/services/utils/configuration/attributes.ts"],"sourcesContent":["import _ from 'lodash';\nimport { intersection } from 'lodash/fp';\nimport { contentTypes as contentTypesUtils } from '@strapi/utils';\n\nconst { getNonVisibleAttributes, getWritableAttributes } = contentTypesUtils;\nconst { PUBLISHED_AT_ATTRIBUTE, CREATED_BY_ATTRIBUTE, UPDATED_BY_ATTRIBUTE } =\n  contentTypesUtils.constants;\n\nconst NON_SORTABLES = ['component', 'json', 'media', 'richtext', 'dynamiczone', 'blocks'];\nconst SORTABLE_RELATIONS = ['oneToOne', 'manyToOne'];\n\nconst NON_LISTABLES = ['json', 'password', 'richtext', 'dynamiczone', 'blocks'];\nconst LISTABLE_RELATIONS = ['oneToOne', 'oneToMany', 'manyToOne', 'manyToMany'];\n\n// hidden fields are fields that are configured to be hidden from list, and edit views\nconst isHidden = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  const isHidden = _.get(schema, ['config', 'attributes', name, 'hidden'], false);\n  if (isHidden === true) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isListable = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  if (isHidden(schema, name)) {\n    return false;\n  }\n\n  const attribute = schema.attributes[name];\n  if (NON_LISTABLES.includes(attribute.type)) {\n    return false;\n  }\n\n  if (isRelation(attribute) && !LISTABLE_RELATIONS.includes(attribute.relationType)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isSortable = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  if (schema.modelType === 'component' && name === 'id') return false;\n\n  const attribute = schema.attributes[name];\n  if (NON_SORTABLES.includes(attribute.type)) {\n    return false;\n  }\n\n  if (isRelation(attribute) && !SORTABLE_RELATIONS.includes(attribute.relationType)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isSearchable = (schema: any, name: any) => {\n  return isSortable(schema, name);\n};\n\nconst isVisible = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  if (isHidden(schema, name)) {\n    return false;\n  }\n\n  if (isTimestamp(schema, name) || name === 'id' || name === 'documentId') {\n    return false;\n  }\n\n  if (isPublicationField(name)) {\n    return false;\n  }\n\n  if (isCreatorField(schema, name)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isPublicationField = (name: any) => PUBLISHED_AT_ATTRIBUTE === name;\n\nconst isTimestamp = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  const timestamps = contentTypesUtils.getTimestamps(schema);\n  if (!timestamps || !Array.isArray(timestamps)) {\n    return false;\n  }\n\n  if (timestamps.includes(name)) {\n    return true;\n  }\n};\n\nconst isCreatorField = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  const creatorFields = contentTypesUtils.getCreatorFields(schema);\n  if (!creatorFields || !Array.isArray(creatorFields)) {\n    return false;\n  }\n\n  if (creatorFields.includes(name)) {\n    return true;\n  }\n};\n\nconst isRelation = (attribute: any) => attribute.type === 'relation';\n\nconst hasRelationAttribute = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  if (isHidden(schema, name)) {\n    return false;\n  }\n\n  if (!isVisible(schema, name)) {\n    return false;\n  }\n\n  return isRelation(schema.attributes[name]);\n};\n\nconst hasEditableAttribute = (schema: any, name: any) => {\n  if (!_.has(schema.attributes, name)) {\n    return false;\n  }\n\n  if (isHidden(schema, name)) {\n    return false;\n  }\n\n  if (!isVisible(schema, name)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst findFirstStringAttribute = (schema: any) => {\n  return Object.keys(schema.attributes || {}).find((key) => {\n    const { type } = schema.attributes[key];\n    return type === 'string' && key !== 'id';\n  });\n};\n\nconst getDefaultMainField = (schema: any) => findFirstStringAttribute(schema) || 'id';\n\n/**\n * Returns list of all sortable attributes for a given content type schema\n * TODO V5: Refactor non visible fields to be a part of content-manager schema so we can use isSortable instead\n * @param {*} schema\n * @returns\n */\nconst getSortableAttributes = (schema: any) => {\n  const validAttributes = Object.keys(schema.attributes).filter((key) => isListable(schema, key));\n\n  const model = strapi.getModel(schema.uid);\n  const nonVisibleWritableAttributes = intersection(\n    getNonVisibleAttributes(model),\n    getWritableAttributes(model)\n  );\n\n  return [\n    'id',\n    ...validAttributes,\n    ...nonVisibleWritableAttributes,\n    CREATED_BY_ATTRIBUTE,\n    UPDATED_BY_ATTRIBUTE,\n  ];\n};\n\nexport {\n  isSortable,\n  isVisible,\n  isSearchable,\n  isRelation,\n  isListable,\n  hasEditableAttribute,\n  hasRelationAttribute,\n  getDefaultMainField,\n  getSortableAttributes,\n};\n"],"names":["getNonVisibleAttributes","getWritableAttributes","contentTypesUtils","PUBLISHED_AT_ATTRIBUTE","CREATED_BY_ATTRIBUTE","UPDATED_BY_ATTRIBUTE","constants","NON_SORTABLES","SORTABLE_RELATIONS","NON_LISTABLES","LISTABLE_RELATIONS","isHidden","schema","name","_","has","attributes","get","isListable","attribute","includes","type","isRelation","relationType","isSortable","modelType","isSearchable","isVisible","isTimestamp","isPublicationField","isCreatorField","timestamps","getTimestamps","Array","isArray","creatorFields","getCreatorFields","hasRelationAttribute","hasEditableAttribute","findFirstStringAttribute","Object","keys","find","key","getDefaultMainField","getSortableAttributes","validAttributes","filter","model","strapi","getModel","uid","nonVisibleWritableAttributes","intersection"],"mappings":"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"}