{"version":3,"file":"metadatas.mjs","sources":["../../../../../server/src/services/utils/configuration/metadatas.ts"],"sourcesContent":["import _ from 'lodash';\nimport { getService } from '../../../utils';\nimport {\n  isSortable,\n  isSearchable,\n  isVisible,\n  isListable,\n  isRelation,\n  getDefaultMainField,\n} from './attributes';\n\nfunction createDefaultMetadatas(schema: any) {\n  return {\n    ...Object.keys(schema.attributes).reduce((acc: any, name) => {\n      acc[name] = createDefaultMetadata(schema, name);\n      return acc;\n    }, {}),\n    id: {\n      edit: {},\n      list: {\n        label: 'id',\n        searchable: true,\n        sortable: true,\n      },\n    },\n    documentId: {\n      edit: {},\n      list: {\n        label: 'documentId',\n        searchable: true,\n        sortable: true,\n      },\n    },\n  };\n}\n\nfunction createDefaultMetadata(schema: any, name: any) {\n  const edit = {\n    label: name,\n    description: '',\n    placeholder: '',\n    visible: isVisible(schema, name),\n    editable: true,\n  } as any;\n\n  const fieldAttributes = schema.attributes[name];\n  if (isRelation(fieldAttributes)) {\n    const { targetModel } = fieldAttributes;\n\n    const targetSchema = getTargetSchema(targetModel);\n\n    if (targetSchema) {\n      edit.mainField = getDefaultMainField(targetSchema);\n    }\n  }\n\n  _.assign(\n    edit,\n    _.pick(_.get(schema, ['config', 'metadatas', name, 'edit'], {}), [\n      'label',\n      'description',\n      'placeholder',\n      'visible',\n      'editable',\n      'mainField',\n    ])\n  );\n\n  const list = {\n    // @ts-expect-error we need to specify these properties\n    label: name,\n    // @ts-expect-error we need to specify these properties\n    searchable: isSearchable(schema, name),\n    // @ts-expect-error we need to specify these properties\n    sortable: isSortable(schema, name),\n    ..._.pick(_.get(schema, ['config', 'metadatas', name, 'list'], {}), [\n      'label',\n      'searchable',\n      'sortable',\n    ]),\n  };\n\n  return { edit, list };\n}\n\n/** Synchronisation functions */\n\nasync function syncMetadatas(configuration: any, schema: any) {\n  // clear all keys that do not exist anymore\n  if (_.isEmpty(configuration.metadatas)) {\n    return createDefaultMetadatas(schema);\n  }\n\n  // remove old keys\n  const metasWithValidKeys = _.pick(configuration.metadatas, Object.keys(schema.attributes));\n\n  // add new keys and missing fields\n  const metasWithDefaults = _.merge({}, createDefaultMetadatas(schema), metasWithValidKeys);\n\n  // clear the invalid mainFields\n  const updatedMetas = Object.keys(metasWithDefaults).reduce((acc, key) => {\n    const { edit, list } = metasWithDefaults[key];\n    const attr = schema.attributes[key];\n\n    const updatedMeta = { edit, list };\n\n    // update sortable attr\n    if (list.sortable && !isSortable(schema, key)) {\n      _.set(updatedMeta, ['list', 'sortable'], false);\n      _.set(acc, [key], updatedMeta);\n    }\n\n    if (list.searchable && !isSearchable(schema, key)) {\n      _.set(updatedMeta, ['list', 'searchable'], false);\n      _.set(acc, [key], updatedMeta);\n    }\n\n    if (!_.has(edit, 'mainField')) return acc;\n\n    // remove mainField if the attribute is not a relation anymore\n    if (!isRelation(attr)) {\n      _.set(updatedMeta, 'edit', _.omit(edit, ['mainField']));\n      _.set(acc, [key], updatedMeta);\n      return acc;\n    }\n\n    // if the mainField is id you can keep it\n    if (edit.mainField === 'id') return acc;\n\n    // check the mainField in the targetModel\n    const targetSchema = getTargetSchema(attr.targetModel);\n\n    if (!targetSchema) return acc;\n\n    if (!isSortable(targetSchema, edit.mainField) && !isListable(targetSchema, edit.mainField)) {\n      _.set(updatedMeta, ['edit', 'mainField'], getDefaultMainField(targetSchema));\n      _.set(acc, [key], updatedMeta);\n      return acc;\n    }\n\n    return acc;\n  }, {});\n\n  return _.assign(metasWithDefaults, updatedMetas);\n}\n\nconst getTargetSchema = (targetModel: any) => {\n  return getService('content-types').findContentType(targetModel);\n};\n\nexport { createDefaultMetadatas, syncMetadatas };\n"],"names":["createDefaultMetadatas","schema","Object","keys","attributes","reduce","acc","name","createDefaultMetadata","id","edit","list","label","searchable","sortable","documentId","description","placeholder","visible","isVisible","editable","fieldAttributes","isRelation","targetModel","targetSchema","getTargetSchema","mainField","getDefaultMainField","_","assign","pick","get","isSearchable","isSortable","syncMetadatas","configuration","isEmpty","metadatas","metasWithValidKeys","metasWithDefaults","merge","updatedMetas","key","attr","updatedMeta","set","has","omit","isListable","getService","findContentType"],"mappings":"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"}