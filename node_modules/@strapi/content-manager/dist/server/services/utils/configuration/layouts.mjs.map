{"version":3,"file":"layouts.mjs","sources":["../../../../../server/src/services/utils/configuration/layouts.ts"],"sourcesContent":["import _ from 'lodash';\nimport { getService } from '../../../utils';\nimport { isListable, hasEditableAttribute, hasRelationAttribute } from './attributes';\n\nconst DEFAULT_LIST_LENGTH = 4;\nconst MAX_ROW_SIZE = 12;\n\nconst isAllowedFieldSize = (type: any, size: any) => {\n  const { getFieldSize } = getService('field-sizes');\n  const fieldSize = getFieldSize(type);\n\n  // Check if field was locked to another size\n  if (!fieldSize.isResizable && size !== fieldSize.default) {\n    return false;\n  }\n\n  // Otherwise allow unless it's bigger than a row\n  return size <= MAX_ROW_SIZE;\n};\n\nconst getDefaultFieldSize = (attribute: any) => {\n  const { hasFieldSize, getFieldSize } = getService('field-sizes');\n\n  // Check if it's a custom field with a custom size and get the default size for the field type\n  return getFieldSize(hasFieldSize(attribute.customField) ? attribute.customField : attribute.type)\n    .default;\n};\n\nasync function createDefaultLayouts(schema: any) {\n  return {\n    // @ts-expect-error necessary to provide this default layout\n    list: createDefaultListLayout(schema),\n    // @ts-expect-error necessary to provide this default layout\n    edit: createDefaultEditLayout(schema),\n    ..._.pick(_.get(schema, ['config', 'layouts'], {}), ['list', 'edit']),\n  };\n}\n\nfunction createDefaultListLayout(schema: any) {\n  return Object.keys(schema.attributes)\n    .filter((name) => isListable(schema, name) && name !== 'documentId')\n    .slice(0, DEFAULT_LIST_LENGTH);\n}\n\nconst rowSize = (els: any) => els.reduce((sum: any, el: any) => sum + el.size, 0);\n\nfunction createDefaultEditLayout(schema: any) {\n  const keys = Object.keys(schema.attributes).filter((name) => hasEditableAttribute(schema, name));\n\n  return appendToEditLayout([], keys, schema);\n}\n\n/** Synchronisation functions */\n\nfunction syncLayouts(configuration: any, schema: any) {\n  if (_.isEmpty(configuration.layouts)) return createDefaultLayouts(schema);\n\n  const { list = [], editRelations = [], edit = [] } = configuration.layouts || {};\n\n  let cleanList = list.filter((attr: any) => isListable(schema, attr));\n\n  // TODO V5: remove editRelations\n  const cleanEditRelations = editRelations.filter((attr: any) =>\n    hasRelationAttribute(schema, attr)\n  );\n\n  // backward compatibility with when relations were on the side of the layout\n  // it migrates the displayed relations to the main edit layout\n  const elementsToReAppend = [...cleanEditRelations];\n  let cleanEdit: unknown[] = [];\n  for (const row of edit) {\n    const newRow: unknown[] = [];\n\n    for (const el of row) {\n      if (!hasEditableAttribute(schema, el.name)) continue;\n\n      // Check if the field is a custom field with a custom size.\n      // If so, use the custom size instead of the type size\n      const { hasFieldSize } = getService('field-sizes');\n      const fieldType = hasFieldSize(schema.attributes[el.name].customField)\n        ? schema.attributes[el.name].customField\n        : schema.attributes[el.name].type;\n\n      /* if the type of a field was changed (ex: string -> json) or a new field was added in the schema\n         and the new type doesn't allow the size of the previous type, append the field at the end of layouts\n      */\n      if (!isAllowedFieldSize(fieldType, el.size)) {\n        elementsToReAppend.push(el.name);\n        continue;\n      }\n\n      newRow.push(el);\n    }\n\n    if (newRow.length > 0) {\n      cleanEdit.push(newRow);\n    }\n  }\n\n  cleanEdit = appendToEditLayout(cleanEdit as any, elementsToReAppend, schema);\n\n  const newAttributes = _.difference(\n    Object.keys(schema.attributes),\n    Object.keys(configuration.metadatas)\n  );\n\n  /** Add new attributes where they belong */\n\n  if (cleanList.length < DEFAULT_LIST_LENGTH) {\n    // add newAttributes\n    // only add valid listable attributes\n    cleanList = _.uniq(\n      cleanList\n        .concat(newAttributes.filter((key) => isListable(schema, key)))\n        .slice(0, DEFAULT_LIST_LENGTH)\n    );\n  }\n\n  // add new attributes to edit view\n  const newEditAttributes = newAttributes.filter((key) => hasEditableAttribute(schema, key));\n\n  cleanEdit = appendToEditLayout(cleanEdit, newEditAttributes, schema);\n\n  return {\n    list: cleanList.length > 0 ? cleanList : createDefaultListLayout(schema),\n    edit: cleanEdit.length > 0 ? cleanEdit : createDefaultEditLayout(schema),\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/default-param-last\nconst appendToEditLayout = (layout: any = [], keysToAppend: any, schema: any) => {\n  if (keysToAppend.length === 0) return layout;\n  let currentRowIndex = Math.max(layout.length - 1, 0);\n\n  // init currentRow if necessary\n  if (!layout[currentRowIndex]) {\n    layout[currentRowIndex] = [];\n  }\n\n  for (const key of keysToAppend) {\n    const attribute = schema.attributes[key];\n\n    const attributeSize = getDefaultFieldSize(attribute);\n    const currenRowSize = rowSize(layout[currentRowIndex]);\n\n    if (currenRowSize + attributeSize > MAX_ROW_SIZE) {\n      currentRowIndex += 1;\n      layout[currentRowIndex] = [];\n    }\n\n    layout[currentRowIndex].push({\n      name: key,\n      size: attributeSize,\n    });\n  }\n\n  return layout;\n};\n\nexport { createDefaultLayouts, syncLayouts };\n"],"names":["DEFAULT_LIST_LENGTH","MAX_ROW_SIZE","isAllowedFieldSize","type","size","getFieldSize","getService","fieldSize","isResizable","default","getDefaultFieldSize","attribute","hasFieldSize","customField","createDefaultLayouts","schema","list","createDefaultListLayout","edit","createDefaultEditLayout","_","pick","get","Object","keys","attributes","filter","name","isListable","slice","rowSize","els","reduce","sum","el","hasEditableAttribute","appendToEditLayout","syncLayouts","configuration","isEmpty","layouts","editRelations","cleanList","attr","cleanEditRelations","hasRelationAttribute","elementsToReAppend","cleanEdit","row","newRow","fieldType","push","length","newAttributes","difference","metadatas","uniq","concat","key","newEditAttributes","layout","keysToAppend","currentRowIndex","Math","max","attributeSize","currenRowSize"],"mappings":"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"}