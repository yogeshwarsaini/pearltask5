{"version":3,"file":"store.js","sources":["../../../../server/src/services/utils/store.ts"],"sourcesContent":["import _ from 'lodash';\n\nconst keys = {\n  CONFIGURATION: 'configuration',\n};\n\nconst getStore = () => strapi.store({ type: 'plugin', name: 'content_manager' });\n\n/** Model configuration */\nconst EMPTY_CONFIG = {\n  settings: {},\n  metadatas: {},\n  layouts: {},\n};\n\nconst configurationKey = (key: any) => `${keys.CONFIGURATION}_${key}`;\n\nconst getModelConfiguration = async (key: any) => {\n  const config = await getStore().get({ key: configurationKey(key) });\n  return _.merge({}, EMPTY_CONFIG, config);\n};\n\nconst setModelConfiguration = async (key: string, value: any) => {\n  const storedConfig = (await getStore().get({ key: configurationKey(key) })) || {};\n  const currentConfig = { ...storedConfig };\n\n  Object.keys(value).forEach((key) => {\n    if (value[key] !== null && value[key] !== undefined) {\n      _.set(currentConfig, key, value[key]);\n    }\n  });\n\n  if (!_.isEqual(currentConfig, storedConfig)) {\n    return getStore().set({\n      key: configurationKey(key),\n      value: currentConfig,\n    });\n  }\n};\n\nconst deleteKey = (key: any) => {\n  return strapi.db\n    .query('strapi::core-store')\n    .delete({ where: { key: `plugin_content_manager_configuration_${key}` } });\n};\n\nconst findByKey = async (key: any) => {\n  const results = await strapi.db.query('strapi::core-store').findMany({\n    where: {\n      key: {\n        $startsWith: key,\n      },\n    },\n  });\n\n  return results.map(({ value }) => JSON.parse(value));\n};\n\nconst getAllConfigurations = () => findByKey('plugin_content_manager_configuration');\n\nexport default {\n  getAllConfigurations,\n  findByKey,\n  getModelConfiguration,\n  setModelConfiguration,\n  deleteKey,\n  keys,\n};\n"],"names":["keys","CONFIGURATION","getStore","strapi","store","type","name","EMPTY_CONFIG","settings","metadatas","layouts","configurationKey","key","getModelConfiguration","config","get","_","merge","setModelConfiguration","value","storedConfig","currentConfig","Object","forEach","undefined","set","isEqual","deleteKey","db","query","delete","where","findByKey","results","findMany","$startsWith","map","JSON","parse","getAllConfigurations"],"mappings":"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"}