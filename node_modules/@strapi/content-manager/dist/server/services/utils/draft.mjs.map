{"version":3,"file":"draft.mjs","sources":["../../../../server/src/services/utils/draft.ts"],"sourcesContent":["import { castArray } from 'lodash/fp';\nimport strapiUtils from '@strapi/utils';\n\nconst { isVisibleAttribute } = strapiUtils.contentTypes;\n/**\n * sumDraftCounts works recursively on the attributes of a model counting the\n * number of draft relations\n * These relations can be direct to this content type or contained within components/dynamic zones\n * @param {Object} entity containing the draft relation counts\n * @param {String} uid of the content type\n * @returns {Number} of draft relations\n */\nconst sumDraftCounts = (entity: any, uid: any): number => {\n  const model = strapi.getModel(uid);\n\n  return Object.keys(model.attributes).reduce((sum, attributeName) => {\n    const attribute: any = model.attributes[attributeName];\n    const value = entity[attributeName];\n    if (!value) {\n      return sum;\n    }\n\n    switch (attribute.type) {\n      case 'relation': {\n        if (isVisibleAttribute(model, attributeName)) {\n          return sum + value.count;\n        }\n        return sum;\n      }\n      case 'component': {\n        const compoSum = castArray(value).reduce((acc, componentValue) => {\n          return acc + sumDraftCounts(componentValue, attribute.component);\n        }, 0);\n        return sum + compoSum;\n      }\n      case 'dynamiczone': {\n        const dzSum = value.reduce((acc: any, componentValue: any) => {\n          return acc + sumDraftCounts(componentValue, componentValue.__component);\n        }, 0);\n        return sum + dzSum;\n      }\n      default:\n        return sum;\n    }\n  }, 0);\n};\n\nexport { sumDraftCounts };\n"],"names":["isVisibleAttribute","strapiUtils","contentTypes","sumDraftCounts","entity","uid","model","strapi","getModel","Object","keys","attributes","reduce","sum","attributeName","attribute","value","type","count","compoSum","castArray","acc","componentValue","component","dzSum","__component"],"mappings":";;;AAGA,MAAM,EAAEA,kBAAkB,EAAE,GAAGC,YAAYC,YAAY;AACvD;;;;;;;IAQA,MAAMC,cAAiB,GAAA,CAACC,MAAaC,EAAAA,GAAAA,GAAAA;IACnC,MAAMC,KAAAA,GAAQC,MAAOC,CAAAA,QAAQ,CAACH,GAAAA,CAAAA;IAE9B,OAAOI,MAAAA,CAAOC,IAAI,CAACJ,KAAAA,CAAMK,UAAU,CAAEC,CAAAA,MAAM,CAAC,CAACC,GAAKC,EAAAA,aAAAA,GAAAA;AAChD,QAAA,MAAMC,SAAiBT,GAAAA,KAAAA,CAAMK,UAAU,CAACG,aAAc,CAAA;QACtD,MAAME,KAAAA,GAAQZ,MAAM,CAACU,aAAc,CAAA;AACnC,QAAA,IAAI,CAACE,KAAO,EAAA;YACV,OAAOH,GAAAA;AACT;AAEA,QAAA,OAAQE,UAAUE,IAAI;YACpB,KAAK,UAAA;AAAY,gBAAA;oBACf,IAAIjB,kBAAAA,CAAmBM,OAAOQ,aAAgB,CAAA,EAAA;wBAC5C,OAAOD,GAAAA,GAAMG,MAAME,KAAK;AAC1B;oBACA,OAAOL,GAAAA;AACT;YACA,KAAK,WAAA;AAAa,gBAAA;AAChB,oBAAA,MAAMM,WAAWC,SAAUJ,CAAAA,KAAAA,CAAAA,CAAOJ,MAAM,CAAC,CAACS,GAAKC,EAAAA,cAAAA,GAAAA;AAC7C,wBAAA,OAAOD,GAAMlB,GAAAA,cAAAA,CAAemB,cAAgBP,EAAAA,SAAAA,CAAUQ,SAAS,CAAA;qBAC9D,EAAA,CAAA,CAAA;AACH,oBAAA,OAAOV,GAAMM,GAAAA,QAAAA;AACf;YACA,KAAK,aAAA;AAAe,gBAAA;AAClB,oBAAA,MAAMK,KAAQR,GAAAA,KAAAA,CAAMJ,MAAM,CAAC,CAACS,GAAUC,EAAAA,cAAAA,GAAAA;AACpC,wBAAA,OAAOD,GAAMlB,GAAAA,cAAAA,CAAemB,cAAgBA,EAAAA,cAAAA,CAAeG,WAAW,CAAA;qBACrE,EAAA,CAAA,CAAA;AACH,oBAAA,OAAOZ,GAAMW,GAAAA,KAAAA;AACf;AACA,YAAA;gBACE,OAAOX,GAAAA;AACX;KACC,EAAA,CAAA,CAAA;AACL;;;;"}