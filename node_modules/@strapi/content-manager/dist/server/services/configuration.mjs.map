{"version":3,"file":"configuration.mjs","sources":["../../../server/src/services/configuration.ts"],"sourcesContent":["import { intersection, difference } from 'lodash';\n\nimport type { Settings, Metadatas, Layouts } from '../../../shared/contracts/content-types';\n\nimport { createDefaultConfiguration, syncConfiguration } from './utils/configuration';\n\nexport type ConfigurationUpdate = {\n  settings: Settings;\n  metadatas: Metadatas;\n  layouts: Layouts;\n  options?: Record<string, unknown>;\n};\n\nexport default ({\n  isComponent,\n  prefix,\n  storeUtils,\n  getModels,\n}: {\n  isComponent?: boolean;\n  prefix: string;\n  storeUtils: any;\n  getModels: any;\n}) => {\n  const uidToStoreKey = (uid: string) => {\n    return `${prefix}::${uid}`;\n  };\n\n  const getConfiguration = (uid: string) => {\n    const storeKey = uidToStoreKey(uid);\n\n    return storeUtils.getModelConfiguration(storeKey);\n  };\n\n  const setConfiguration = (uid: string, input: ConfigurationUpdate) => {\n    const configuration = {\n      ...input,\n      uid,\n      isComponent: isComponent ?? undefined,\n    };\n\n    const storeKey = uidToStoreKey(uid);\n    return storeUtils.setModelConfiguration(storeKey, configuration);\n  };\n\n  const deleteConfiguration = (uid: string) => {\n    const storeKey = uidToStoreKey(uid);\n\n    return storeUtils.deleteKey(storeKey);\n  };\n\n  const syncConfigurations = async () => {\n    const models = getModels();\n\n    const configurations = await storeUtils.findByKey(\n      `plugin_content_manager_configuration_${prefix}`\n    );\n\n    const updateConfiguration = async (uid: string) => {\n      const conf = configurations.find((conf: any) => conf.uid === uid);\n\n      return setConfiguration(uid, await syncConfiguration(conf, models[uid]));\n    };\n\n    const generateNewConfiguration = async (uid: string) => {\n      return setConfiguration(uid, await createDefaultConfiguration(models[uid]));\n    };\n\n    const currentUIDS = Object.keys(models);\n    const DBUIDs = configurations.map(({ uid }: any) => uid);\n\n    const contentTypesToUpdate = intersection(currentUIDS, DBUIDs);\n    const contentTypesToAdd = difference(currentUIDS, DBUIDs);\n    const contentTypesToDelete = difference(DBUIDs, currentUIDS);\n\n    // delete old schemas\n    await Promise.all(contentTypesToDelete.map((uid) => deleteConfiguration(uid)));\n\n    // create new schemas\n    await Promise.all(contentTypesToAdd.map((uid) => generateNewConfiguration(uid)));\n\n    // update current schemas\n    await Promise.all(contentTypesToUpdate.map((uid) => updateConfiguration(uid)));\n  };\n\n  return {\n    getConfiguration,\n    setConfiguration,\n    deleteConfiguration,\n    syncConfigurations,\n  };\n};\n"],"names":["isComponent","prefix","storeUtils","getModels","uidToStoreKey","uid","getConfiguration","storeKey","getModelConfiguration","setConfiguration","input","configuration","undefined","setModelConfiguration","deleteConfiguration","deleteKey","syncConfigurations","models","configurations","findByKey","updateConfiguration","conf","find","syncConfiguration","generateNewConfiguration","createDefaultConfiguration","currentUIDS","Object","keys","DBUIDs","map","contentTypesToUpdate","intersection","contentTypesToAdd","difference","contentTypesToDelete","Promise","all"],"mappings":"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"}