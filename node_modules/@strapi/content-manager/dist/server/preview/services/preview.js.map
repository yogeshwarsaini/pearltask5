{"version":3,"file":"preview.js","sources":["../../../../server/src/preview/services/preview.ts"],"sourcesContent":["import type { Core, UID } from '@strapi/types';\nimport { errors } from '@strapi/utils';\n\nimport { getService } from '../utils';\nimport type { HandlerParams } from './preview-config';\n\n/**\n * Responsible of routing an entry to a preview URL.\n */\nconst createPreviewService = ({ strapi }: { strapi: Core.Strapi }) => {\n  const config = getService(strapi, 'preview-config');\n\n  return {\n    async getPreviewUrl(uid: UID.ContentType, params: HandlerParams) {\n      const handler = config.getPreviewHandler();\n\n      try {\n        // Try to get the preview URL from the user-defined handler\n        return handler(uid, params);\n      } catch (error) {\n        // Log the error and throw a generic error\n        strapi.log.error(`Failed to get preview URL: ${error}`);\n        throw new errors.ApplicationError('Failed to get preview URL');\n      }\n    },\n  };\n};\n\nexport { createPreviewService };\n"],"names":["createPreviewService","strapi","config","getService","getPreviewUrl","uid","params","handler","getPreviewHandler","error","log","errors","ApplicationError"],"mappings":";;;;;AAMA;;AAEC,IACKA,MAAAA,oBAAAA,GAAuB,CAAC,EAAEC,MAAM,EAA2B,GAAA;IAC/D,MAAMC,MAAAA,GAASC,iBAAWF,MAAQ,EAAA,gBAAA,CAAA;IAElC,OAAO;QACL,MAAMG,aAAAA,CAAAA,CAAcC,GAAoB,EAAEC,MAAqB,EAAA;YAC7D,MAAMC,OAAAA,GAAUL,OAAOM,iBAAiB,EAAA;YAExC,IAAI;;AAEF,gBAAA,OAAOD,QAAQF,GAAKC,EAAAA,MAAAA,CAAAA;AACtB,aAAA,CAAE,OAAOG,KAAO,EAAA;;gBAEdR,MAAOS,CAAAA,GAAG,CAACD,KAAK,CAAC,CAAC,2BAA2B,EAAEA,MAAM,CAAC,CAAA;gBACtD,MAAM,IAAIE,kBAAOC,CAAAA,gBAAgB,CAAC,2BAAA,CAAA;AACpC;AACF;AACF,KAAA;AACF;;;;"}