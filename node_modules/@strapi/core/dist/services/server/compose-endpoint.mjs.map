{"version":3,"file":"compose-endpoint.mjs","sources":["../../../src/services/server/compose-endpoint.ts"],"sourcesContent":["import { toLower, castArray, trim, prop, isNil } from 'lodash/fp';\nimport type { Core, UID } from '@strapi/types';\nimport { errors } from '@strapi/utils';\nimport Router from '@koa/router';\n\nimport compose from 'koa-compose';\nimport { resolveRouteMiddlewares } from './middleware';\nimport { createPolicicesMiddleware } from './policy';\n\nconst getMethod = (route: Core.Route) => {\n  return trim(toLower(route.method)) as Lowercase<Core.Route['method']>;\n};\n\nconst getPath = (route: Core.Route) => trim(route.path);\n\nconst createRouteInfoMiddleware =\n  (routeInfo: Core.Route): Core.MiddlewareHandler =>\n  (ctx, next) => {\n    const route = {\n      ...routeInfo,\n      config: routeInfo.config || {},\n    };\n\n    ctx.state.route = route;\n    return next();\n  };\n\nconst getAuthConfig = prop('config.auth');\n\nconst createAuthorizeMiddleware =\n  (strapi: Core.Strapi): Core.MiddlewareHandler =>\n  async (ctx, next) => {\n    const { auth, route } = ctx.state;\n\n    const authService = strapi.get('auth');\n\n    try {\n      await authService.verify(auth, getAuthConfig(route));\n\n      return await next();\n    } catch (error) {\n      if (error instanceof errors.UnauthorizedError) {\n        return ctx.unauthorized();\n      }\n\n      if (error instanceof errors.ForbiddenError) {\n        // allow PolicyError as an exception to throw a publicly visible message in the API\n        if (error instanceof errors.PolicyError) {\n          throw error;\n        }\n        return ctx.forbidden();\n      }\n\n      throw error;\n    }\n  };\n\nconst createAuthenticateMiddleware =\n  (strapi: Core.Strapi): Core.MiddlewareHandler =>\n  async (ctx, next) => {\n    return strapi.get('auth').authenticate(ctx, next);\n  };\n\nconst returnBodyMiddleware: Core.MiddlewareHandler = async (ctx, next) => {\n  const values = await next();\n\n  if (isNil(ctx.body) && !isNil(values)) {\n    ctx.body = values;\n  }\n};\n\nexport default (strapi: Core.Strapi) => {\n  const authenticate = createAuthenticateMiddleware(strapi);\n  const authorize = createAuthorizeMiddleware(strapi);\n\n  return (route: Core.Route, { router }: { router: Router }) => {\n    try {\n      const method = getMethod(route);\n      const path = getPath(route);\n\n      const middlewares = resolveRouteMiddlewares(route, strapi);\n\n      const action = getAction(route, strapi);\n\n      const routeHandler = compose([\n        createRouteInfoMiddleware(route),\n        authenticate,\n        authorize,\n        createPolicicesMiddleware(route, strapi),\n        ...middlewares,\n        returnBodyMiddleware,\n        ...castArray(action),\n      ]);\n\n      router[method](path, routeHandler);\n    } catch (error) {\n      if (error instanceof Error) {\n        error.message = `Error creating endpoint ${route.method} ${route.path}: ${error.message}`;\n      }\n\n      throw error;\n    }\n  };\n};\n\nconst getController = (\n  name: string,\n  { pluginName, apiName }: Core.RouteInfo,\n  strapi: Core.Strapi\n) => {\n  let ctrl: Core.Controller | undefined;\n\n  if (pluginName) {\n    if (pluginName === 'admin') {\n      ctrl = strapi.controller(`admin::${name}`);\n    } else {\n      ctrl = strapi.plugin(pluginName).controller(name);\n    }\n  } else if (apiName) {\n    ctrl = strapi.controller(`api::${apiName}.${name}`);\n  }\n\n  if (!ctrl) {\n    return strapi.controller(name as UID.Controller);\n  }\n\n  return ctrl;\n};\n\nconst extractHandlerParts = (name: string) => {\n  const controllerName = name.slice(0, name.lastIndexOf('.'));\n  const actionName = name.slice(name.lastIndexOf('.') + 1);\n\n  return { controllerName, actionName };\n};\n\nconst getAction = (route: Core.Route, strapi: Core.Strapi) => {\n  const { handler, info } = route;\n  const { pluginName, apiName, type } = info ?? {};\n\n  if (Array.isArray(handler) || typeof handler === 'function') {\n    return handler;\n  }\n\n  const { controllerName, actionName } = extractHandlerParts(trim(handler));\n\n  const controller = getController(controllerName, { pluginName, apiName, type }, strapi);\n\n  if (typeof controller[actionName] !== 'function') {\n    throw new Error(`Handler not found \"${handler}\"`);\n  }\n\n  if (Symbol.for('__type__') in controller[actionName]) {\n    (controller[actionName] as any)[Symbol.for('__type__')].push(type);\n  } else {\n    (controller[actionName] as any)[Symbol.for('__type__')] = [type];\n  }\n\n  return controller[actionName].bind(controller);\n};\n"],"names":["getMethod","route","trim","toLower","method","getPath","path","createRouteInfoMiddleware","routeInfo","ctx","next","config","state","getAuthConfig","prop","createAuthorizeMiddleware","strapi","auth","authService","get","verify","error","errors","UnauthorizedError","unauthorized","ForbiddenError","PolicyError","forbidden","createAuthenticateMiddleware","authenticate","returnBodyMiddleware","values","isNil","body","authorize","router","middlewares","resolveRouteMiddlewares","action","getAction","routeHandler","compose","createPolicicesMiddleware","castArray","Error","message","getController","name","pluginName","apiName","ctrl","controller","plugin","extractHandlerParts","controllerName","slice","lastIndexOf","actionName","handler","info","type","Array","isArray","Symbol","for","push","bind"],"mappings":"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"}