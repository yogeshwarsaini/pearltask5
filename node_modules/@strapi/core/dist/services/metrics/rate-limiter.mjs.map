{"version":3,"file":"rate-limiter.mjs","sources":["../../../src/services/metrics/rate-limiter.ts"],"sourcesContent":["import type { Sender } from './sender';\n\ninterface Options {\n  limitedEvents?: string[];\n}\n\ntype TailParams<T extends (...args: any[]) => any> =\n  Parameters<T> extends [unknown, ...infer U] ? U : never;\n\nfunction nextResetDate(): number {\n  return Date.now() + 24 * 60 * 60 * 1000; // Now + 24 hours.\n}\n\nexport default (sender: Sender, { limitedEvents = [] }: Options = {}) => {\n  let cacheExpiresAt = nextResetDate();\n  const eventCache = new Map();\n\n  return async (event: string, ...args: TailParams<Sender>) => {\n    if (!limitedEvents.includes(event)) {\n      return sender(event, ...args);\n    }\n\n    if (Date.now() > cacheExpiresAt) {\n      eventCache.clear();\n      cacheExpiresAt = nextResetDate();\n    }\n\n    if (eventCache.has(event)) {\n      return false;\n    }\n\n    eventCache.set(event, true);\n    return sender(event, ...args);\n  };\n};\n"],"names":["nextResetDate","Date","now","sender","limitedEvents","cacheExpiresAt","eventCache","Map","event","args","includes","clear","has","set"],"mappings":"AASA,SAASA,aAAAA,GAAAA;AACP,IAAA,OAAOC,KAAKC,GAAG,EAAA,GAAK,KAAK,EAAK,GAAA,EAAA,GAAK;AACrC;AAEA,wBAAe,CAAA,CAACC,MAAgB,EAAA,EAAEC,gBAAgB,EAAE,EAAW,GAAG,EAAE,GAAA;AAClE,IAAA,IAAIC,cAAiBL,GAAAA,aAAAA,EAAAA;AACrB,IAAA,MAAMM,aAAa,IAAIC,GAAAA,EAAAA;IAEvB,OAAO,OAAOC,OAAe,GAAGC,IAAAA,GAAAA;AAC9B,QAAA,IAAI,CAACL,aAAAA,CAAcM,QAAQ,CAACF,KAAQ,CAAA,EAAA;AAClC,YAAA,OAAOL,OAAOK,KAAUC,EAAAA,GAAAA,IAAAA,CAAAA;AAC1B;QAEA,IAAIR,IAAAA,CAAKC,GAAG,EAAA,GAAKG,cAAgB,EAAA;AAC/BC,YAAAA,UAAAA,CAAWK,KAAK,EAAA;YAChBN,cAAiBL,GAAAA,aAAAA,EAAAA;AACnB;QAEA,IAAIM,UAAAA,CAAWM,GAAG,CAACJ,KAAQ,CAAA,EAAA;YACzB,OAAO,KAAA;AACT;QAEAF,UAAWO,CAAAA,GAAG,CAACL,KAAO,EAAA,IAAA,CAAA;AACtB,QAAA,OAAOL,OAAOK,KAAUC,EAAAA,GAAAA,IAAAA,CAAAA;AAC1B,KAAA;AACF,CAAA;;;;"}