{"version":3,"file":"default-locale.mjs","sources":["../../../../../../src/services/document-service/transform/relations/transform/default-locale.ts"],"sourcesContent":["import type { UID } from '@strapi/types';\n\nimport { getDefaultLocale, isLocalizedContentType } from '../utils/i18n';\nimport { mapRelation, traverseEntityRelations } from '../utils/map-relation';\n\n/**\n * In scenarios like Non i18n CT -> i18n CT\n * relations can be connected to multiple locales,\n * in case user does not provide the locale, this sets it to the default one.\n */\nconst setDefaultLocaleToRelations = (data: Record<string, any>, uid: UID.Schema) => {\n  // I18n CT -> anything will already have a locale set (source locale)\n  if (isLocalizedContentType(uid)) {\n    return data;\n  }\n\n  // Store the default locale to avoid multiple calls\n  let defaultLocale: string;\n\n  /**\n   * Traverse the entity input data and set the default locale to relations\n   */\n  return traverseEntityRelations(\n    async ({ key, value }, { set }) => {\n      /**\n       * Assign default locale on long hand expressed relations\n       * e.g { documentId } -> { documentId, locale }\n       */\n      const relation = await mapRelation(async (relation) => {\n        if (!relation || !relation?.documentId || relation?.locale) {\n          return relation;\n        }\n\n        // Set default locale if not provided\n        if (!defaultLocale) {\n          defaultLocale = await getDefaultLocale();\n        }\n\n        // Assign default locale to the positional argument\n        const position = relation.position;\n        if (position && typeof position === 'object' && !position.locale) {\n          relation.position.locale = defaultLocale;\n        }\n\n        return { ...relation, locale: defaultLocale };\n      }, value as any);\n\n      // @ts-expect-error - fix type\n      set(key, relation);\n    },\n    { schema: strapi.getModel(uid), getModel: strapi.getModel.bind(strapi) },\n    data\n  );\n};\n\nexport { setDefaultLocaleToRelations };\n"],"names":["setDefaultLocaleToRelations","data","uid","isLocalizedContentType","defaultLocale","traverseEntityRelations","key","value","set","relation","mapRelation","documentId","locale","getDefaultLocale","position","schema","strapi","getModel","bind"],"mappings":";;;AAKA;;;;IAKA,MAAMA,2BAA8B,GAAA,CAACC,IAA2BC,EAAAA,GAAAA,GAAAA;;AAE9D,IAAA,IAAIC,uBAAuBD,GAAM,CAAA,EAAA;QAC/B,OAAOD,IAAAA;AACT;;IAGA,IAAIG,aAAAA;AAEJ;;MAGA,OAAOC,8BACL,CAAA,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAE,EAAE,EAAEC,GAAG,EAAE,GAAA;AAC5B;;;AAGC,UACD,MAAMC,QAAAA,GAAW,MAAMC,kBAAAA,CAAY,OAAOD,QAAAA,GAAAA;AACxC,YAAA,IAAI,CAACA,QAAY,IAAA,CAACA,QAAUE,EAAAA,UAAAA,IAAcF,UAAUG,MAAQ,EAAA;gBAC1D,OAAOH,QAAAA;AACT;;AAGA,YAAA,IAAI,CAACL,aAAe,EAAA;AAClBA,gBAAAA,aAAAA,GAAgB,MAAMS,gBAAAA,EAAAA;AACxB;;YAGA,MAAMC,QAAAA,GAAWL,SAASK,QAAQ;AAClC,YAAA,IAAIA,YAAY,OAAOA,QAAAA,KAAa,YAAY,CAACA,QAAAA,CAASF,MAAM,EAAE;gBAChEH,QAASK,CAAAA,QAAQ,CAACF,MAAM,GAAGR,aAAAA;AAC7B;YAEA,OAAO;AAAE,gBAAA,GAAGK,QAAQ;gBAAEG,MAAQR,EAAAA;AAAc,aAAA;SAC3CG,EAAAA,KAAAA,CAAAA;;AAGHC,QAAAA,GAAAA,CAAIF,GAAKG,EAAAA,QAAAA,CAAAA;KAEX,EAAA;QAAEM,MAAQC,EAAAA,MAAAA,CAAOC,QAAQ,CAACf,GAAAA,CAAAA;AAAMe,QAAAA,QAAAA,EAAUD,MAAOC,CAAAA,QAAQ,CAACC,IAAI,CAACF,MAAAA;KAC/Df,EAAAA,IAAAA,CAAAA;AAEJ;;;;"}