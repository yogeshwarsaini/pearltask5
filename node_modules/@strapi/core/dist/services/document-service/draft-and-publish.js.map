{"version":3,"file":"draft-and-publish.js","sources":["../../../src/services/document-service/draft-and-publish.ts"],"sourcesContent":["import { assoc, curry } from 'lodash/fp';\n\nimport type { Modules, Struct } from '@strapi/types';\nimport { contentTypes } from '@strapi/utils';\n\ntype ParamsTransform = (params: Modules.Documents.Params.All) => Modules.Documents.Params.All;\n\ntype TransformWithContentType = (\n  contentType: Struct.SingleTypeSchema | Struct.CollectionTypeSchema,\n  params: Modules.Documents.Params.All\n) => Modules.Documents.Params.All;\n\n/**\n * DP enabled -> set status to draft\n * DP disabled -> Used mostly for parsing relations, so there is not a need for a default.\n */\nconst setStatusToDraft: TransformWithContentType = (contentType, params) => {\n  if (!contentTypes.hasDraftAndPublish(contentType) && params.status) {\n    return params;\n  }\n\n  return assoc('status', 'draft', params);\n};\n\n/**\n * Adds a default status of `draft` to the params\n */\nconst defaultToDraft: ParamsTransform = (params) => {\n  // Default to draft if no status is provided or it's invalid\n  if (!params.status || params.status !== 'published') {\n    return assoc('status', 'draft', params);\n  }\n\n  return params;\n};\n\n/**\n * DP disabled -> ignore status\n * DP enabled -> set status to draft if no status is provided or it's invalid\n */\nconst defaultStatus: TransformWithContentType = (contentType, params) => {\n  if (!contentTypes.hasDraftAndPublish(contentType)) {\n    return params;\n  }\n\n  // Default to draft if no status is provided or it's invalid\n  if (!params.status || params.status !== 'published') {\n    return defaultToDraft(params);\n  }\n\n  return params;\n};\n\n/**\n * In mutating actions we don't want user to set the publishedAt attribute.\n */\nconst filterDataPublishedAt: ParamsTransform = (params) => {\n  if (params?.data?.publishedAt) {\n    return assoc(['data', 'publishedAt'], null, params);\n  }\n\n  return params;\n};\n\n/**\n * Add status lookup query to the params\n */\nconst statusToLookup: TransformWithContentType = (contentType, params) => {\n  if (!contentTypes.hasDraftAndPublish(contentType)) {\n    return params;\n  }\n\n  const lookup = params.lookup || {};\n\n  switch (params?.status) {\n    case 'published':\n      return assoc(['lookup', 'publishedAt'], { $notNull: true }, params);\n    case 'draft':\n      return assoc(['lookup', 'publishedAt'], { $null: true }, params);\n    default:\n      break;\n  }\n\n  return assoc('lookup', lookup, params);\n};\n\n/**\n * Translate publication status parameter into the data that will be saved\n */\nconst statusToData: TransformWithContentType = (contentType, params) => {\n  if (!contentTypes.hasDraftAndPublish(contentType)) {\n    return assoc(['data', 'publishedAt'], new Date(), params);\n  }\n\n  switch (params?.status) {\n    case 'published':\n      return assoc(['data', 'publishedAt'], new Date(), params);\n    case 'draft':\n      return assoc(['data', 'publishedAt'], null, params);\n    default:\n      break;\n  }\n\n  return params;\n};\n\nconst setStatusToDraftCurry = curry(setStatusToDraft);\nconst defaultToDraftCurry = curry(defaultToDraft);\nconst defaultStatusCurry = curry(defaultStatus);\nconst filterDataPublishedAtCurry = curry(filterDataPublishedAt);\nconst statusToLookupCurry = curry(statusToLookup);\nconst statusToDataCurry = curry(statusToData);\n\nexport {\n  setStatusToDraftCurry as setStatusToDraft,\n  defaultToDraftCurry as defaultToDraft,\n  defaultStatusCurry as defaultStatus,\n  filterDataPublishedAtCurry as filterDataPublishedAt,\n  statusToLookupCurry as statusToLookup,\n  statusToDataCurry as statusToData,\n};\n"],"names":["setStatusToDraft","contentType","params","contentTypes","hasDraftAndPublish","status","assoc","defaultToDraft","defaultStatus","filterDataPublishedAt","data","publishedAt","statusToLookup","lookup","$notNull","$null","statusToData","Date","setStatusToDraftCurry","curry","defaultToDraftCurry","defaultStatusCurry","filterDataPublishedAtCurry","statusToLookupCurry","statusToDataCurry"],"mappings":"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"}