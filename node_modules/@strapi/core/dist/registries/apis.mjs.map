{"version":3,"file":"apis.mjs","sources":["../../src/registries/apis.ts"],"sourcesContent":["import { has } from 'lodash/fp';\nimport type { Core } from '@strapi/types';\n\nconst apisRegistry = (strapi: Core.Strapi) => {\n  const apis: Record<string, unknown> = {};\n\n  return {\n    get(name: string) {\n      return apis[name];\n    },\n    getAll() {\n      return apis;\n    },\n    add(apiName: string, apiConfig: unknown) {\n      if (has(apiName, apis)) {\n        throw new Error(`API ${apiName} has already been registered.`);\n      }\n\n      const api = strapi.get('modules').add(`api::${apiName}`, apiConfig);\n\n      apis[apiName] = api;\n\n      return apis[apiName];\n    },\n  };\n};\n\nexport default apisRegistry;\n"],"names":["apisRegistry","strapi","apis","get","name","getAll","add","apiName","apiConfig","has","Error","api"],"mappings":";;AAGA,MAAMA,eAAe,CAACC,MAAAA,GAAAA;AACpB,IAAA,MAAMC,OAAgC,EAAC;IAEvC,OAAO;AACLC,QAAAA,GAAAA,CAAAA,CAAIC,IAAY,EAAA;YACd,OAAOF,IAAI,CAACE,IAAK,CAAA;AACnB,SAAA;AACAC,QAAAA,MAAAA,CAAAA,GAAAA;YACE,OAAOH,IAAAA;AACT,SAAA;QACAI,GAAIC,CAAAA,CAAAA,OAAe,EAAEC,SAAkB,EAAA;YACrC,IAAIC,GAAAA,CAAIF,SAASL,IAAO,CAAA,EAAA;AACtB,gBAAA,MAAM,IAAIQ,KAAM,CAAA,CAAC,IAAI,EAAEH,OAAAA,CAAQ,6BAA6B,CAAC,CAAA;AAC/D;AAEA,YAAA,MAAMI,GAAMV,GAAAA,MAAAA,CAAOE,GAAG,CAAC,SAAWG,CAAAA,CAAAA,GAAG,CAAC,CAAC,KAAK,EAAEC,OAAQ,CAAA,CAAC,EAAEC,SAAAA,CAAAA;YAEzDN,IAAI,CAACK,QAAQ,GAAGI,GAAAA;YAEhB,OAAOT,IAAI,CAACK,OAAQ,CAAA;AACtB;AACF,KAAA;AACF;;;;"}