{"version":3,"file":"convert-custom-field-type.js","sources":["../../src/utils/convert-custom-field-type.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\n\ntype InputAttributes = {\n  [key: string]: {\n    type: string;\n    customField?: string;\n  };\n};\n\nexport const convertCustomFieldType = (strapi: Core.Strapi) => {\n  const allContentTypeSchemaAttributes = Object.values(strapi.contentTypes).map(\n    (schema) => schema.attributes\n  );\n\n  const allComponentSchemaAttributes = Object.values(strapi.components).map(\n    (schema) => schema.attributes\n  );\n  const allSchemasAttributes: InputAttributes[] = [\n    ...allContentTypeSchemaAttributes,\n    ...allComponentSchemaAttributes,\n  ];\n\n  for (const schemaAttrbutes of allSchemasAttributes) {\n    for (const attribute of Object.values(schemaAttrbutes)) {\n      if (attribute.type === 'customField') {\n        const customField = strapi.get('custom-fields').get(attribute.customField);\n        attribute.type = customField.type;\n      }\n    }\n  }\n};\n"],"names":["convertCustomFieldType","strapi","allContentTypeSchemaAttributes","Object","values","contentTypes","map","schema","attributes","allComponentSchemaAttributes","components","allSchemasAttributes","schemaAttrbutes","attribute","type","customField","get"],"mappings":";;AASO,MAAMA,yBAAyB,CAACC,MAAAA,GAAAA;AACrC,IAAA,MAAMC,8BAAiCC,GAAAA,MAAAA,CAAOC,MAAM,CAACH,MAAOI,CAAAA,YAAY,CAAEC,CAAAA,GAAG,CAC3E,CAACC,MAAWA,GAAAA,MAAAA,CAAOC,UAAU,CAAA;AAG/B,IAAA,MAAMC,4BAA+BN,GAAAA,MAAAA,CAAOC,MAAM,CAACH,MAAOS,CAAAA,UAAU,CAAEJ,CAAAA,GAAG,CACvE,CAACC,MAAWA,GAAAA,MAAAA,CAAOC,UAAU,CAAA;AAE/B,IAAA,MAAMG,oBAA0C,GAAA;AAC3CT,QAAAA,GAAAA,8BAAAA;AACAO,QAAAA,GAAAA;AACJ,KAAA;IAED,KAAK,MAAMG,mBAAmBD,oBAAsB,CAAA;AAClD,QAAA,KAAK,MAAME,SAAAA,IAAaV,MAAOC,CAAAA,MAAM,CAACQ,eAAkB,CAAA,CAAA;YACtD,IAAIC,SAAAA,CAAUC,IAAI,KAAK,aAAe,EAAA;gBACpC,MAAMC,WAAAA,GAAcd,OAAOe,GAAG,CAAC,iBAAiBA,GAAG,CAACH,UAAUE,WAAW,CAAA;gBACzEF,SAAUC,CAAAA,IAAI,GAAGC,WAAAA,CAAYD,IAAI;AACnC;AACF;AACF;AACF;;;;"}