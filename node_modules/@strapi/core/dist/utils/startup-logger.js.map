{"version":3,"file":"startup-logger.js","sources":["../../src/utils/startup-logger.ts"],"sourcesContent":["import chalk from 'chalk';\nimport CLITable from 'cli-table3';\nimport _ from 'lodash/fp';\n\nimport type { Core } from '@strapi/types';\n\nexport const createStartupLogger = (app: Core.Strapi) => {\n  return {\n    logStats() {\n      const columns = Math.min(process.stderr.columns, 80) - 2;\n      console.log();\n      console.log(chalk.black.bgWhite(_.padEnd(columns, ' Project information')));\n      console.log();\n\n      const infoTable = new CLITable({\n        colWidths: [20, 50],\n        chars: { mid: '', 'left-mid': '', 'mid-mid': '', 'right-mid': '' },\n      });\n\n      const dbInfo = app.db?.getInfo();\n\n      infoTable.push(\n        [chalk.blue('Time'), `${new Date()}`],\n        [chalk.blue('Launched in'), `${Date.now() - app.config.launchedAt} ms`],\n        [chalk.blue('Environment'), app.config.environment],\n        [chalk.blue('Process PID'), process.pid],\n        [chalk.blue('Version'), `${app.config.info.strapi} (node ${process.version})`],\n        [chalk.blue('Edition'), app.EE ? 'Enterprise' : 'Community'],\n        [chalk.blue('Database'), dbInfo?.client],\n        [chalk.blue('Database name'), dbInfo?.displayName]\n      );\n\n      if (dbInfo?.schema) {\n        infoTable.push([chalk.blue('Database schema'), dbInfo.schema]);\n      }\n\n      console.log(infoTable.toString());\n      console.log();\n      console.log(chalk.black.bgWhite(_.padEnd(columns, ' Actions available')));\n      console.log();\n    },\n\n    logFirstStartupMessage() {\n      if (!strapi.config.get('server.logger.startup.enabled')) {\n        return;\n      }\n\n      this.logStats();\n\n      console.log(chalk.bold('One more thing...'));\n      console.log(\n        chalk.grey('Create your first administrator üíª by going to the administration panel at:')\n      );\n      console.log();\n\n      const addressTable = new CLITable();\n\n      const adminUrl = strapi.config.get('admin.absoluteUrl');\n      addressTable.push([chalk.bold(adminUrl)]);\n\n      console.log(`${addressTable.toString()}`);\n      console.log();\n    },\n\n    logDefaultStartupMessage() {\n      if (!strapi.config.get('server.logger.startup.enabled')) {\n        return;\n      }\n      this.logStats();\n\n      console.log(chalk.bold('Welcome back!'));\n\n      if (app.config.get('admin.serveAdminPanel') === true) {\n        console.log(chalk.grey('To manage your project üöÄ, go to the administration panel at:'));\n        const adminUrl = strapi.config.get('admin.absoluteUrl');\n        console.log(chalk.bold(adminUrl));\n        console.log();\n      }\n\n      console.log(chalk.grey('To access the server ‚ö°Ô∏è, go to:'));\n      const serverUrl = strapi.config.get('server.absoluteUrl');\n      console.log(chalk.bold(serverUrl));\n      console.log();\n    },\n\n    logStartupMessage({ isInitialized }: { isInitialized: boolean }) {\n      if (!strapi.config.get('server.logger.startup.enabled')) {\n        return;\n      }\n      if (!isInitialized) {\n        this.logFirstStartupMessage();\n      } else {\n        this.logDefaultStartupMessage();\n      }\n    },\n  };\n};\n"],"names":["createStartupLogger","app","logStats","columns","Math","min","process","stderr","console","log","chalk","black","bgWhite","_","padEnd","infoTable","CLITable","colWidths","chars","mid","dbInfo","db","getInfo","push","blue","Date","now","config","launchedAt","environment","pid","info","strapi","version","EE","client","displayName","schema","toString","logFirstStartupMessage","get","bold","grey","addressTable","adminUrl","logDefaultStartupMessage","serverUrl","logStartupMessage","isInitialized"],"mappings":"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"}