{"version":3,"file":"webhooks.js","sources":["../../src/providers/webhooks.ts"],"sourcesContent":["import { defineProvider } from './provider';\nimport { createWebhookStore, webhookModel } from '../services/webhook-store';\nimport createWebhookRunner from '../services/webhook-runner';\n\nexport default defineProvider({\n  init(strapi) {\n    strapi.get('models').add(webhookModel);\n\n    strapi.add('webhookStore', () => createWebhookStore({ db: strapi.db }));\n    strapi.add('webhookRunner', () =>\n      createWebhookRunner({\n        eventHub: strapi.eventHub,\n        logger: strapi.log,\n        configuration: strapi.config.get('server.webhooks', {}),\n        fetch: strapi.fetch,\n      })\n    );\n  },\n  async bootstrap(strapi) {\n    const webhooks = await strapi.get('webhookStore').findWebhooks();\n    if (!webhooks) {\n      return;\n    }\n\n    for (const webhook of webhooks) {\n      strapi.get('webhookRunner').add(webhook);\n    }\n  },\n});\n"],"names":["defineProvider","init","strapi","get","add","webhookModel","createWebhookStore","db","createWebhookRunner","eventHub","logger","log","configuration","config","fetch","bootstrap","webhooks","findWebhooks","webhook"],"mappings":";;;;;;AAIA,eAAeA,uBAAe,CAAA;AAC5BC,IAAAA,IAAAA,CAAAA,CAAKC,MAAM,EAAA;AACTA,QAAAA,MAAAA,CAAOC,GAAG,CAAC,QAAUC,CAAAA,CAAAA,GAAG,CAACC,yBAAAA,CAAAA;AAEzBH,QAAAA,MAAAA,CAAOE,GAAG,CAAC,cAAgB,EAAA,IAAME,+BAAmB,CAAA;AAAEC,gBAAAA,EAAAA,EAAIL,OAAOK;AAAG,aAAA,CAAA,CAAA;AACpEL,QAAAA,MAAAA,CAAOE,GAAG,CAAC,eAAiB,EAAA,IAC1BI,aAAoB,CAAA;AAClBC,gBAAAA,QAAAA,EAAUP,OAAOO,QAAQ;AACzBC,gBAAAA,MAAAA,EAAQR,OAAOS,GAAG;AAClBC,gBAAAA,aAAAA,EAAeV,OAAOW,MAAM,CAACV,GAAG,CAAC,mBAAmB,EAAC,CAAA;AACrDW,gBAAAA,KAAAA,EAAOZ,OAAOY;AAChB,aAAA,CAAA,CAAA;AAEJ,KAAA;AACA,IAAA,MAAMC,WAAUb,MAAM,EAAA;AACpB,QAAA,MAAMc,WAAW,MAAMd,MAAAA,CAAOC,GAAG,CAAC,gBAAgBc,YAAY,EAAA;AAC9D,QAAA,IAAI,CAACD,QAAU,EAAA;AACb,YAAA;AACF;QAEA,KAAK,MAAME,WAAWF,QAAU,CAAA;AAC9Bd,YAAAA,MAAAA,CAAOC,GAAG,CAAC,eAAiBC,CAAAA,CAAAA,GAAG,CAACc,OAAAA,CAAAA;AAClC;AACF;AACF,CAAG,CAAA;;;;"}