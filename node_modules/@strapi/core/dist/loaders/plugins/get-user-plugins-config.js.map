{"version":3,"file":"get-user-plugins-config.js","sources":["../../../src/loaders/plugins/get-user-plugins-config.ts"],"sourcesContent":["import { join } from 'path';\nimport fse from 'fs-extra';\nimport { merge } from 'lodash/fp';\nimport { loadConfigFile } from '../../utils/load-config-file';\n\n/**\n * Return user defined plugins' config\n * first load config from `config/plugins.js`\n * and then merge config from `config/env/{env}/plugins.js`\n */\nexport const getUserPluginsConfig = async () => {\n  const globalUserConfigPath = join(strapi.dirs.dist.config, 'plugins.js');\n  const currentEnvUserConfigPath = join(\n    strapi.dirs.dist.config,\n    'env',\n    process.env.NODE_ENV as string,\n    'plugins.js'\n  );\n  let config = {};\n\n  // assign global user config if exists\n  if (await fse.pathExists(globalUserConfigPath)) {\n    config = loadConfigFile(globalUserConfigPath);\n  }\n\n  // and merge user config by environment if exists\n  if (await fse.pathExists(currentEnvUserConfigPath)) {\n    config = merge(config, loadConfigFile(currentEnvUserConfigPath));\n  }\n\n  return config;\n};\n"],"names":["getUserPluginsConfig","globalUserConfigPath","join","strapi","dirs","dist","config","currentEnvUserConfigPath","process","env","NODE_ENV","fse","pathExists","loadConfigFile","merge"],"mappings":";;;;;;;AAKA;;;;UAKaA,oBAAuB,GAAA,UAAA;IAClC,MAAMC,oBAAAA,GAAuBC,UAAKC,MAAOC,CAAAA,IAAI,CAACC,IAAI,CAACC,MAAM,EAAE,YAAA,CAAA;AAC3D,IAAA,MAAMC,wBAA2BL,GAAAA,SAAAA,CAC/BC,MAAOC,CAAAA,IAAI,CAACC,IAAI,CAACC,MAAM,EACvB,KACAE,EAAAA,OAAAA,CAAQC,GAAG,CAACC,QAAQ,EACpB,YAAA,CAAA;AAEF,IAAA,IAAIJ,SAAS,EAAC;;AAGd,IAAA,IAAI,MAAMK,GAAAA,CAAIC,UAAU,CAACX,oBAAuB,CAAA,EAAA;AAC9CK,QAAAA,MAAAA,GAASO,6BAAeZ,CAAAA,oBAAAA,CAAAA;AAC1B;;AAGA,IAAA,IAAI,MAAMU,GAAAA,CAAIC,UAAU,CAACL,wBAA2B,CAAA,EAAA;QAClDD,MAASQ,GAAAA,QAAAA,CAAMR,QAAQO,6BAAeN,CAAAA,wBAAAA,CAAAA,CAAAA;AACxC;IAEA,OAAOD,MAAAA;AACT;;;;"}