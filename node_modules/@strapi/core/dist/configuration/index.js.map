{"version":3,"file":"index.js","sources":["../../src/configuration/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\nimport os from 'os';\nimport path from 'path';\nimport _ from 'lodash';\nimport { omit } from 'lodash/fp';\nimport dotenv from 'dotenv';\nimport type { Core } from '@strapi/types';\nimport { strings } from '@strapi/utils';\n\nimport { getConfigUrls, getAbsoluteAdminUrl, getAbsoluteServerUrl } from './urls';\nimport loadConfigDir from './config-loader';\nimport { getDirs } from './get-dirs';\n\nimport type { StrapiOptions } from '../Strapi';\nimport { version as strapiVersion } from '../../package.json';\n\ndotenv.config({ path: process.env.ENV_PATH });\n\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nconst defaultConfig = {\n  server: {\n    host: process.env.HOST || os.hostname() || 'localhost',\n    port: Number(process.env.PORT) || 1337,\n    proxy: false,\n    cron: { enabled: false },\n    admin: { autoOpen: false },\n    dirs: { public: './public' },\n    transfer: {\n      remote: {\n        enabled: true,\n      },\n    },\n    logger: {\n      updates: {\n        enabled: true,\n      },\n      startup: {\n        enabled: true,\n      },\n    },\n  } satisfies Partial<Core.Config.Server>,\n  admin: {} satisfies Partial<Core.Config.Admin>,\n  api: {\n    rest: {\n      prefix: '/api',\n    },\n  } satisfies Partial<Core.Config.Api>,\n};\n\nexport const loadConfiguration = (opts: StrapiOptions) => {\n  const { appDir, distDir, autoReload = false, serveAdminPanel = true } = opts;\n\n  const pkgJSON = require(path.resolve(appDir, 'package.json'));\n\n  const configDir = path.resolve(distDir || process.cwd(), 'config');\n\n  const rootConfig = {\n    launchedAt: Date.now(),\n    autoReload,\n    environment: process.env.NODE_ENV,\n    uuid: _.get(pkgJSON, 'strapi.uuid'),\n    installId: _.get(pkgJSON, 'strapi.installId'),\n    packageJsonStrapi: _.omit(_.get(pkgJSON, 'strapi', {}), 'uuid'),\n    info: {\n      ...pkgJSON,\n      strapi: strapiVersion,\n    },\n    admin: {\n      serveAdminPanel,\n    },\n  };\n\n  // See packages/core/core/src/domain/module/index.ts for plugin config loading\n  const baseConfig = omit('plugins', loadConfigDir(configDir)); // plugin config will be loaded later\n\n  const envDir = path.resolve(configDir, 'env', process.env.NODE_ENV as string);\n  const envConfig = loadConfigDir(envDir);\n\n  const config = _.merge(rootConfig, defaultConfig, baseConfig, envConfig);\n\n  const { serverUrl, adminUrl } = getConfigUrls(config);\n\n  const serverAbsoluteUrl = getAbsoluteServerUrl(config);\n  const adminAbsoluteUrl = getAbsoluteAdminUrl(config);\n\n  const sameOrigin = new URL(adminAbsoluteUrl).origin === new URL(serverAbsoluteUrl).origin;\n\n  const adminPath = sameOrigin\n    ? adminUrl.replace(strings.getCommonPath(serverUrl, adminUrl), '')\n    : new URL(adminUrl).pathname;\n\n  _.set(config, 'server.url', serverUrl);\n  _.set(config, 'server.absoluteUrl', serverAbsoluteUrl);\n  _.set(config, 'admin.url', adminUrl);\n  _.set(config, 'admin.path', adminPath);\n  _.set(config, 'admin.absoluteUrl', adminAbsoluteUrl);\n  _.set(config, 'dirs', getDirs(opts, config));\n\n  return config;\n};\n"],"names":["dotenv","config","path","process","env","ENV_PATH","NODE_ENV","defaultConfig","server","host","HOST","os","hostname","port","Number","PORT","proxy","cron","enabled","admin","autoOpen","dirs","public","transfer","remote","logger","updates","startup","api","rest","prefix","loadConfiguration","opts","appDir","distDir","autoReload","serveAdminPanel","pkgJSON","require","resolve","configDir","cwd","rootConfig","launchedAt","Date","now","environment","uuid","_","get","installId","packageJsonStrapi","omit","info","strapi","strapiVersion","baseConfig","loadConfigDir","envDir","envConfig","merge","serverUrl","adminUrl","getConfigUrls","serverAbsoluteUrl","getAbsoluteServerUrl","adminAbsoluteUrl","getAbsoluteAdminUrl","sameOrigin","URL","origin","adminPath","replace","strings","getCommonPath","pathname","set","getDirs"],"mappings":"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"}