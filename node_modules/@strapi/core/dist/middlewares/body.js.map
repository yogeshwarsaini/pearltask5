{"version":3,"file":"body.js","sources":["../../src/middlewares/body.ts"],"sourcesContent":["import fse from 'fs-extra';\nimport { defaultsDeep } from 'lodash/fp';\nimport { koaBody, KoaBodyMiddlewareOptions } from 'koa-body';\nimport mime from 'mime-types';\nimport type Koa from 'koa';\nimport type { Core } from '@strapi/types';\n\nexport type Config = KoaBodyMiddlewareOptions;\n\nconst defaults = {\n  multipart: true,\n  patchKoa: true,\n};\n\nfunction ensureFileMimeType(file: any): void {\n  if (!file.type) {\n    file.type = mime.lookup(file.name) || 'application/octet-stream';\n  }\n}\n\nfunction getFiles(ctx: Koa.Context) {\n  return ctx?.request?.files?.files;\n}\n\nconst bodyMiddleware: Core.MiddlewareFactory<Config> = (config, { strapi }) => {\n  const bodyConfig: Config = defaultsDeep(defaults, config);\n\n  let gqlEndpoint: string | undefined;\n  if (strapi.plugin('graphql')) {\n    const { config: gqlConfig } = strapi.plugin('graphql');\n    gqlEndpoint = gqlConfig('endpoint');\n  }\n\n  return async (ctx, next) => {\n    // TODO: find a better way later\n    if (gqlEndpoint && ctx.url === gqlEndpoint) {\n      await next();\n    } else {\n      try {\n        await koaBody(bodyConfig)(ctx, async () => {});\n\n        const files = getFiles(ctx);\n\n        /**\n         * in case the mime-type wasn't sent, Strapi tries to guess it\n         * from the file extension, to avoid a corrupt database state\n         */\n        if (files) {\n          if (Array.isArray(files)) {\n            files.forEach(ensureFileMimeType);\n          } else {\n            ensureFileMimeType(files);\n          }\n        }\n\n        await next();\n      } catch (error) {\n        if (\n          error instanceof Error &&\n          error.message &&\n          error.message.includes('maxFileSize exceeded')\n        ) {\n          return ctx.payloadTooLarge('FileTooBig');\n        }\n\n        throw error;\n      }\n    }\n\n    const files = getFiles(ctx);\n\n    // clean any file that was uploaded\n    if (files) {\n      if (Array.isArray(files)) {\n        // not awaiting to not slow the request\n        Promise.all(files.map((file) => fse.remove(file.filepath)));\n      } else if (files && files.filepath) {\n        // not awaiting to not slow the request\n        fse.remove(files.filepath);\n      }\n      delete ctx.request.files;\n    }\n  };\n};\n\nexport { bodyMiddleware as body };\n"],"names":["defaults","multipart","patchKoa","ensureFileMimeType","file","type","mime","lookup","name","getFiles","ctx","request","files","bodyMiddleware","config","strapi","bodyConfig","defaultsDeep","gqlEndpoint","plugin","gqlConfig","next","url","koaBody","Array","isArray","forEach","error","Error","message","includes","payloadTooLarge","Promise","all","map","fse","remove","filepath"],"mappings":";;;;;;;AASA,MAAMA,QAAW,GAAA;IACfC,SAAW,EAAA,IAAA;IACXC,QAAU,EAAA;AACZ,CAAA;AAEA,SAASC,mBAAmBC,IAAS,EAAA;IACnC,IAAI,CAACA,IAAKC,CAAAA,IAAI,EAAE;AACdD,QAAAA,IAAAA,CAAKC,IAAI,GAAGC,IAAAA,CAAKC,MAAM,CAACH,IAAAA,CAAKI,IAAI,CAAK,IAAA,0BAAA;AACxC;AACF;AAEA,SAASC,SAASC,GAAgB,EAAA;IAChC,OAAOA,GAAAA,EAAKC,SAASC,KAAOA,EAAAA,KAAAA;AAC9B;AAEA,MAAMC,cAAiD,GAAA,CAACC,MAAQ,EAAA,EAAEC,MAAM,EAAE,GAAA;IACxE,MAAMC,UAAAA,GAAqBC,gBAAajB,QAAUc,EAAAA,MAAAA,CAAAA;IAElD,IAAII,WAAAA;IACJ,IAAIH,MAAAA,CAAOI,MAAM,CAAC,SAAY,CAAA,EAAA;AAC5B,QAAA,MAAM,EAAEL,MAAQM,EAAAA,SAAS,EAAE,GAAGL,MAAAA,CAAOI,MAAM,CAAC,SAAA,CAAA;AAC5CD,QAAAA,WAAAA,GAAcE,SAAU,CAAA,UAAA,CAAA;AAC1B;AAEA,IAAA,OAAO,OAAOV,GAAKW,EAAAA,IAAAA,GAAAA;;AAEjB,QAAA,IAAIH,WAAeR,IAAAA,GAAAA,CAAIY,GAAG,KAAKJ,WAAa,EAAA;YAC1C,MAAMG,IAAAA,EAAAA;SACD,MAAA;YACL,IAAI;gBACF,MAAME,eAAAA,CAAQP,UAAYN,CAAAA,CAAAA,GAAAA,EAAK,UAAa,EAAA,CAAA;AAE5C,gBAAA,MAAME,QAAQH,QAASC,CAAAA,GAAAA,CAAAA;AAEvB;;;AAGC,YACD,IAAIE,KAAO,EAAA;oBACT,IAAIY,KAAAA,CAAMC,OAAO,CAACb,KAAQ,CAAA,EAAA;AACxBA,wBAAAA,KAAAA,CAAMc,OAAO,CAACvB,kBAAAA,CAAAA;qBACT,MAAA;wBACLA,kBAAmBS,CAAAA,KAAAA,CAAAA;AACrB;AACF;gBAEA,MAAMS,IAAAA,EAAAA;AACR,aAAA,CAAE,OAAOM,KAAO,EAAA;gBACd,IACEA,KAAAA,YAAiBC,KACjBD,IAAAA,KAAAA,CAAME,OAAO,IACbF,MAAME,OAAO,CAACC,QAAQ,CAAC,sBACvB,CAAA,EAAA;oBACA,OAAOpB,GAAAA,CAAIqB,eAAe,CAAC,YAAA,CAAA;AAC7B;gBAEA,MAAMJ,KAAAA;AACR;AACF;AAEA,QAAA,MAAMf,QAAQH,QAASC,CAAAA,GAAAA,CAAAA;;AAGvB,QAAA,IAAIE,KAAO,EAAA;YACT,IAAIY,KAAAA,CAAMC,OAAO,CAACb,KAAQ,CAAA,EAAA;;gBAExBoB,OAAQC,CAAAA,GAAG,CAACrB,KAAAA,CAAMsB,GAAG,CAAC,CAAC9B,IAAAA,GAAS+B,GAAIC,CAAAA,MAAM,CAAChC,IAAAA,CAAKiC,QAAQ,CAAA,CAAA,CAAA;AAC1D,aAAA,MAAO,IAAIzB,KAAAA,IAASA,KAAMyB,CAAAA,QAAQ,EAAE;;gBAElCF,GAAIC,CAAAA,MAAM,CAACxB,KAAAA,CAAMyB,QAAQ,CAAA;AAC3B;YACA,OAAO3B,GAAAA,CAAIC,OAAO,CAACC,KAAK;AAC1B;AACF,KAAA;AACF;;;;"}