{"version":3,"file":"urlsToAssets.js","sources":["../../../admin/src/utils/urlsToAssets.ts"],"sourcesContent":["import { AssetSource } from '../constants';\n\nimport { typeFromMime } from './typeFromMime';\n\nfunction getFilenameFromURL(url: string) {\n  return new URL(url).pathname.split('/').pop();\n}\n\nexport const urlsToAssets = async (urls: string[]) => {\n  const assetPromises = urls.map((url) =>\n    fetch(url).then(async (res) => {\n      const blob = await res.blob();\n\n      const loadedFile = new File([blob], getFilenameFromURL(res.url)!, {\n        type: res.headers.get('content-type') || undefined,\n      });\n\n      return {\n        name: loadedFile.name,\n        url: res.url,\n        mime: res.headers.get('content-type'),\n        rawFile: loadedFile,\n      };\n    })\n  );\n  // Retrieve the assets metadata\n  const assetsResults = await Promise.all(assetPromises);\n\n  const assets = assetsResults.map((fullFilledAsset) => ({\n    source: AssetSource.Url,\n    name: fullFilledAsset.name,\n    type: typeFromMime(fullFilledAsset.mime!),\n    url: fullFilledAsset.url,\n    ext: fullFilledAsset.url.split('.').pop(),\n    mime: fullFilledAsset.mime ? fullFilledAsset.mime : undefined,\n    rawFile: fullFilledAsset.rawFile,\n  }));\n\n  return assets;\n};\n"],"names":["getFilenameFromURL","url","URL","pathname","split","pop","urlsToAssets","urls","assetPromises","map","fetch","then","res","blob","loadedFile","File","type","headers","get","undefined","name","mime","rawFile","assetsResults","Promise","all","assets","fullFilledAsset","source","AssetSource","Url","typeFromMime","ext"],"mappings":";;;;;AAIA,SAASA,mBAAmBC,GAAW,EAAA;IACrC,OAAO,IAAIC,IAAID,GAAKE,CAAAA,CAAAA,QAAQ,CAACC,KAAK,CAAC,KAAKC,GAAG,EAAA;AAC7C;AAEO,MAAMC,eAAe,OAAOC,IAAAA,GAAAA;IACjC,MAAMC,aAAAA,GAAgBD,IAAKE,CAAAA,GAAG,CAAC,CAACR,MAC9BS,KAAMT,CAAAA,GAAAA,CAAAA,CAAKU,IAAI,CAAC,OAAOC,GAAAA,GAAAA;YACrB,MAAMC,IAAAA,GAAO,MAAMD,GAAAA,CAAIC,IAAI,EAAA;YAE3B,MAAMC,UAAAA,GAAa,IAAIC,IAAK,CAAA;AAACF,gBAAAA;aAAK,EAAEb,kBAAAA,CAAmBY,GAAIX,CAAAA,GAAG,CAAI,EAAA;AAChEe,gBAAAA,IAAAA,EAAMJ,GAAIK,CAAAA,OAAO,CAACC,GAAG,CAAC,cAAmBC,CAAAA,IAAAA;AAC3C,aAAA,CAAA;YAEA,OAAO;AACLC,gBAAAA,IAAAA,EAAMN,WAAWM,IAAI;AACrBnB,gBAAAA,GAAAA,EAAKW,IAAIX,GAAG;AACZoB,gBAAAA,IAAAA,EAAMT,GAAIK,CAAAA,OAAO,CAACC,GAAG,CAAC,cAAA,CAAA;gBACtBI,OAASR,EAAAA;AACX,aAAA;AACF,SAAA,CAAA,CAAA;;AAGF,IAAA,MAAMS,aAAgB,GAAA,MAAMC,OAAQC,CAAAA,GAAG,CAACjB,aAAAA,CAAAA;AAExC,IAAA,MAAMkB,SAASH,aAAcd,CAAAA,GAAG,CAAC,CAACkB,mBAAqB;AACrDC,YAAAA,MAAAA,EAAQC,sBAAYC,GAAG;AACvBV,YAAAA,IAAAA,EAAMO,gBAAgBP,IAAI;YAC1BJ,IAAMe,EAAAA,yBAAAA,CAAaJ,gBAAgBN,IAAI,CAAA;AACvCpB,YAAAA,GAAAA,EAAK0B,gBAAgB1B,GAAG;AACxB+B,YAAAA,GAAAA,EAAKL,gBAAgB1B,GAAG,CAACG,KAAK,CAAC,KAAKC,GAAG,EAAA;AACvCgB,YAAAA,IAAAA,EAAMM,eAAgBN,CAAAA,IAAI,GAAGM,eAAAA,CAAgBN,IAAI,GAAGF,SAAAA;AACpDG,YAAAA,OAAAA,EAASK,gBAAgBL;SAC3B,CAAA,CAAA;IAEA,OAAOI,MAAAA;AACT;;;;"}