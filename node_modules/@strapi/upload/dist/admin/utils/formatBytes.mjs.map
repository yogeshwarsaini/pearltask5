{"version":3,"file":"formatBytes.mjs","sources":["../../../admin/src/utils/formatBytes.ts"],"sourcesContent":["import byteSize from 'byte-size';\n\nexport function formatBytes(receivedBytes: number | string, decimals = 0) {\n  const realBytes = typeof receivedBytes === 'string' ? Number(receivedBytes) : receivedBytes;\n  const { value, unit } = byteSize(realBytes * 1000, { precision: decimals });\n\n  if (!unit) {\n    return '0B';\n  }\n\n  return `${value}${unit.toUpperCase()}`;\n}\n"],"names":["formatBytes","receivedBytes","decimals","realBytes","Number","value","unit","byteSize","precision","toUpperCase"],"mappings":";;AAEO,SAASA,WAAAA,CAAYC,aAA8B,EAAEC,WAAW,CAAC,EAAA;AACtE,IAAA,MAAMC,SAAY,GAAA,OAAOF,aAAkB,KAAA,QAAA,GAAWG,OAAOH,aAAiBA,CAAAA,GAAAA,aAAAA;IAC9E,MAAM,EAAEI,KAAK,EAAEC,IAAI,EAAE,GAAGC,QAAAA,CAASJ,YAAY,IAAM,EAAA;QAAEK,SAAWN,EAAAA;AAAS,KAAA,CAAA;AAEzE,IAAA,IAAI,CAACI,IAAM,EAAA;QACT,OAAO,IAAA;AACT;AAEA,IAAA,OAAO,CAAC,EAAED,KAAAA,CAAM,EAAEC,IAAKG,CAAAA,WAAW,GAAG,CAAC;AACxC;;;;"}