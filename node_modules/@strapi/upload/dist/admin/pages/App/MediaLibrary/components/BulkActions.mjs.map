{"version":3,"file":"BulkActions.mjs","sources":["../../../../../../admin/src/pages/App/MediaLibrary/components/BulkActions.tsx"],"sourcesContent":["import { Flex, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../../../../utils';\n\nimport { BulkDeleteButton } from './BulkDeleteButton';\nimport { BulkMoveButton } from './BulkMoveButton';\n\nimport type { File } from '../../../../../../shared/contracts/files';\nimport type {\n  FolderDefinition,\n  Folder as FolderInitial,\n} from '../../../../../../shared/contracts/folders';\n\ninterface FolderWithType extends FolderInitial {\n  type: string;\n}\n\nexport interface FileWithType extends File {\n  type: string;\n}\n\nexport interface BulkActionsProps {\n  selected: Array<FileWithType | FolderDefinition> | Array<FolderWithType | FileWithType>;\n  onSuccess: () => void;\n  currentFolder?: FolderWithType;\n}\n\nexport const BulkActions = ({ selected = [], onSuccess, currentFolder }: BulkActionsProps) => {\n  const { formatMessage } = useIntl();\n  const numberAssets = selected?.reduce(function (_this, val) {\n    return val?.type === 'folder' && 'files' in val && val?.files && 'count' in val.files\n      ? _this + val?.files?.count\n      : _this + 1;\n  }, 0);\n\n  return (\n    <Flex gap={2} paddingBottom={5}>\n      <Typography variant=\"epsilon\" textColor=\"neutral600\">\n        {formatMessage(\n          {\n            id: getTrad('list.assets.selected'),\n            defaultMessage:\n              '{numberFolders, plural, one {1 folder} other {# folders}} - {numberAssets, plural, one {1 asset} other {# assets}} selected',\n          },\n          {\n            numberFolders: selected?.filter(({ type }) => type === 'folder').length,\n            numberAssets,\n          }\n        )}\n      </Typography>\n\n      <BulkDeleteButton\n        selected={selected as Array<FileWithType | FolderDefinition>}\n        onSuccess={onSuccess}\n      />\n      <BulkMoveButton\n        currentFolder={currentFolder}\n        selected={selected as Array<FolderWithType | FileWithType>}\n        onSuccess={onSuccess}\n      />\n    </Flex>\n  );\n};\n"],"names":["BulkActions","selected","onSuccess","currentFolder","formatMessage","useIntl","numberAssets","reduce","_this","val","type","files","count","_jsxs","Flex","gap","paddingBottom","_jsx","Typography","variant","textColor","id","getTrad","defaultMessage","numberFolders","filter","length","BulkDeleteButton","BulkMoveButton"],"mappings":";;;;;;;;;;;;AA4BO,MAAMA,WAAc,GAAA,CAAC,EAAEC,QAAAA,GAAW,EAAE,EAAEC,SAAS,EAAEC,aAAa,EAAoB,GAAA;IACvF,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAC1B,IAAA,MAAMC,eAAeL,QAAUM,EAAAA,MAAAA,CAAO,SAAUC,KAAK,EAAEC,GAAG,EAAA;AACxD,QAAA,OAAOA,GAAKC,EAAAA,IAAAA,KAAS,QAAY,IAAA,OAAA,IAAWD,OAAOA,GAAKE,EAAAA,KAAAA,IAAS,OAAWF,IAAAA,GAAAA,CAAIE,KAAK,GACjFH,KAAAA,GAAQC,GAAKE,EAAAA,KAAAA,EAAOC,QACpBJ,KAAQ,GAAA,CAAA;KACX,EAAA,CAAA,CAAA;AAEH,IAAA,qBACEK,IAACC,CAAAA,IAAAA,EAAAA;QAAKC,GAAK,EAAA,CAAA;QAAGC,aAAe,EAAA,CAAA;;0BAC3BC,GAACC,CAAAA,UAAAA,EAAAA;gBAAWC,OAAQ,EAAA,SAAA;gBAAUC,SAAU,EAAA,YAAA;0BACrChB,aACC,CAAA;AACEiB,oBAAAA,EAAAA,EAAIC,OAAQ,CAAA,sBAAA,CAAA;oBACZC,cACE,EAAA;iBAEJ,EAAA;oBACEC,aAAevB,EAAAA,QAAAA,EAAUwB,OAAO,CAAC,EAAEf,IAAI,EAAE,GAAKA,SAAS,QAAUgB,CAAAA,CAAAA,MAAAA;AACjEpB,oBAAAA;AACF,iBAAA;;0BAIJW,GAACU,CAAAA,gBAAAA,EAAAA;gBACC1B,QAAUA,EAAAA,QAAAA;gBACVC,SAAWA,EAAAA;;0BAEbe,GAACW,CAAAA,cAAAA,EAAAA;gBACCzB,aAAeA,EAAAA,aAAAA;gBACfF,QAAUA,EAAAA,QAAAA;gBACVC,SAAWA,EAAAA;;;;AAInB;;;;"}