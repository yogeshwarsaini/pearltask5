{"version":3,"file":"useEditAsset.mjs","sources":["../../../admin/src/hooks/useEditAsset.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useNotification, useFetchClient, FetchClient } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { useMutation, useQueryClient } from 'react-query';\n\nimport { UpdateFile, File as FileAsset } from '../../../shared/contracts/files';\nimport { pluginId } from '../pluginId';\nimport { getTrad } from '../utils';\n\nexport type ErrorMutation = {\n  message: string;\n  response: {\n    status: number;\n    data: {\n      error: Error;\n    };\n  };\n} | null;\n\nconst editAssetRequest = (\n  asset: FileAsset,\n  file: File,\n  signal: AbortSignal,\n  onProgress: (progress: number) => void,\n  post: FetchClient['post']\n) => {\n  const endpoint = `/${pluginId}?id=${asset.id}`;\n\n  const formData = new FormData();\n\n  if (file) {\n    formData.append('files', file);\n  }\n\n  formData.append(\n    'fileInfo',\n    JSON.stringify({\n      alternativeText: asset.alternativeText,\n      caption: asset.caption,\n      folder: asset.folder,\n      name: asset.name,\n    })\n  );\n\n  /**\n   * onProgress is not possible using native fetch\n   * need to look into an alternative to make it work\n   * perhaps using xhr like Axios does\n   */\n  return post(endpoint, formData, {\n    signal,\n  }).then((res) => res.data);\n};\n\nexport const useEditAsset = () => {\n  const [progress, setProgress] = React.useState(0);\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const queryClient = useQueryClient();\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  const { post } = useFetchClient();\n\n  const mutation = useMutation<\n    UpdateFile.Response['data'],\n    ErrorMutation,\n    { asset: FileAsset; file: File }\n  >(({ asset, file }) => editAssetRequest(asset, file, signal, setProgress, post), {\n    onSuccess() {\n      queryClient.refetchQueries([pluginId, 'assets'], { active: true });\n      queryClient.refetchQueries([pluginId, 'asset-count'], { active: true });\n      queryClient.refetchQueries([pluginId, 'folders'], { active: true });\n    },\n    onError(reason) {\n      if (reason?.response?.status === 403) {\n        toggleNotification({\n          type: 'info',\n          message: formatMessage({ id: getTrad('permissions.not-allowed.update') }),\n        });\n      } else {\n        toggleNotification({ type: 'danger', message: reason?.message });\n      }\n    },\n  });\n\n  const editAsset = (asset: FileAsset, file: File) => mutation.mutateAsync({ asset, file });\n\n  const cancel = () => abortController.abort();\n\n  return { ...mutation, cancel, editAsset, progress, status: mutation.status };\n};\n"],"names":["editAssetRequest","asset","file","signal","onProgress","post","endpoint","pluginId","id","formData","FormData","append","JSON","stringify","alternativeText","caption","folder","name","then","res","data","useEditAsset","progress","setProgress","React","useState","formatMessage","useIntl","toggleNotification","useNotification","queryClient","useQueryClient","abortController","AbortController","useFetchClient","mutation","useMutation","onSuccess","refetchQueries","active","onError","reason","response","status","type","message","getTrad","editAsset","mutateAsync","cancel","abort"],"mappings":"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"}