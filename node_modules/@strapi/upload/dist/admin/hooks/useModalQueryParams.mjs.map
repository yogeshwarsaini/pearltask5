{"version":3,"file":"useModalQueryParams.mjs","sources":["../../../admin/src/hooks/useModalQueryParams.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\nimport { stringify } from 'qs';\n\nimport { useConfig } from './useConfig';\n\nimport type { Query, FilterCondition } from '../../../shared/contracts/files';\n\nexport const useModalQueryParams = (initialState?: Partial<Query>) => {\n  const { trackUsage } = useTracking();\n  const {\n    config: { data: config },\n  } = useConfig();\n\n  const [queryObject, setQueryObject] = React.useState<Query>({\n    page: 1,\n    sort: 'updatedAt:DESC',\n    pageSize: 10,\n    filters: {\n      $and: [],\n    },\n    ...initialState,\n  });\n\n  React.useEffect(() => {\n    if (config && 'sort' in config && 'pageSize' in config) {\n      setQueryObject((prevQuery) => ({\n        ...prevQuery,\n        sort: config.sort,\n        pageSize: config.pageSize,\n      }));\n    }\n  }, [config]);\n\n  const handleChangeFilters = (nextFilters: FilterCondition<string>[]) => {\n    if (nextFilters) {\n      trackUsage('didFilterMediaLibraryElements', {\n        location: 'content-manager',\n        filter: Object.keys(nextFilters[nextFilters.length - 1])[0],\n      });\n      setQueryObject((prev) => ({ ...prev, page: 1, filters: { $and: nextFilters } }));\n    }\n  };\n\n  const handleChangePageSize = (pageSize: Query['pageSize']) => {\n    setQueryObject((prev) => ({\n      ...prev,\n      pageSize: typeof pageSize === 'string' ? parseInt(pageSize, 10) : pageSize,\n      page: 1,\n    }));\n  };\n\n  const handeChangePage = (page: Query['page']) => {\n    setQueryObject((prev) => ({ ...prev, page }));\n  };\n\n  const handleChangeSort = (sort: Query['sort']) => {\n    if (sort) {\n      trackUsage('didSortMediaLibraryElements', {\n        location: 'content-manager',\n        sort,\n      });\n      setQueryObject((prev) => ({ ...prev, sort }));\n    }\n  };\n\n  const handleChangeSearch = (_q: Query['_q'] | null) => {\n    if (_q) {\n      setQueryObject((prev) => ({ ...prev, _q, page: 1 }));\n    } else {\n      const newState: Query = { page: 1 };\n\n      Object.keys(queryObject).forEach((key) => {\n        if (!['page', '_q'].includes(key)) {\n          (newState as Record<string, string | number | undefined>)[key] = (\n            queryObject as Record<string, string | number | undefined>\n          )[key];\n        }\n      });\n\n      setQueryObject(newState);\n    }\n  };\n\n  const handleChangeFolder = (folder: Query['folder'], folderPath: Query['folderPath']) => {\n    setQueryObject((prev) => ({ ...prev, folder: folder ?? null, folderPath }));\n  };\n\n  return [\n    { queryObject, rawQuery: stringify(queryObject, { encode: false }) },\n    {\n      onChangeFilters: handleChangeFilters,\n      onChangeFolder: handleChangeFolder,\n      onChangePage: handeChangePage,\n      onChangePageSize: handleChangePageSize,\n      onChangeSort: handleChangeSort,\n      onChangeSearch: handleChangeSearch,\n    },\n  ];\n};\n"],"names":["useModalQueryParams","initialState","trackUsage","useTracking","config","data","useConfig","queryObject","setQueryObject","React","useState","page","sort","pageSize","filters","$and","useEffect","prevQuery","handleChangeFilters","nextFilters","location","filter","Object","keys","length","prev","handleChangePageSize","parseInt","handeChangePage","handleChangeSort","handleChangeSearch","_q","newState","forEach","key","includes","handleChangeFolder","folder","folderPath","rawQuery","stringify","encode","onChangeFilters","onChangeFolder","onChangePage","onChangePageSize","onChangeSort","onChangeSearch"],"mappings":"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"}