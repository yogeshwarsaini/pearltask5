{"version":3,"file":"renameKeys.mjs","sources":["../../../../admin/src/hooks/utils/renameKeys.ts"],"sourcesContent":["type Primitive = string | number | boolean | null | undefined;\n\nexport type DeepRecord<T> = {\n  [K in keyof T]: T[K] extends Primitive ? T[K] : DeepRecord<T[K]>;\n};\n\nexport const recursiveRenameKeys = <T extends object>(\n  obj: T,\n  fn: (key: string) => string\n): DeepRecord<T> =>\n  Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => {\n      const getValue = (v: unknown): unknown =>\n        typeof v === 'object' && v !== null ? recursiveRenameKeys(v, fn) : v;\n\n      return [fn(key), Array.isArray(value) ? value.map((val) => getValue(val)) : getValue(value)];\n    })\n  ) as DeepRecord<T>;\n"],"names":["recursiveRenameKeys","obj","fn","Object","fromEntries","entries","map","key","value","getValue","v","Array","isArray","val"],"mappings":"MAMaA,mBAAsB,GAAA,CACjCC,GACAC,EAAAA,EAAAA,GAEAC,OAAOC,WAAW,CAChBD,MAAOE,CAAAA,OAAO,CAACJ,GAAKK,CAAAA,CAAAA,GAAG,CAAC,CAAC,CAACC,KAAKC,KAAM,CAAA,GAAA;QACnC,MAAMC,QAAAA,GAAW,CAACC,CAAAA,GAChB,OAAOA,CAAAA,KAAM,YAAYA,CAAM,KAAA,IAAA,GAAOV,mBAAoBU,CAAAA,CAAAA,EAAGR,EAAMQ,CAAAA,GAAAA,CAAAA;QAErE,OAAO;YAACR,EAAGK,CAAAA,GAAAA,CAAAA;YAAMI,KAAMC,CAAAA,OAAO,CAACJ,KAAAA,CAAAA,GAASA,KAAMF,CAAAA,GAAG,CAAC,CAACO,GAAAA,GAAQJ,QAASI,CAAAA,GAAAA,CAAAA,CAAAA,GAAQJ,QAASD,CAAAA,KAAAA;AAAO,SAAA;KAE7E,CAAA;;;;"}