{"version":3,"file":"AssetDialog.js","sources":["../../../../admin/src/components/AssetDialog/AssetDialog.tsx"],"sourcesContent":["// TODO: find a better naming convention for the file that was an index file before\nimport * as React from 'react';\n\nimport { Page } from '@strapi/admin/strapi-admin';\nimport { Badge, Button, Divider, Flex, Loader, Modal, Tabs } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useAssets } from '../../hooks/useAssets';\nimport { useFolders } from '../../hooks/useFolders';\nimport { useMediaLibraryPermissions } from '../../hooks/useMediaLibraryPermissions';\nimport { useModalQueryParams } from '../../hooks/useModalQueryParams';\nimport { useSelectionState } from '../../hooks/useSelectionState';\nimport {\n  containsAssetFilter,\n  getTrad,\n  getAllowedFiles,\n  moveElement,\n  AllowedFiles,\n} from '../../utils';\nimport { EditAssetContent, Asset as EditAsset } from '../EditAssetDialog/EditAssetContent';\nimport { EditFolderContent } from '../EditFolderDialog/EditFolderDialog';\n\nimport {\n  BrowseStep,\n  FolderWithType,\n  FileWithType,\n  Filter as BrowseFilter,\n} from './BrowseStep/BrowseStep';\nimport { DialogFooter } from './DialogFooter';\nimport { SelectedStep } from './SelectedStep/SelectedStep';\n\nimport type { File as Asset, FilterCondition, Query } from '../../../../shared/contracts/files';\nimport type { Folder, FolderDefinition } from '../../../../shared/contracts/folders';\nimport type { AllowedTypes } from '../AssetCard/AssetCard';\n\nconst LoadingBody = styled(Flex)`\n  /* 80px are coming from the Tabs component that is not included in the ModalBody */\n  min-height: ${() => `calc(60vh + 8rem)`};\n`;\n\nexport interface FileRow extends Asset {\n  folderURL?: string;\n  isSelectable?: boolean;\n  type?: string;\n}\n\nexport interface FolderRow extends Folder {\n  folderURL?: string;\n  isSelectable?: boolean;\n  type?: string;\n}\n\ninterface AssetContentProps {\n  allowedTypes?: AllowedTypes[];\n  folderId?: number | null;\n  onClose: () => void;\n  onAddAsset: (arg?: { folderId: number | { id: number } | null | undefined }) => void;\n  onAddFolder: ({ folderId }: { folderId: number | { id: number } | null | undefined }) => void;\n  onChangeFolder: (folderId: number | null) => void;\n  onValidate: (selectedAssets: Asset[]) => void;\n  multiple?: boolean;\n  trackedLocation?: string;\n  initiallySelectedAssets?: Asset[];\n}\n\nexport const AssetContent = ({\n  allowedTypes = [],\n  folderId = null,\n  onClose,\n  onAddAsset,\n  onAddFolder,\n  onChangeFolder,\n  onValidate,\n  multiple = false,\n  initiallySelectedAssets = [],\n  trackedLocation,\n}: AssetContentProps) => {\n  const [assetToEdit, setAssetToEdit] = React.useState<FileWithType | undefined>(undefined);\n  const [folderToEdit, setFolderToEdit] = React.useState<FolderRow | undefined>(undefined);\n  const { formatMessage } = useIntl();\n  const {\n    canRead,\n    canCreate,\n    isLoading: isLoadingPermissions,\n    canUpdate,\n    canCopyLink,\n    canDownload,\n  } = useMediaLibraryPermissions();\n\n  const [\n    { queryObject },\n    {\n      onChangeFilters,\n      onChangePage,\n      onChangePageSize,\n      onChangeSort,\n      onChangeSearch,\n      onChangeFolder: onChangeFolderParam,\n    },\n  ] = useModalQueryParams({ folder: folderId });\n\n  const {\n    data: { pagination, results: assets } = {},\n    isLoading: isLoadingAssets,\n    error: errorAssets,\n  } = useAssets({ skipWhen: !canRead, query: queryObject });\n\n  const {\n    data: folders,\n    isLoading: isLoadingFolders,\n    error: errorFolders,\n  } = useFolders({\n    enabled: canRead && !containsAssetFilter(queryObject!) && pagination?.page === 1,\n    query: queryObject,\n  });\n\n  const [\n    selectedAssets,\n    { selectOne, selectOnly, setSelections, selectMultiple, deselectMultiple },\n  ] = useSelectionState(['id'], initiallySelectedAssets);\n\n  const handleSelectAllAssets = () => {\n    const allowedAssets = getAllowedFiles(allowedTypes, assets as AllowedFiles[]);\n\n    if (!multiple) {\n      return undefined;\n    }\n\n    // selected files in current folder\n    const alreadySelected = allowedAssets.filter(\n      (asset) => selectedAssets.findIndex((selectedAsset) => selectedAsset.id === asset.id) !== -1\n    );\n\n    if (alreadySelected.length > 0) {\n      deselectMultiple(alreadySelected);\n    } else {\n      selectMultiple(allowedAssets);\n    }\n  };\n\n  const handleSelectAsset = (asset: Asset | FileRow | FolderRow) => {\n    return multiple ? selectOne(asset as Asset) : selectOnly(asset as Asset);\n  };\n\n  const isLoading = isLoadingPermissions || isLoadingAssets || isLoadingFolders;\n  const hasError = errorAssets || errorFolders;\n\n  const [activeTab, setActiveTab] = React.useState(\n    selectedAssets.length > 0 ? 'selected' : 'browse'\n  );\n\n  if (isLoading) {\n    return (\n      <>\n        <Modal.Header>\n          <Modal.Title>\n            {formatMessage({\n              id: getTrad('header.actions.add-assets'),\n              defaultMessage: 'Add new assets',\n            })}\n          </Modal.Title>\n        </Modal.Header>\n        <LoadingBody justifyContent=\"center\" paddingTop={4} paddingBottom={4}>\n          <Loader>\n            {formatMessage({\n              id: getTrad('content.isLoading'),\n              defaultMessage: 'Content is loading.',\n            })}\n          </Loader>\n        </LoadingBody>\n        <DialogFooter onClose={onClose} />\n      </>\n    );\n  }\n\n  if (hasError) {\n    return (\n      <>\n        <Modal.Header>\n          <Modal.Title>\n            {formatMessage({\n              id: getTrad('header.actions.add-assets'),\n              defaultMessage: 'Add new assets',\n            })}\n          </Modal.Title>\n        </Modal.Header>\n        <Page.Error />\n        <DialogFooter onClose={onClose} />\n      </>\n    );\n  }\n\n  if (!canRead) {\n    return (\n      <>\n        <Modal.Header>\n          <Modal.Title>\n            {formatMessage({\n              id: getTrad('header.actions.add-assets'),\n              defaultMessage: 'Add new assets',\n            })}\n          </Modal.Title>\n        </Modal.Header>\n        <Page.NoPermissions />\n        <DialogFooter onClose={onClose} />\n      </>\n    );\n  }\n\n  if (assetToEdit) {\n    return (\n      <EditAssetContent\n        onClose={() => setAssetToEdit(undefined)}\n        asset={assetToEdit as EditAsset}\n        canUpdate={canUpdate}\n        canCopyLink={canCopyLink}\n        canDownload={canDownload}\n        trackedLocation={trackedLocation}\n      />\n    );\n  }\n\n  if (folderToEdit) {\n    return (\n      <EditFolderContent\n        folder={folderToEdit as FolderDefinition}\n        onClose={() => setFolderToEdit(undefined)}\n        location=\"content-manager\"\n        parentFolderId={queryObject?.folder as string | number | null | undefined}\n      />\n    );\n  }\n\n  const handleMoveItem = (hoverIndex: number, destIndex: number) => {\n    const offset = destIndex - hoverIndex;\n    const orderedAssetsClone = selectedAssets.slice();\n    const nextAssets = moveElement<Asset>(orderedAssetsClone, hoverIndex, offset);\n    setSelections(nextAssets);\n  };\n\n  const handleFolderChange = (folderId: number, folderPath?: string) => {\n    onChangeFolder(folderId);\n    if (onChangeFolderParam) {\n      onChangeFolderParam(folderId, folderPath);\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header>\n        <Modal.Title>\n          {formatMessage({\n            id: getTrad('header.actions.add-assets'),\n            defaultMessage: 'Add new assets',\n          })}\n        </Modal.Title>\n      </Modal.Header>\n\n      <TabsRoot variant=\"simple\" value={activeTab} onValueChange={setActiveTab}>\n        <Flex paddingLeft={8} paddingRight={8} paddingTop={6} justifyContent=\"space-between\">\n          <Tabs.List>\n            <Tabs.Trigger value=\"browse\">\n              {formatMessage({\n                id: getTrad('modal.nav.browse'),\n                defaultMessage: 'Browse',\n              })}\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"selected\">\n              {formatMessage({\n                id: getTrad('modal.header.select-files'),\n                defaultMessage: 'Selected files',\n              })}\n              <Badge marginLeft={2}>{selectedAssets.length}</Badge>\n            </Tabs.Trigger>\n          </Tabs.List>\n          <Flex gap={2}>\n            <Button\n              variant=\"secondary\"\n              onClick={() => onAddFolder({ folderId: queryObject?.folder })}\n            >\n              {formatMessage({\n                id: getTrad('modal.upload-list.sub-header.add-folder'),\n                defaultMessage: 'Add folder',\n              })}\n            </Button>\n            <Button onClick={() => onAddAsset({ folderId: queryObject?.folder })}>\n              {formatMessage({\n                id: getTrad('modal.upload-list.sub-header.button'),\n                defaultMessage: 'Add more assets',\n              })}\n            </Button>\n          </Flex>\n        </Flex>\n        <Divider />\n        <Modal.Body>\n          <Tabs.Content value=\"browse\">\n            <BrowseStep\n              allowedTypes={allowedTypes}\n              assets={assets!}\n              canCreate={canCreate}\n              canRead={canRead}\n              folders={folders as FolderWithType[]}\n              onSelectAsset={handleSelectAsset}\n              selectedAssets={selectedAssets}\n              multiple={multiple}\n              onSelectAllAsset={handleSelectAllAssets}\n              onEditAsset={setAssetToEdit}\n              onEditFolder={setFolderToEdit}\n              pagination={pagination!}\n              queryObject={queryObject!}\n              onAddAsset={onAddAsset}\n              onChangeFilters={(filters: FilterCondition<string>[] | BrowseFilter[]) =>\n                onChangeFilters!(filters as FilterCondition<string>[])\n              }\n              onChangeFolder={handleFolderChange}\n              onChangePage={onChangePage!}\n              onChangePageSize={onChangePageSize!}\n              onChangeSort={(sort: string | undefined) => onChangeSort!(sort as Query['sort'])}\n              onChangeSearch={onChangeSearch!}\n            />\n          </Tabs.Content>\n          <Tabs.Content value=\"selected\">\n            <SelectedStep\n              selectedAssets={selectedAssets}\n              onSelectAsset={handleSelectAsset}\n              onReorderAsset={handleMoveItem}\n            />\n          </Tabs.Content>\n        </Modal.Body>\n      </TabsRoot>\n      <DialogFooter onClose={onClose} onValidate={() => onValidate(selectedAssets)} />\n    </>\n  );\n};\n\ninterface AssetDialogProps extends AssetContentProps {\n  open?: boolean;\n}\n\nexport const AssetDialog = ({ open = false, onClose, ...restProps }: AssetDialogProps) => {\n  return (\n    <Modal.Root open={open} onOpenChange={onClose}>\n      <Modal.Content>\n        <AssetContent onClose={onClose} {...restProps} />\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n\nconst TabsRoot = styled(Tabs.Root)`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n"],"names":["LoadingBody","styled","Flex","AssetContent","allowedTypes","folderId","onClose","onAddAsset","onAddFolder","onChangeFolder","onValidate","multiple","initiallySelectedAssets","trackedLocation","assetToEdit","setAssetToEdit","React","useState","undefined","folderToEdit","setFolderToEdit","formatMessage","useIntl","canRead","canCreate","isLoading","isLoadingPermissions","canUpdate","canCopyLink","canDownload","useMediaLibraryPermissions","queryObject","onChangeFilters","onChangePage","onChangePageSize","onChangeSort","onChangeSearch","onChangeFolderParam","useModalQueryParams","folder","data","pagination","results","assets","isLoadingAssets","error","errorAssets","useAssets","skipWhen","query","folders","isLoadingFolders","errorFolders","useFolders","enabled","containsAssetFilter","page","selectedAssets","selectOne","selectOnly","setSelections","selectMultiple","deselectMultiple","useSelectionState","handleSelectAllAssets","allowedAssets","getAllowedFiles","alreadySelected","filter","asset","findIndex","selectedAsset","id","length","handleSelectAsset","hasError","activeTab","setActiveTab","_jsxs","_Fragment","_jsx","Modal","Header","Title","getTrad","defaultMessage","justifyContent","paddingTop","paddingBottom","Loader","DialogFooter","Page","Error","NoPermissions","EditAssetContent","EditFolderContent","location","parentFolderId","handleMoveItem","hoverIndex","destIndex","offset","orderedAssetsClone","slice","nextAssets","moveElement","handleFolderChange","folderPath","TabsRoot","variant","value","onValueChange","paddingLeft","paddingRight","Tabs","List","Trigger","Badge","marginLeft","gap","Button","onClick","Divider","Body","Content","BrowseStep","onSelectAsset","onSelectAllAsset","onEditAsset","onEditFolder","filters","sort","SelectedStep","onReorderAsset","AssetDialog","open","restProps","Root","onOpenChange"],"mappings":"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"}