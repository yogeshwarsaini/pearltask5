{"version":3,"file":"CroppingActions.js","sources":["../../../../../admin/src/components/EditAssetDialog/PreviewBox/CroppingActions.tsx"],"sourcesContent":["import { Flex, FocusTrap, IconButton, Menu } from '@strapi/design-system';\nimport { Check, Cross } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled, useTheme } from 'styled-components';\n\nimport { getTrad } from '../../../utils';\n\nimport { CroppingActionRow } from './PreviewComponents';\n\ninterface CroppingActionsProps {\n  onCancel: () => void;\n  onValidate: () => void;\n  onDuplicate?: () => void;\n}\n\nexport const CroppingActions = ({ onCancel, onValidate, onDuplicate }: CroppingActionsProps) => {\n  const { formatMessage } = useIntl();\n  const theme = useTheme();\n\n  return (\n    <FocusTrap onEscape={onCancel}>\n      <CroppingActionRow justifyContent=\"flex-end\" paddingLeft={3} paddingRight={3}>\n        <Flex gap={1}>\n          <IconButton\n            label={formatMessage({\n              id: getTrad('control-card.stop-crop'),\n              defaultMessage: 'Stop cropping',\n            })}\n            onClick={onCancel}\n          >\n            <Cross />\n          </IconButton>\n\n          <Menu.Root>\n            <Trigger\n              aria-label={formatMessage({\n                id: getTrad('control-card.crop'),\n                defaultMessage: 'Crop',\n              })}\n              variant=\"tertiary\"\n              paddingLeft={2}\n              paddingRight={2}\n              endIcon={null}\n            >\n              <Check\n                aria-hidden\n                focusable={false}\n                style={{ position: 'relative', top: 2 }}\n                fill=\"#C0C0D0\"\n              />\n            </Trigger>\n            <Menu.Content zIndex={theme.zIndices.dialog}>\n              <Menu.Item onSelect={onValidate}>\n                {formatMessage({\n                  id: getTrad('checkControl.crop-original'),\n                  defaultMessage: 'Crop the original asset',\n                })}\n              </Menu.Item>\n\n              {onDuplicate && (\n                <Menu.Item onSelect={onDuplicate}>\n                  {formatMessage({\n                    id: getTrad('checkControl.crop-duplicate'),\n                    defaultMessage: 'Duplicate & crop the asset',\n                  })}\n                </Menu.Item>\n              )}\n            </Menu.Content>\n          </Menu.Root>\n        </Flex>\n      </CroppingActionRow>\n    </FocusTrap>\n  );\n};\n\nconst Trigger = styled(Menu.Trigger)`\n  svg {\n    > g,\n    path {\n      fill: ${({ theme }) => theme.colors.neutral500};\n    }\n  }\n\n  &:hover {\n    svg {\n      > g,\n      path {\n        fill: ${({ theme }) => theme.colors.neutral600};\n      }\n    }\n  }\n\n  &:active {\n    svg {\n      > g,\n      path {\n        fill: ${({ theme }) => theme.colors.neutral400};\n      }\n    }\n  }\n`;\n"],"names":["CroppingActions","onCancel","onValidate","onDuplicate","formatMessage","useIntl","theme","useTheme","_jsx","FocusTrap","onEscape","CroppingActionRow","justifyContent","paddingLeft","paddingRight","_jsxs","Flex","gap","IconButton","label","id","getTrad","defaultMessage","onClick","Cross","Menu","Root","Trigger","aria-label","variant","endIcon","Check","aria-hidden","focusable","style","position","top","fill","Content","zIndex","zIndices","dialog","Item","onSelect","styled","colors","neutral500","neutral600","neutral400"],"mappings":";;;;;;;;;;;;;;;AAeO,MAAMA,kBAAkB,CAAC,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAwB,GAAA;IACzF,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAC1B,IAAA,MAAMC,KAAQC,GAAAA,yBAAAA,EAAAA;AAEd,IAAA,qBACEC,cAACC,CAAAA,sBAAAA,EAAAA;QAAUC,QAAUT,EAAAA,QAAAA;AACnB,QAAA,QAAA,gBAAAO,cAACG,CAAAA,mCAAAA,EAAAA;YAAkBC,cAAe,EAAA,UAAA;YAAWC,WAAa,EAAA,CAAA;YAAGC,YAAc,EAAA,CAAA;AACzE,YAAA,QAAA,gBAAAC,eAACC,CAAAA,iBAAAA,EAAAA;gBAAKC,GAAK,EAAA,CAAA;;kCACTT,cAACU,CAAAA,uBAAAA,EAAAA;AACCC,wBAAAA,KAAAA,EAAOf,aAAc,CAAA;AACnBgB,4BAAAA,EAAAA,EAAIC,eAAQ,CAAA,wBAAA,CAAA;4BACZC,cAAgB,EAAA;AAClB,yBAAA,CAAA;wBACAC,OAAStB,EAAAA,QAAAA;AAET,wBAAA,QAAA,gBAAAO,cAACgB,CAAAA,WAAAA,EAAAA,EAAAA;;AAGH,kCAAAT,eAAA,CAACU,kBAAKC,IAAI,EAAA;;0CACRlB,cAACmB,CAAAA,OAAAA,EAAAA;AACCC,gCAAAA,YAAAA,EAAYxB,aAAc,CAAA;AACxBgB,oCAAAA,EAAAA,EAAIC,eAAQ,CAAA,mBAAA,CAAA;oCACZC,cAAgB,EAAA;AAClB,iCAAA,CAAA;gCACAO,OAAQ,EAAA,UAAA;gCACRhB,WAAa,EAAA,CAAA;gCACbC,YAAc,EAAA,CAAA;gCACdgB,OAAS,EAAA,IAAA;AAET,gCAAA,QAAA,gBAAAtB,cAACuB,CAAAA,WAAAA,EAAAA;oCACCC,aAAW,EAAA,IAAA;oCACXC,SAAW,EAAA,KAAA;oCACXC,KAAO,EAAA;wCAAEC,QAAU,EAAA,UAAA;wCAAYC,GAAK,EAAA;AAAE,qCAAA;oCACtCC,IAAK,EAAA;;;AAGT,0CAAAtB,eAAA,CAACU,kBAAKa,OAAO,EAAA;gCAACC,MAAQjC,EAAAA,KAAAA,CAAMkC,QAAQ,CAACC,MAAM;;AACzC,kDAAAjC,cAAA,CAACiB,kBAAKiB,IAAI,EAAA;wCAACC,QAAUzC,EAAAA,UAAAA;kDAClBE,aAAc,CAAA;AACbgB,4CAAAA,EAAAA,EAAIC,eAAQ,CAAA,4BAAA,CAAA;4CACZC,cAAgB,EAAA;AAClB,yCAAA;;oCAGDnB,WACC,kBAAAK,cAAA,CAACiB,kBAAKiB,IAAI,EAAA;wCAACC,QAAUxC,EAAAA,WAAAA;kDAClBC,aAAc,CAAA;AACbgB,4CAAAA,EAAAA,EAAIC,eAAQ,CAAA,6BAAA,CAAA;4CACZC,cAAgB,EAAA;AAClB,yCAAA;;;;;;;;;;AASlB;AAEA,MAAMK,OAAUiB,GAAAA,uBAAAA,CAAOnB,iBAAKE,CAAAA,OAAO,CAAC;;;;YAIxB,EAAE,CAAC,EAAErB,KAAK,EAAE,GAAKA,KAAMuC,CAAAA,MAAM,CAACC,UAAU,CAAC;;;;;;;;cAQvC,EAAE,CAAC,EAAExC,KAAK,EAAE,GAAKA,KAAMuC,CAAAA,MAAM,CAACE,UAAU,CAAC;;;;;;;;;cASzC,EAAE,CAAC,EAAEzC,KAAK,EAAE,GAAKA,KAAMuC,CAAAA,MAAM,CAACG,UAAU,CAAC;;;;AAIvD,CAAC;;;;"}