{"version":3,"file":"SelectTree.js","sources":["../../../../admin/src/components/SelectTree/SelectTree.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box } from '@strapi/design-system';\nimport { Cross, CaretDown } from '@strapi/icons';\nimport ReactSelect, {\n  components,\n  GroupBase,\n  StylesConfig,\n  ClearIndicatorProps,\n} from 'react-select';\nimport { styled, useTheme, DefaultTheme } from 'styled-components';\n\nimport { Option } from './Option';\nimport { flattenTree, FlattenedNode } from './utils/flattenTree';\nimport { getOpenValues } from './utils/getOpenValues';\nimport { getValuesToClose } from './utils/getValuesToClose';\n\nconst hasParent = (option: FlattenedNode<string | number | null>) => !option.parent;\n\nexport type OptionSelectTree = {\n  value: string | number | null;\n  label?: string;\n  children?: OptionSelectTree[];\n};\n\nexport interface SelectTreeProps<\n  Option = unknown,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  IsMulti extends boolean = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Group extends GroupBase<Option> = GroupBase<Option>,\n> {\n  maxDisplayDepth?: number;\n  defaultValue?: {\n    value?: string | number | null;\n  };\n  options: OptionSelectTree[];\n  onChange?: (value: Record<string, string | number>) => void;\n  name?: string;\n  menuPortalTarget?: HTMLElement | null;\n  inputId?: string;\n  error?: string;\n  ariaErrorMessage?: string;\n  isDisabled?: boolean;\n  disabled?: boolean;\n}\n\nexport const SelectTree = ({\n  options: defaultOptions,\n  maxDisplayDepth = 5,\n  defaultValue,\n  ...props\n}: SelectTreeProps) => {\n  const flatDefaultOptions = React.useMemo(() => flattenTree(defaultOptions), [defaultOptions]);\n  const optionsFiltered = React.useMemo(\n    () => flatDefaultOptions.filter(hasParent),\n    [flatDefaultOptions]\n  );\n  const [options, setOptions] = React.useState(optionsFiltered);\n  const [openValues, setOpenValues] = React.useState(\n    getOpenValues(flatDefaultOptions, defaultValue)\n  );\n\n  React.useEffect(() => {\n    if (openValues.length === 0) {\n      setOptions(flatDefaultOptions.filter((option) => option.parent === undefined));\n    } else {\n      const allOpenValues = openValues.reduce<(string | number | null)[]>((acc, value) => {\n        const options = flatDefaultOptions.filter(\n          (option) => option.value === value || option.parent === value\n        );\n\n        options.forEach((option) => {\n          const values = getOpenValues(flatDefaultOptions, option);\n          acc = [...acc, ...values];\n        });\n\n        return acc;\n      }, []);\n\n      const nextOptions = flatDefaultOptions.filter((option) =>\n        allOpenValues.includes(option.value)\n      );\n\n      setOptions(nextOptions);\n    }\n  }, [openValues, flatDefaultOptions, optionsFiltered]);\n\n  const handleToggle = (value: string | number | null) => {\n    if (openValues.includes(value)) {\n      const valuesToClose = getValuesToClose(flatDefaultOptions, value);\n      setOpenValues((prev) => prev.filter((prevData) => !valuesToClose.includes(prevData)));\n    } else {\n      setOpenValues((prev) => [...prev, value]);\n    }\n  };\n\n  return (\n    <Select\n      components={{ Option }}\n      options={options}\n      defaultValue={defaultValue}\n      isSearchable={false}\n      /* -- custom props, used by the Option component */\n      maxDisplayDepth={maxDisplayDepth}\n      openValues={openValues}\n      onOptionToggle={handleToggle}\n      /* -- / custom props */\n      {...props}\n    />\n  );\n};\n\ntype SelectOption = { value?: string | number | null; label?: string };\n\ninterface SelectProps<\n  Option = SelectOption,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>,\n> {\n  components?: object;\n  styles?: StylesConfig<Option, IsMulti, Group>;\n  error?: string;\n  ariaErrorMessage?: string;\n  options: OptionSelectTree[];\n  defaultValue?: {\n    value?: string | number | null;\n  };\n  isSearchable?: boolean;\n  maxDisplayDepth?: number;\n  openValues?: (string | number | null)[];\n  onOptionToggle?: (value: string | number | null) => void;\n}\n\nconst Select = ({\n  components = {},\n  styles = {},\n  error,\n  ariaErrorMessage,\n  ...props\n}: SelectProps) => {\n  const theme = useTheme();\n  const customStyles = getSelectStyles(theme, error);\n\n  return (\n    <ReactSelect\n      menuPosition=\"fixed\"\n      components={{\n        ...components,\n        ClearIndicator,\n        DropdownIndicator,\n        IndicatorSeparator: () => null,\n        LoadingIndicator: () => null,\n      }}\n      aria-errormessage={error && ariaErrorMessage}\n      aria-invalid={!!error}\n      styles={\n        { ...customStyles, ...styles } as StylesConfig<SelectOption, false, GroupBase<SelectOption>>\n      }\n      {...props}\n    />\n  );\n};\n\nconst IconBox = styled(Box)`\n  background: transparent;\n  border: none;\n  position: relative;\n  z-index: 1;\n\n  svg {\n    height: 1.1rem;\n    width: 1.1rem;\n  }\n\n  svg path {\n    fill: ${({ theme }) => theme.colors.neutral600};\n  }\n`;\n\nconst ClearIndicator = (\n  props: ClearIndicatorProps<SelectOption, false, GroupBase<SelectOption>>\n) => {\n  const Component = components.ClearIndicator;\n\n  return (\n    <Component {...props}>\n      <IconBox tag=\"button\" type=\"button\">\n        <Cross />\n      </IconBox>\n    </Component>\n  );\n};\n\nconst CarretBox = styled(IconBox)`\n  display: flex;\n  background: none;\n  border: none;\n\n  svg {\n    width: 0.9rem;\n  }\n`;\n\nconst DropdownIndicator = ({ innerProps }: { innerProps: object }) => {\n  return (\n    <CarretBox paddingRight={3} {...innerProps}>\n      <CaretDown />\n    </CarretBox>\n  );\n};\n\nconst getSelectStyles = (\n  theme: DefaultTheme,\n  error?: string\n): StylesConfig<SelectOption, false, GroupBase<SelectOption>> => {\n  return {\n    clearIndicator: (base: object) => ({ ...base, padding: 0, paddingRight: theme.spaces[3] }),\n    container: (base: object) => ({\n      ...base,\n      background: theme.colors.neutral0,\n      lineHeight: 'normal',\n    }),\n    control(base: object, state: { isFocused: boolean; isDisabled: boolean }) {\n      let borderColor = theme.colors.neutral200;\n      let boxShadowColor: string | undefined = undefined;\n      let backgroundColor: string | undefined = undefined;\n\n      if (state.isFocused) {\n        borderColor = theme.colors.primary600;\n        boxShadowColor = theme.colors.primary600;\n      } else if (error) {\n        borderColor = theme.colors.danger600;\n      }\n\n      if (state.isDisabled) {\n        backgroundColor = `${theme.colors.neutral150} !important`;\n      }\n\n      return {\n        ...base,\n        fontSize: theme.fontSizes[2],\n        height: 40,\n        border: `1px solid ${borderColor} !important`,\n        outline: 0,\n        backgroundColor,\n        borderRadius: theme.borderRadius,\n        boxShadow: boxShadowColor ? `${boxShadowColor} 0px 0px 0px 2px` : '',\n      };\n    },\n    indicatorsContainer: (base: object) => ({ ...base, padding: 0, paddingRight: theme.spaces[3] }),\n    input: (base: object) => ({\n      ...base,\n      margin: 0,\n      padding: 0,\n      color: theme.colors.neutral800,\n      gridTemplateColumns: '0 100%',\n    }),\n    menuPortal: (base: object) => ({\n      ...base,\n      zIndex: theme.zIndices.dialog,\n      pointerEvents: 'auto',\n    }),\n    menu(base: object) {\n      return {\n        ...base,\n        width: '100%',\n        marginTop: theme.spaces[1],\n        backgroundColor: theme.colors.neutral0,\n        color: theme.colors.neutral800,\n        borderRadius: theme.borderRadius,\n        border: `1px solid ${theme.colors.neutral200}`,\n        boxShadow: theme.shadows.tableShadow,\n        fontSize: theme.fontSizes[2],\n        zIndex: 2,\n      };\n    },\n    menuList: (base: object) => ({\n      ...base,\n      paddingLeft: theme.spaces[1],\n      paddingTop: theme.spaces[1],\n      paddingRight: theme.spaces[1],\n      paddingBottom: theme.spaces[1],\n    }),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    option(base: any, state: { isFocused: boolean; isSelected: boolean }) {\n      let backgroundColor = base?.backgroundColor as string;\n\n      if (state.isFocused || state.isSelected) {\n        backgroundColor = theme.colors.primary100;\n      }\n\n      return {\n        ...base,\n        color: theme.colors.neutral800,\n        lineHeight: theme.spaces[5],\n        backgroundColor,\n        borderRadius: theme.borderRadius,\n        '&:active': {\n          backgroundColor: theme.colors.primary100,\n        },\n      };\n    },\n    placeholder: (base: object) => ({\n      ...base,\n      color: theme.colors.neutral600,\n      marginLeft: 0,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      maxWidth: '80%',\n    }),\n    singleValue(base: object, state: { isDisabled: boolean }) {\n      let color = theme.colors.neutral800;\n\n      if (state.isDisabled) {\n        color = theme.colors.neutral600;\n      }\n\n      return { ...base, marginLeft: 0, color };\n    },\n    valueContainer: (base: object) => ({\n      ...base,\n      cursor: 'pointer',\n      padding: 0,\n      paddingLeft: theme.spaces[4],\n      marginLeft: 0,\n      marginRight: 0,\n    }),\n  };\n};\n"],"names":["hasParent","option","parent","SelectTree","options","defaultOptions","maxDisplayDepth","defaultValue","props","flatDefaultOptions","React","useMemo","flattenTree","optionsFiltered","filter","setOptions","useState","openValues","setOpenValues","getOpenValues","useEffect","length","undefined","allOpenValues","reduce","acc","value","forEach","values","nextOptions","includes","handleToggle","valuesToClose","getValuesToClose","prev","prevData","_jsx","Select","components","Option","isSearchable","onOptionToggle","styles","error","ariaErrorMessage","theme","useTheme","customStyles","getSelectStyles","ReactSelect","menuPosition","ClearIndicator","DropdownIndicator","IndicatorSeparator","LoadingIndicator","aria-errormessage","aria-invalid","IconBox","styled","Box","colors","neutral600","Component","tag","type","Cross","CarretBox","innerProps","paddingRight","CaretDown","clearIndicator","base","padding","spaces","container","background","neutral0","lineHeight","control","state","borderColor","neutral200","boxShadowColor","backgroundColor","isFocused","primary600","danger600","isDisabled","neutral150","fontSize","fontSizes","height","border","outline","borderRadius","boxShadow","indicatorsContainer","input","margin","color","neutral800","gridTemplateColumns","menuPortal","zIndex","zIndices","dialog","pointerEvents","menu","width","marginTop","shadows","tableShadow","menuList","paddingLeft","paddingTop","paddingBottom","isSelected","primary100","placeholder","marginLeft","overflow","textOverflow","whiteSpace","maxWidth","singleValue","valueContainer","cursor","marginRight"],"mappings":"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"}