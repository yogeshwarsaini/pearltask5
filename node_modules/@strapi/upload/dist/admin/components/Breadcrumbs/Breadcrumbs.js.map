{"version":3,"file":"Breadcrumbs.js","sources":["../../../../admin/src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import {\n  Breadcrumbs as BaseBreadcrumbs,\n  Crumb,\n  CrumbLink,\n  BreadcrumbsProps as BaseBreadcrumbsProps,\n} from '@strapi/design-system';\nimport { useIntl, MessageDescriptor } from 'react-intl';\nimport { Link as ReactRouterLink } from 'react-router-dom';\n\nimport { CrumbSimpleMenuAsync } from './CrumbSimpleMenuAsync';\n\nexport type CrumbDefinition = {\n  id?: number | null;\n  label?: MessageDescriptor | string;\n  href?: string;\n  path?: string;\n};\n\nexport interface BreadcrumbsProps extends BaseBreadcrumbsProps {\n  breadcrumbs: Array<CrumbDefinition>;\n  currentFolderId?: number;\n  onChangeFolder?: (id: number, path?: string) => void;\n}\n\nexport const Breadcrumbs = ({\n  breadcrumbs,\n  onChangeFolder,\n  currentFolderId,\n  ...props\n}: BreadcrumbsProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <BaseBreadcrumbs {...props}>\n      {breadcrumbs.map((crumb, index) => {\n        if (Array.isArray(crumb)) {\n          return (\n            <CrumbSimpleMenuAsync\n              parentsToOmit={[...breadcrumbs]\n                .splice(index + 1, breadcrumbs.length - 1)\n                .map((parent) => parent.id!)}\n              key={`breadcrumb-${crumb?.id ?? 'menu'}`}\n              currentFolderId={currentFolderId}\n              onChangeFolder={onChangeFolder}\n            />\n          );\n        }\n\n        const isCurrentFolderMediaLibrary = crumb.id === null && currentFolderId === undefined;\n\n        if (currentFolderId !== crumb.id && !isCurrentFolderMediaLibrary) {\n          if (onChangeFolder) {\n            return (\n              <CrumbLink\n                key={`breadcrumb-${crumb?.id ?? 'root'}`}\n                type=\"button\"\n                onClick={() => onChangeFolder(crumb.id!, crumb.path)}\n              >\n                {typeof crumb.label !== 'string' && crumb.label?.id\n                  ? formatMessage(crumb.label)\n                  : (crumb.label as string)}\n              </CrumbLink>\n            );\n          }\n          return (\n            <CrumbLink\n              key={`breadcrumb-${crumb?.id ?? 'root'}`}\n              to={crumb.href}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore - `tag` prop is not defined in the `BaseLinkProps` type\n              tag={ReactRouterLink}\n            >\n              {typeof crumb.label !== 'string' && crumb.label?.id\n                ? formatMessage(crumb.label)\n                : (crumb.label as string)}\n            </CrumbLink>\n          );\n        }\n\n        return (\n          <Crumb\n            key={`breadcrumb-${crumb?.id ?? 'root'}`}\n            isCurrent={index + 1 === breadcrumbs.length}\n          >\n            {typeof crumb.label !== 'string' && crumb.label?.id\n              ? formatMessage(crumb.label)\n              : (crumb.label as string)}\n          </Crumb>\n        );\n      })}\n    </BaseBreadcrumbs>\n  );\n};\n"],"names":["Breadcrumbs","breadcrumbs","onChangeFolder","currentFolderId","props","formatMessage","useIntl","_jsx","BaseBreadcrumbs","map","crumb","index","Array","isArray","CrumbSimpleMenuAsync","parentsToOmit","splice","length","parent","id","isCurrentFolderMediaLibrary","undefined","CrumbLink","type","onClick","path","label","to","href","tag","ReactRouterLink","Crumb","isCurrent"],"mappings":";;;;;;;;AAwBO,MAAMA,WAAc,GAAA,CAAC,EAC1BC,WAAW,EACXC,cAAc,EACdC,eAAe,EACf,GAAGC,KACc,EAAA,GAAA;IACjB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAE1B,IAAA,qBACEC,cAACC,CAAAA,wBAAAA,EAAAA;AAAiB,QAAA,GAAGJ,KAAK;kBACvBH,WAAYQ,CAAAA,GAAG,CAAC,CAACC,KAAOC,EAAAA,KAAAA,GAAAA;YACvB,IAAIC,KAAAA,CAAMC,OAAO,CAACH,KAAQ,CAAA,EAAA;AACxB,gBAAA,qBACEH,cAACO,CAAAA,yCAAAA,EAAAA;oBACCC,aAAe,EAAA;AAAId,wBAAAA,GAAAA;AAAY,qBAAA,CAC5Be,MAAM,CAACL,KAAQ,GAAA,CAAA,EAAGV,WAAYgB,CAAAA,MAAM,GAAG,CAAA,CAAA,CACvCR,GAAG,CAAC,CAACS,MAAAA,GAAWA,OAAOC,EAAE,CAAA;oBAE5BhB,eAAiBA,EAAAA,eAAAA;oBACjBD,cAAgBA,EAAAA;AAFX,iBAAA,EAAA,CAAC,WAAW,EAAEQ,KAAOS,EAAAA,EAAAA,IAAM,OAAO,CAAC,CAAA;AAK9C;AAEA,YAAA,MAAMC,2BAA8BV,GAAAA,KAAAA,CAAMS,EAAE,KAAK,QAAQhB,eAAoBkB,KAAAA,SAAAA;AAE7E,YAAA,IAAIlB,eAAoBO,KAAAA,KAAAA,CAAMS,EAAE,IAAI,CAACC,2BAA6B,EAAA;AAChE,gBAAA,IAAIlB,cAAgB,EAAA;AAClB,oBAAA,qBACEK,cAACe,CAAAA,sBAAAA,EAAAA;wBAECC,IAAK,EAAA,QAAA;AACLC,wBAAAA,OAAAA,EAAS,IAAMtB,cAAeQ,CAAAA,KAAAA,CAAMS,EAAE,EAAGT,MAAMe,IAAI,CAAA;AAElD,wBAAA,QAAA,EAAA,OAAOf,KAAMgB,CAAAA,KAAK,KAAK,QAAA,IAAYhB,KAAMgB,CAAAA,KAAK,EAAEP,EAAAA,GAC7Cd,aAAcK,CAAAA,KAAAA,CAAMgB,KAAK,CAAA,GACxBhB,MAAMgB;AANN,qBAAA,EAAA,CAAC,WAAW,EAAEhB,KAAOS,EAAAA,EAAAA,IAAM,OAAO,CAAC,CAAA;AAS9C;AACA,gBAAA,qBACEZ,cAACe,CAAAA,sBAAAA,EAAAA;AAECK,oBAAAA,EAAAA,EAAIjB,MAAMkB,IAAI;;;oBAGdC,GAAKC,EAAAA,mBAAAA;AAEJ,oBAAA,QAAA,EAAA,OAAOpB,KAAMgB,CAAAA,KAAK,KAAK,QAAA,IAAYhB,KAAMgB,CAAAA,KAAK,EAAEP,EAAAA,GAC7Cd,aAAcK,CAAAA,KAAAA,CAAMgB,KAAK,CAAA,GACxBhB,MAAMgB;AARN,iBAAA,EAAA,CAAC,WAAW,EAAEhB,KAAOS,EAAAA,EAAAA,IAAM,OAAO,CAAC,CAAA;AAW9C;AAEA,YAAA,qBACEZ,cAACwB,CAAAA,kBAAAA,EAAAA;gBAECC,SAAWrB,EAAAA,KAAAA,GAAQ,CAAMV,KAAAA,WAAAA,CAAYgB,MAAM;AAE1C,gBAAA,QAAA,EAAA,OAAOP,KAAMgB,CAAAA,KAAK,KAAK,QAAA,IAAYhB,KAAMgB,CAAAA,KAAK,EAAEP,EAAAA,GAC7Cd,aAAcK,CAAAA,KAAAA,CAAMgB,KAAK,CAAA,GACxBhB,MAAMgB;AALN,aAAA,EAAA,CAAC,WAAW,EAAEhB,KAAOS,EAAAA,EAAAA,IAAM,OAAO,CAAC,CAAA;AAQ9C,SAAA;;AAGN;;;;"}