{"version":3,"file":"getFilterList.js","sources":["../../../../../admin/src/components/FilterPopover/utils/getFilterList.ts"],"sourcesContent":["interface GetFilterListProps {\n  fieldSchema: {\n    type: string;\n    options?: { value: string }[];\n    mainField?: {\n      schema: {\n        type: string;\n      };\n    };\n  };\n}\n\nexport const getFilterList = ({\n  fieldSchema: { type: fieldType, mainField },\n}: GetFilterListProps) => {\n  const type = mainField?.schema.type ? mainField.schema.type : fieldType;\n\n  switch (type) {\n    case 'enumeration': {\n      return [\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$eq',\n            defaultMessage: 'is',\n          },\n          value: '$contains',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$ne',\n            defaultMessage: 'is not',\n          },\n          value: '$notContains',\n        },\n      ];\n    }\n\n    case 'date': {\n      return [\n        {\n          intlLabel: { id: 'components.FilterOptions.FILTER_TYPES.$eq', defaultMessage: 'is' },\n          value: '$eq',\n        },\n        {\n          intlLabel: { id: 'components.FilterOptions.FILTER_TYPES.$ne', defaultMessage: 'is not' },\n          value: '$ne',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$gt',\n            defaultMessage: 'is greater than',\n          },\n          value: '$gt',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$gte',\n            defaultMessage: 'is greater than or equal to',\n          },\n          value: '$gte',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$lt',\n            defaultMessage: 'is less than',\n          },\n          value: '$lt',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$lte',\n            defaultMessage: 'is less than or equal to',\n          },\n          value: '$lte',\n        },\n      ];\n    }\n\n    default:\n      return [\n        {\n          intlLabel: { id: 'components.FilterOptions.FILTER_TYPES.$eq', defaultMessage: 'is' },\n          value: '$eq',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$eqi',\n            defaultMessage: 'is (case insensitive)',\n          },\n          value: '$eqi',\n        },\n        {\n          intlLabel: { id: 'components.FilterOptions.FILTER_TYPES.$ne', defaultMessage: 'is not' },\n          value: '$ne',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$null',\n            defaultMessage: 'is null',\n          },\n          value: '$null',\n        },\n        {\n          intlLabel: {\n            id: 'components.FilterOptions.FILTER_TYPES.$notNull',\n            defaultMessage: 'is not null',\n          },\n          value: '$notNull',\n        },\n      ];\n  }\n};\n"],"names":["getFilterList","fieldSchema","type","fieldType","mainField","schema","intlLabel","id","defaultMessage","value"],"mappings":";;AAYO,MAAMA,aAAgB,GAAA,CAAC,EAC5BC,WAAAA,EAAa,EAAEC,IAAAA,EAAMC,SAAS,EAAEC,SAAS,EAAE,EACxB,GAAA;IACnB,MAAMF,IAAAA,GAAOE,WAAWC,MAAOH,CAAAA,IAAAA,GAAOE,UAAUC,MAAM,CAACH,IAAI,GAAGC,SAAAA;IAE9D,OAAQD,IAAAA;QACN,KAAK,aAAA;AAAe,YAAA;gBAClB,OAAO;AACL,oBAAA;wBACEI,SAAW,EAAA;4BACTC,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BACTC,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT;AACD,iBAAA;AACH;QAEA,KAAK,MAAA;AAAQ,YAAA;gBACX,OAAO;AACL,oBAAA;wBACEH,SAAW,EAAA;4BAAEC,EAAI,EAAA,2CAAA;4BAA6CC,cAAgB,EAAA;AAAK,yBAAA;wBACnFC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BAAEC,EAAI,EAAA,2CAAA;4BAA6CC,cAAgB,EAAA;AAAS,yBAAA;wBACvFC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BACTC,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BACTC,EAAI,EAAA,4CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BACTC,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT,qBAAA;AACA,oBAAA;wBACEH,SAAW,EAAA;4BACTC,EAAI,EAAA,4CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;wBACAC,KAAO,EAAA;AACT;AACD,iBAAA;AACH;AAEA,QAAA;YACE,OAAO;AACL,gBAAA;oBACEH,SAAW,EAAA;wBAAEC,EAAI,EAAA,2CAAA;wBAA6CC,cAAgB,EAAA;AAAK,qBAAA;oBACnFC,KAAO,EAAA;AACT,iBAAA;AACA,gBAAA;oBACEH,SAAW,EAAA;wBACTC,EAAI,EAAA,4CAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA;oBACAC,KAAO,EAAA;AACT,iBAAA;AACA,gBAAA;oBACEH,SAAW,EAAA;wBAAEC,EAAI,EAAA,2CAAA;wBAA6CC,cAAgB,EAAA;AAAS,qBAAA;oBACvFC,KAAO,EAAA;AACT,iBAAA;AACA,gBAAA;oBACEH,SAAW,EAAA;wBACTC,EAAI,EAAA,6CAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA;oBACAC,KAAO,EAAA;AACT,iBAAA;AACA,gBAAA;oBACEH,SAAW,EAAA;wBACTC,EAAI,EAAA,gDAAA;wBACJC,cAAgB,EAAA;AAClB,qBAAA;oBACAC,KAAO,EAAA;AACT;AACD,aAAA;AACL;AACF;;;;"}