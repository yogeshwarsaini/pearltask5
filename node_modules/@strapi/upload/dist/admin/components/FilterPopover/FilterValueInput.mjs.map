{"version":3,"file":"FilterValueInput.mjs","sources":["../../../../admin/src/components/FilterPopover/FilterValueInput.tsx"],"sourcesContent":["import { DateTimePicker, SingleSelectOption, SingleSelect } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\ninterface FilterValueInputProps {\n  label?: string;\n  onChange: (value: string) => void;\n  options?: { label?: string; value: string }[];\n  type?: string;\n  value?: string;\n}\n\nexport const FilterValueInput = ({\n  label = '',\n  onChange,\n  options = [],\n  type,\n  value = '',\n}: FilterValueInputProps) => {\n  const { formatMessage } = useIntl();\n\n  if (type === 'date') {\n    return (\n      <DateTimePicker\n        clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n        aria-label={label}\n        name=\"datetimepicker\"\n        onChange={(date) => {\n          const formattedDate = date ? new Date(date).toISOString() : '';\n\n          onChange(formattedDate);\n        }}\n        onClear={() => onChange('')}\n        value={value ? new Date(value) : undefined}\n      />\n    );\n  }\n\n  return (\n    <SingleSelect\n      aria-label={label}\n      onChange={(value: string | number) => onChange(value.toString())}\n      value={value}\n    >\n      {options?.map((option) => {\n        return (\n          <SingleSelectOption key={option.value} value={option.value}>\n            {option.label}\n          </SingleSelectOption>\n        );\n      })}\n    </SingleSelect>\n  );\n};\n"],"names":["FilterValueInput","label","onChange","options","type","value","formatMessage","useIntl","_jsx","DateTimePicker","clearLabel","id","defaultMessage","aria-label","name","date","formattedDate","Date","toISOString","onClear","undefined","SingleSelect","toString","map","option","SingleSelectOption"],"mappings":";;;;MAWaA,gBAAmB,GAAA,CAAC,EAC/BC,KAAAA,GAAQ,EAAE,EACVC,QAAQ,EACRC,OAAAA,GAAU,EAAE,EACZC,IAAI,EACJC,KAAAA,GAAQ,EAAE,EACY,GAAA;IACtB,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAE1B,IAAA,IAAIH,SAAS,MAAQ,EAAA;AACnB,QAAA,qBACEI,GAACC,CAAAA,cAAAA,EAAAA;AACCC,YAAAA,UAAAA,EAAYJ,aAAc,CAAA;gBAAEK,EAAI,EAAA,YAAA;gBAAcC,cAAgB,EAAA;AAAQ,aAAA,CAAA;YACtEC,YAAYZ,EAAAA,KAAAA;YACZa,IAAK,EAAA,gBAAA;AACLZ,YAAAA,QAAAA,EAAU,CAACa,IAAAA,GAAAA;AACT,gBAAA,MAAMC,gBAAgBD,IAAO,GAAA,IAAIE,IAAKF,CAAAA,IAAAA,CAAAA,CAAMG,WAAW,EAAK,GAAA,EAAA;gBAE5DhB,QAASc,CAAAA,aAAAA,CAAAA;AACX,aAAA;AACAG,YAAAA,OAAAA,EAAS,IAAMjB,QAAS,CAAA,EAAA,CAAA;YACxBG,KAAOA,EAAAA,KAAAA,GAAQ,IAAIY,IAAAA,CAAKZ,KAASe,CAAAA,GAAAA;;AAGvC;AAEA,IAAA,qBACEZ,GAACa,CAAAA,YAAAA,EAAAA;QACCR,YAAYZ,EAAAA,KAAAA;AACZC,QAAAA,QAAAA,EAAU,CAACG,KAAAA,GAA2BH,QAASG,CAAAA,KAAAA,CAAMiB,QAAQ,EAAA,CAAA;QAC7DjB,KAAOA,EAAAA,KAAAA;AAENF,QAAAA,QAAAA,EAAAA,OAAAA,EAASoB,IAAI,CAACC,MAAAA,GAAAA;AACb,YAAA,qBACEhB,GAACiB,CAAAA,kBAAAA,EAAAA;AAAsCpB,gBAAAA,KAAAA,EAAOmB,OAAOnB,KAAK;AACvDmB,gBAAAA,QAAAA,EAAAA,MAAAA,CAAOvB;AADeuB,aAAAA,EAAAA,MAAAA,CAAOnB,KAAK,CAAA;AAIzC,SAAA;;AAGN;;;;"}