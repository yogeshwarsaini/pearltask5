{"version":3,"file":"FilterList.js","sources":["../../../../admin/src/components/FilterList/FilterList.tsx"],"sourcesContent":["// TODO: find a better naming convention for the file that was an index file before\n/**\n *\n * FilterList\n *\n */\nimport { FilterTag } from './FilterTag';\n\ntype NumberKeyedObject = Record<number, string>;\n\ntype StringFilter = {\n  [key: string]: string;\n};\n\ntype MimeFilter = {\n  [key: string]:\n    | string\n    | NumberKeyedObject\n    | Record<string, string | NumberKeyedObject>\n    | undefined;\n};\n\nexport type FilterStructure = {\n  [key: string]: MimeFilter | StringFilter | undefined;\n};\n\nexport interface FilterListProps {\n  appliedFilters: FilterStructure[];\n  filtersSchema: {\n    name: string;\n    metadatas?: {\n      label?: string;\n    };\n    fieldSchema?: {\n      type?: string;\n      mainField?: {\n        name: string;\n        type: string;\n      };\n      options?: {\n        label: string;\n        value: string;\n      }[];\n    };\n  }[];\n  onRemoveFilter: (filters: FilterStructure[]) => void;\n}\n\nexport const FilterList = ({ appliedFilters, filtersSchema, onRemoveFilter }: FilterListProps) => {\n  const handleClick = (filter: FilterStructure) => {\n    const nextFilters = appliedFilters.filter((prevFilter) => {\n      const name = Object.keys(filter)[0];\n      const filterName = filter[name];\n      if (filterName !== undefined) {\n        const filterType = Object.keys(filterName)[0];\n        const filterValue = filterName[filterType];\n        if (typeof filterValue === 'string') {\n          const decodedValue = decodeURIComponent(filterValue);\n          return prevFilter[name]?.[filterType] !== decodedValue;\n        }\n      }\n\n      return true;\n    });\n\n    onRemoveFilter(nextFilters);\n  };\n\n  return appliedFilters.map((filter, i) => {\n    const attributeName = Object.keys(filter)[0];\n    const attribute = filtersSchema.find(({ name }) => name === attributeName);\n\n    if (!attribute) {\n      // Handle the case where attribute is undefined\n      return null;\n    }\n\n    const filterObj = filter[attributeName];\n    const operator = Object.keys(filterObj!)[0];\n    let value = filterObj![operator];\n\n    if (Array.isArray(value)) {\n      value = value.join(', ');\n    } else if (typeof value === 'object') {\n      value = Object.values(value).join(', ');\n    } else {\n      value =\n        Array.isArray(value) || typeof value === 'object'\n          ? Object.values(value).join(', ')\n          : decodeURIComponent(value!);\n    }\n\n    let displayedOperator = operator;\n\n    if (attribute?.name === 'mime') {\n      displayedOperator = operator === '$contains' ? '$eq' : '$ne';\n\n      // Type is file\n      // The filter for the file is the following: { mime: {$not: {$contains: ['image', 'video']}}}\n      if (operator === '$not') {\n        value = 'file';\n        displayedOperator = '$eq';\n      }\n\n      // Here the type is file and the filter is not file\n      // { mime: {$contains: ['image', 'video'] }}\n      if (['image', 'video'].includes(value[0]) && ['image', 'video'].includes(value[1])) {\n        value = 'file';\n        displayedOperator = '$ne';\n      }\n    }\n\n    return (\n      <FilterTag\n        // eslint-disable-next-line react/no-array-index-key\n        key={`${attributeName}-${i}`}\n        attribute={attribute}\n        filter={filter}\n        onClick={handleClick}\n        operator={displayedOperator}\n        value={value as string}\n      />\n    );\n  });\n};\n"],"names":["FilterList","appliedFilters","filtersSchema","onRemoveFilter","handleClick","filter","nextFilters","prevFilter","name","Object","keys","filterName","undefined","filterType","filterValue","decodedValue","decodeURIComponent","map","i","attributeName","attribute","find","filterObj","operator","value","Array","isArray","join","values","displayedOperator","includes","_jsx","FilterTag","onClick"],"mappings":"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"}