{"version":3,"file":"UploadAssetDialog.js","sources":["../../../../admin/src/components/UploadAssetDialog/UploadAssetDialog.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Modal } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { EditAssetContent } from '../EditAssetDialog/EditAssetContent';\n\nimport { AddAssetStep } from './AddAssetStep/AddAssetStep';\nimport { PendingAssetStep } from './PendingAssetStep/PendingAssetStep';\n\nimport type { File, RawFile } from '../../../../shared/contracts/files';\nimport type { AllowedFiles } from '../../utils';\n\nconst Steps = {\n  AddAsset: 'AddAsset',\n  PendingAsset: 'PendingAsset',\n};\n\ninterface FileWithRawFile extends Omit<File, 'id' | 'hash'> {\n  id?: string;\n  hash?: string;\n  rawFile: RawFile;\n}\n\ntype FileWithoutIdHash = Omit<File, 'id' | 'hash'>;\n\nexport interface Asset extends Omit<File, 'folder'> {\n  isLocal?: boolean;\n  rawFile?: RawFile;\n  folder?: File['folder'] & { id: number };\n}\n\nexport interface UploadAssetDialogProps {\n  addUploadedFiles?: (files: Asset[] | File[]) => void;\n  folderId?: string | number | null;\n  initialAssetsToAdd?: Asset[];\n  onClose: () => void;\n  open: boolean;\n  trackedLocation?: string;\n  validateAssetsTypes?: (\n    assets: FileWithoutIdHash[] | Asset[],\n    cb: (assets?: AllowedFiles[], error?: string) => void\n  ) => void;\n}\n\nexport const UploadAssetDialog = ({\n  initialAssetsToAdd,\n  folderId = null,\n  onClose = () => {},\n  addUploadedFiles,\n  trackedLocation,\n  open,\n  validateAssetsTypes = (_, cb) => cb(),\n}: UploadAssetDialogProps) => {\n  const { formatMessage } = useIntl();\n  const [step, setStep] = React.useState(initialAssetsToAdd ? Steps.PendingAsset : Steps.AddAsset);\n  const [assets, setAssets] = React.useState(initialAssetsToAdd || []);\n  const [assetToEdit, setAssetToEdit] = React.useState<File | Asset | undefined>(undefined);\n\n  const handleAddToPendingAssets = (nextAssets: Asset[]) => {\n    validateAssetsTypes(nextAssets, () => {\n      setAssets((prevAssets) => prevAssets.concat(nextAssets));\n      setStep(Steps.PendingAsset);\n    });\n  };\n\n  const moveToAddAsset = () => {\n    setStep(Steps.AddAsset);\n  };\n\n  const handleCancelUpload = (file: RawFile) => {\n    const nextAssets = assets.filter((asset) => asset.rawFile !== file);\n    setAssets(nextAssets);\n\n    // When there's no asset, transition to the AddAsset step\n    if (nextAssets.length === 0) {\n      moveToAddAsset();\n    }\n  };\n\n  const handleUploadSuccess = (file: RawFile) => {\n    const nextAssets = assets.filter((asset) => asset.rawFile !== file);\n    setAssets(nextAssets);\n\n    if (nextAssets.length === 0) {\n      onClose();\n    }\n  };\n\n  const handleAssetEditValidation = (nextAsset?: Asset | boolean | null) => {\n    if (nextAsset && typeof nextAsset !== 'boolean') {\n      const nextAssets = assets.map((asset) => (asset === assetToEdit ? nextAsset : asset));\n      setAssets(nextAssets);\n    }\n\n    setAssetToEdit(undefined);\n  };\n\n  const handleClose = () => {\n    if (step === Steps.PendingAsset && assets.length > 0) {\n      // eslint-disable-next-line no-alert\n      const confirm = window.confirm(\n        formatMessage({\n          id: 'window.confirm.close-modal.files',\n          defaultMessage: 'Are you sure? You have some files that have not been uploaded yet.',\n        })\n      );\n\n      if (confirm) {\n        onClose();\n      }\n    } else {\n      onClose();\n    }\n  };\n\n  const handleRemoveAsset = (assetToRemove: File) => {\n    const nextAssets = assets.filter((asset) => asset !== assetToRemove);\n    setAssets(nextAssets);\n  };\n\n  return (\n    <Modal.Root open={open} onOpenChange={handleClose}>\n      {step === Steps.AddAsset && (\n        <Modal.Content>\n          <AddAssetStep\n            onClose={onClose}\n            onAddAsset={(assets: FileWithRawFile[]) =>\n              handleAddToPendingAssets(assets as unknown as Asset[])\n            }\n            trackedLocation={trackedLocation}\n          />\n        </Modal.Content>\n      )}\n\n      {step === Steps.PendingAsset && (\n        <Modal.Content>\n          <PendingAssetStep\n            onClose={handleClose}\n            assets={assets}\n            onEditAsset={setAssetToEdit}\n            onRemoveAsset={handleRemoveAsset}\n            onClickAddAsset={moveToAddAsset}\n            onCancelUpload={handleCancelUpload}\n            onUploadSucceed={handleUploadSuccess}\n            initialAssetsToAdd={initialAssetsToAdd}\n            addUploadedFiles={addUploadedFiles}\n            folderId={folderId}\n            trackedLocation={trackedLocation}\n          />\n        </Modal.Content>\n      )}\n\n      {assetToEdit && (\n        <Modal.Content>\n          <EditAssetContent\n            onClose={handleAssetEditValidation}\n            asset={assetToEdit as Asset}\n            canUpdate\n            canCopyLink={false}\n            canDownload={false}\n            trackedLocation={trackedLocation}\n          />\n        </Modal.Content>\n      )}\n    </Modal.Root>\n  );\n};\n"],"names":["Steps","AddAsset","PendingAsset","UploadAssetDialog","initialAssetsToAdd","folderId","onClose","addUploadedFiles","trackedLocation","open","validateAssetsTypes","_","cb","formatMessage","useIntl","step","setStep","React","useState","assets","setAssets","assetToEdit","setAssetToEdit","undefined","handleAddToPendingAssets","nextAssets","prevAssets","concat","moveToAddAsset","handleCancelUpload","file","filter","asset","rawFile","length","handleUploadSuccess","handleAssetEditValidation","nextAsset","map","handleClose","confirm","window","id","defaultMessage","handleRemoveAsset","assetToRemove","_jsxs","Modal","Root","onOpenChange","_jsx","Content","AddAssetStep","onAddAsset","PendingAssetStep","onEditAsset","onRemoveAsset","onClickAddAsset","onCancelUpload","onUploadSucceed","EditAssetContent","canUpdate","canCopyLink","canDownload"],"mappings":"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"}