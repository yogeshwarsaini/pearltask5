{"version":3,"file":"register.js","sources":["../../server/src/register.ts"],"sourcesContent":["import _ from 'lodash';\n\nimport { errors, file } from '@strapi/utils';\nimport type { Core } from '@strapi/types';\n\nimport registerUploadMiddleware from './middlewares/upload';\nimport spec from '../../documentation/content-api.json';\nimport type { Config, File, InputFile } from './types';\n\nconst { PayloadTooLargeError } = errors;\nconst { bytesToHumanReadable, kbytesToBytes } = file;\n\n/**\n * Register upload plugin\n */\nexport async function register({ strapi }: { strapi: Core.Strapi }) {\n  strapi.plugin('upload').provider = createProvider(strapi.config.get<Config>('plugin::upload'));\n\n  await registerUploadMiddleware({ strapi });\n\n  if (strapi.plugin('graphql')) {\n    const { installGraphqlExtension } = await import('./graphql.js');\n    installGraphqlExtension({ strapi });\n  }\n\n  if (strapi.plugin('documentation')) {\n    strapi\n      .plugin('documentation')\n      .service('override')\n      .registerOverride(spec, {\n        pluginOrigin: 'upload',\n        excludeFromGeneration: ['upload'],\n      });\n  }\n}\n\nconst createProvider = (config: Config) => {\n  const { providerOptions, actionOptions = {} } = config;\n\n  const providerName = _.toLower(config.provider);\n  let provider;\n\n  let modulePath;\n  try {\n    modulePath = require.resolve(`@strapi/provider-upload-${providerName}`);\n  } catch (error) {\n    if (\n      typeof error === 'object' &&\n      error !== null &&\n      'code' in error &&\n      error.code === 'MODULE_NOT_FOUND'\n    ) {\n      modulePath = providerName;\n    } else {\n      throw error;\n    }\n  }\n\n  try {\n    provider = require(modulePath);\n  } catch (err) {\n    const newError = new Error(`Could not load upload provider \"${providerName}\".`);\n\n    if (err instanceof Error) {\n      newError.stack = err.stack;\n    }\n\n    throw newError;\n  }\n\n  const providerInstance = provider.init(providerOptions);\n\n  if (!providerInstance.delete) {\n    throw new Error(`The upload provider \"${providerName}\" doesn't implement the delete method.`);\n  }\n\n  if (!providerInstance.upload && !providerInstance.uploadStream) {\n    throw new Error(\n      `The upload provider \"${providerName}\" doesn't implement the uploadStream nor the upload method.`\n    );\n  }\n\n  if (!providerInstance.uploadStream) {\n    process.emitWarning(\n      `The upload provider \"${providerName}\" doesn't implement the uploadStream function. Strapi will fallback on the upload method. Some performance issues may occur.`\n    );\n  }\n\n  const wrappedProvider = _.mapValues(providerInstance, (method, methodName) => {\n    return async (file: File, options = actionOptions[methodName]) =>\n      providerInstance[methodName](file, options);\n  });\n\n  return Object.assign(Object.create(baseProvider), wrappedProvider);\n};\n\nconst baseProvider = {\n  extend(obj: unknown) {\n    Object.assign(this, obj);\n  },\n  checkFileSize(file: InputFile, { sizeLimit }: { sizeLimit: number }) {\n    if (sizeLimit && kbytesToBytes(file.size) > sizeLimit) {\n      throw new PayloadTooLargeError(\n        `${file.originalFilename} exceeds size limit of ${bytesToHumanReadable(sizeLimit)}.`\n      );\n    }\n  },\n  getSignedUrl(file: File) {\n    return file;\n  },\n  isPrivate() {\n    return false;\n  },\n};\n"],"names":["PayloadTooLargeError","errors","bytesToHumanReadable","kbytesToBytes","file","register","strapi","plugin","provider","createProvider","config","get","registerUploadMiddleware","installGraphqlExtension","service","registerOverride","spec","pluginOrigin","excludeFromGeneration","providerOptions","actionOptions","providerName","_","toLower","modulePath","require","resolve","error","code","err","newError","Error","stack","providerInstance","init","delete","upload","uploadStream","process","emitWarning","wrappedProvider","mapValues","method","methodName","options","Object","assign","create","baseProvider","extend","obj","checkFileSize","sizeLimit","size","originalFilename","getSignedUrl","isPrivate"],"mappings":"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"}