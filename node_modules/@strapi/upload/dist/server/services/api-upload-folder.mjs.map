{"version":3,"file":"api-upload-folder.mjs","sources":["../../../server/src/services/api-upload-folder.ts"],"sourcesContent":["import { isNil, get } from 'lodash/fp';\nimport { getService } from '../utils';\nimport { FOLDER_MODEL_UID, API_UPLOAD_FOLDER_BASE_NAME } from '../constants';\n\nconst getStore = () => strapi.store({ type: 'plugin', name: 'upload', key: 'api-folder' });\n\nconst createApiUploadFolder = async () => {\n  let name = API_UPLOAD_FOLDER_BASE_NAME;\n  const folderService = getService('folder');\n\n  let exists = true;\n  let index = 1;\n  while (exists) {\n    exists = await folderService.exists({ name, parent: null });\n    if (exists) {\n      name = `${API_UPLOAD_FOLDER_BASE_NAME} (${index})`;\n      index += 1;\n    }\n  }\n\n  const folder = await folderService.create({ name });\n\n  await getStore().set({ value: { id: folder.id } });\n\n  return folder;\n};\n\nconst getAPIUploadFolder = async () => {\n  const storeValue = await getStore().get({});\n  const folderId = get('id', storeValue);\n\n  const folder = folderId\n    ? await strapi.db.query(FOLDER_MODEL_UID).findOne({ where: { id: folderId } })\n    : null;\n\n  return isNil(folder) ? createApiUploadFolder() : folder;\n};\n\nexport default {\n  getAPIUploadFolder,\n};\n"],"names":["getStore","strapi","store","type","name","key","createApiUploadFolder","API_UPLOAD_FOLDER_BASE_NAME","folderService","getService","exists","index","parent","folder","create","set","value","id","getAPIUploadFolder","storeValue","get","folderId","db","query","FOLDER_MODEL_UID","findOne","where","isNil"],"mappings":";;;;AAIA,MAAMA,QAAW,GAAA,IAAMC,MAAOC,CAAAA,KAAK,CAAC;QAAEC,IAAM,EAAA,QAAA;QAAUC,IAAM,EAAA,QAAA;QAAUC,GAAK,EAAA;AAAa,KAAA,CAAA;AAExF,MAAMC,qBAAwB,GAAA,UAAA;AAC5B,IAAA,IAAIF,IAAOG,GAAAA,2BAAAA;AACX,IAAA,MAAMC,gBAAgBC,UAAW,CAAA,QAAA,CAAA;AAEjC,IAAA,IAAIC,MAAS,GAAA,IAAA;AACb,IAAA,IAAIC,KAAQ,GAAA,CAAA;AACZ,IAAA,MAAOD,MAAQ,CAAA;QACbA,MAAS,GAAA,MAAMF,aAAcE,CAAAA,MAAM,CAAC;AAAEN,YAAAA,IAAAA;YAAMQ,MAAQ,EAAA;AAAK,SAAA,CAAA;AACzD,QAAA,IAAIF,MAAQ,EAAA;AACVN,YAAAA,IAAAA,GAAO,CAAC,EAAEG,2BAAAA,CAA4B,EAAE,EAAEI,KAAAA,CAAM,CAAC,CAAC;YAClDA,KAAS,IAAA,CAAA;AACX;AACF;AAEA,IAAA,MAAME,MAAS,GAAA,MAAML,aAAcM,CAAAA,MAAM,CAAC;AAAEV,QAAAA;AAAK,KAAA,CAAA;IAEjD,MAAMJ,QAAAA,EAAAA,CAAWe,GAAG,CAAC;QAAEC,KAAO,EAAA;AAAEC,YAAAA,EAAAA,EAAIJ,OAAOI;AAAG;AAAE,KAAA,CAAA;IAEhD,OAAOJ,MAAAA;AACT,CAAA;AAEA,MAAMK,kBAAqB,GAAA,UAAA;AACzB,IAAA,MAAMC,UAAa,GAAA,MAAMnB,QAAWoB,EAAAA,CAAAA,GAAG,CAAC,EAAC,CAAA;IACzC,MAAMC,QAAAA,GAAWD,IAAI,IAAMD,EAAAA,UAAAA,CAAAA;IAE3B,MAAMN,MAAAA,GAASQ,QACX,GAAA,MAAMpB,MAAOqB,CAAAA,EAAE,CAACC,KAAK,CAACC,gBAAkBC,CAAAA,CAAAA,OAAO,CAAC;QAAEC,KAAO,EAAA;YAAET,EAAII,EAAAA;AAAS;KACxE,CAAA,GAAA,IAAA;IAEJ,OAAOM,KAAAA,CAAMd,UAAUP,qBAA0BO,EAAAA,GAAAA,MAAAA;AACnD,CAAA;AAEA,sBAAe;AACbK,IAAAA;AACF,CAAE;;;;"}