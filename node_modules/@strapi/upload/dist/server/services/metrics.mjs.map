{"version":3,"file":"metrics.mjs","sources":["../../../server/src/services/metrics.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\n\nconst getProviderName = () => strapi.config.get('plugin::upload.provider', 'local');\nconst isProviderPrivate = async () => strapi.plugin('upload').provider.isPrivate();\n\nexport default ({ strapi }: { strapi: Core.Strapi }) => ({\n  async sendUploadPluginMetrics() {\n    const uploadProvider = getProviderName();\n    const privateProvider = await isProviderPrivate();\n\n    strapi.telemetry.send('didInitializePluginUpload', {\n      groupProperties: {\n        uploadProvider,\n        privateProvider,\n      },\n    });\n  },\n});\n"],"names":["getProviderName","strapi","config","get","isProviderPrivate","plugin","provider","isPrivate","sendUploadPluginMetrics","uploadProvider","privateProvider","telemetry","send","groupProperties"],"mappings":"AAEA,MAAMA,kBAAkB,IAAMC,MAAAA,CAAOC,MAAM,CAACC,GAAG,CAAC,yBAA2B,EAAA,OAAA,CAAA;AAC3E,MAAMC,iBAAAA,GAAoB,UAAYH,MAAOI,CAAAA,MAAM,CAAC,QAAUC,CAAAA,CAAAA,QAAQ,CAACC,SAAS,EAAA;AAEhF,cAAe,CAAA,CAAC,EAAEN,QAAAA,OAAM,EAA2B,IAAM;QACvD,MAAMO,uBAAAA,CAAAA,GAAAA;AACJ,YAAA,MAAMC,cAAiBT,GAAAA,eAAAA,EAAAA;AACvB,YAAA,MAAMU,kBAAkB,MAAMN,iBAAAA,EAAAA;AAE9BH,YAAAA,OAAAA,CAAOU,SAAS,CAACC,IAAI,CAAC,2BAA6B,EAAA;gBACjDC,eAAiB,EAAA;AACfJ,oBAAAA,cAAAA;AACAC,oBAAAA;AACF;AACF,aAAA,CAAA;AACF;AACF,KAAA,CAAC;;;;"}