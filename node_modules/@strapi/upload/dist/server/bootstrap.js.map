{"version":3,"file":"bootstrap.js","sources":["../../server/src/bootstrap.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\n\nimport { getService } from './utils';\nimport { ALLOWED_SORT_STRINGS, ALLOWED_WEBHOOK_EVENTS } from './constants';\n\nexport async function bootstrap({ strapi }: { strapi: Core.Strapi }) {\n  const defaultConfig = {\n    settings: {\n      sizeOptimization: true,\n      responsiveDimensions: true,\n      autoOrientation: false,\n    },\n    view_configuration: {\n      pageSize: 10,\n      sort: ALLOWED_SORT_STRINGS[0],\n    },\n  };\n\n  for (const [key, defaultValue] of Object.entries(defaultConfig)) {\n    // set plugin store\n    const configurator = strapi.store!({ type: 'plugin', name: 'upload', key });\n\n    const config = await configurator.get({});\n    if (\n      config &&\n      Object.keys(defaultValue).every((key) => Object.prototype.hasOwnProperty.call(config, key))\n    ) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    // if the config does not exist or does not have all the required keys\n    // set from the defaultValue ensuring all required settings are present\n    await configurator.set({\n      value: Object.assign(defaultValue, config || {}),\n    });\n  }\n\n  await registerPermissionActions();\n  await registerWebhookEvents();\n\n  await getService('weeklyMetrics').registerCron();\n  getService('metrics').sendUploadPluginMetrics();\n\n  getService('extensions').signFileUrlsOnDocumentService();\n}\n\nconst registerWebhookEvents = async () =>\n  Object.entries(ALLOWED_WEBHOOK_EVENTS).forEach(([key, value]) => {\n    strapi.get('webhookStore').addAllowedEvent(key, value);\n  });\n\nconst registerPermissionActions = async () => {\n  const actions = [\n    {\n      section: 'plugins',\n      displayName: 'Access the Media Library',\n      uid: 'read',\n      pluginName: 'upload',\n    },\n    {\n      section: 'plugins',\n      displayName: 'Create (upload)',\n      uid: 'assets.create',\n      subCategory: 'assets',\n      pluginName: 'upload',\n    },\n    {\n      section: 'plugins',\n      displayName: 'Update (crop, details, replace) + delete',\n      uid: 'assets.update',\n      subCategory: 'assets',\n      pluginName: 'upload',\n    },\n    {\n      section: 'plugins',\n      displayName: 'Download',\n      uid: 'assets.download',\n      subCategory: 'assets',\n      pluginName: 'upload',\n    },\n    {\n      section: 'plugins',\n      displayName: 'Copy link',\n      uid: 'assets.copy-link',\n      subCategory: 'assets',\n      pluginName: 'upload',\n    },\n    {\n      section: 'plugins',\n      displayName: 'Configure view',\n      uid: 'configure-view',\n      pluginName: 'upload',\n    },\n    {\n      section: 'settings',\n      displayName: 'Access the Media Library settings page',\n      uid: 'settings.read',\n      category: 'media library',\n      pluginName: 'upload',\n    },\n  ];\n\n  await strapi.service('admin::permission').actionProvider.registerMany(actions);\n};\n"],"names":["bootstrap","strapi","defaultConfig","settings","sizeOptimization","responsiveDimensions","autoOrientation","view_configuration","pageSize","sort","ALLOWED_SORT_STRINGS","key","defaultValue","Object","entries","configurator","store","type","name","config","get","keys","every","prototype","hasOwnProperty","call","set","value","assign","registerPermissionActions","registerWebhookEvents","getService","registerCron","sendUploadPluginMetrics","signFileUrlsOnDocumentService","ALLOWED_WEBHOOK_EVENTS","forEach","addAllowedEvent","actions","section","displayName","uid","pluginName","subCategory","category","service","actionProvider","registerMany"],"mappings":"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"}