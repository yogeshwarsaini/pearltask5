{"version":3,"file":"folder.mjs","sources":["../../../server/src/content-types/folder.ts"],"sourcesContent":["import type { Struct } from '@strapi/types';\n\nimport { FOLDER_MODEL_UID, FILE_MODEL_UID } from '../constants';\n\nexport default {\n  schema: {\n    collectionName: 'upload_folders',\n    info: {\n      singularName: 'folder',\n      pluralName: 'folders',\n      displayName: 'Folder',\n    },\n    options: {},\n    pluginOptions: {\n      'content-manager': {\n        visible: false,\n      },\n      'content-type-builder': {\n        visible: false,\n      },\n    },\n    attributes: {\n      name: {\n        type: 'string',\n        minLength: 1,\n        required: true,\n      },\n      pathId: {\n        type: 'integer',\n        unique: true,\n        required: true,\n      },\n      parent: {\n        type: 'relation',\n        relation: 'manyToOne',\n        target: FOLDER_MODEL_UID,\n        inversedBy: 'children',\n      },\n      children: {\n        type: 'relation',\n        relation: 'oneToMany',\n        target: FOLDER_MODEL_UID,\n        mappedBy: 'parent',\n      },\n      files: {\n        type: 'relation',\n        relation: 'oneToMany',\n        target: FILE_MODEL_UID,\n        mappedBy: 'folder',\n      },\n      path: {\n        type: 'string',\n        minLength: 1,\n        required: true,\n      },\n    },\n    // experimental feature:\n    indexes: [\n      {\n        name: 'upload_folders_path_id_index',\n        columns: ['path_id'],\n        type: 'unique',\n      },\n      {\n        name: 'upload_folders_path_index',\n        columns: ['path'],\n        type: 'unique',\n      },\n    ],\n  } satisfies Partial<Struct.CollectionTypeSchema>,\n};\n"],"names":["schema","collectionName","info","singularName","pluralName","displayName","options","pluginOptions","visible","attributes","name","type","minLength","required","pathId","unique","parent","relation","target","FOLDER_MODEL_UID","inversedBy","children","mappedBy","files","FILE_MODEL_UID","path","indexes","columns"],"mappings":";;AAIA,aAAe;IACbA,MAAQ,EAAA;QACNC,cAAgB,EAAA,gBAAA;QAChBC,IAAM,EAAA;YACJC,YAAc,EAAA,QAAA;YACdC,UAAY,EAAA,SAAA;YACZC,WAAa,EAAA;AACf,SAAA;AACAC,QAAAA,OAAAA,EAAS,EAAC;QACVC,aAAe,EAAA;YACb,iBAAmB,EAAA;gBACjBC,OAAS,EAAA;AACX,aAAA;YACA,sBAAwB,EAAA;gBACtBA,OAAS,EAAA;AACX;AACF,SAAA;QACAC,UAAY,EAAA;YACVC,IAAM,EAAA;gBACJC,IAAM,EAAA,QAAA;gBACNC,SAAW,EAAA,CAAA;gBACXC,QAAU,EAAA;AACZ,aAAA;YACAC,MAAQ,EAAA;gBACNH,IAAM,EAAA,SAAA;gBACNI,MAAQ,EAAA,IAAA;gBACRF,QAAU,EAAA;AACZ,aAAA;YACAG,MAAQ,EAAA;gBACNL,IAAM,EAAA,UAAA;gBACNM,QAAU,EAAA,WAAA;gBACVC,MAAQC,EAAAA,gBAAAA;gBACRC,UAAY,EAAA;AACd,aAAA;YACAC,QAAU,EAAA;gBACRV,IAAM,EAAA,UAAA;gBACNM,QAAU,EAAA,WAAA;gBACVC,MAAQC,EAAAA,gBAAAA;gBACRG,QAAU,EAAA;AACZ,aAAA;YACAC,KAAO,EAAA;gBACLZ,IAAM,EAAA,UAAA;gBACNM,QAAU,EAAA,WAAA;gBACVC,MAAQM,EAAAA,cAAAA;gBACRF,QAAU,EAAA;AACZ,aAAA;YACAG,IAAM,EAAA;gBACJd,IAAM,EAAA,QAAA;gBACNC,SAAW,EAAA,CAAA;gBACXC,QAAU,EAAA;AACZ;AACF,SAAA;;QAEAa,OAAS,EAAA;AACP,YAAA;gBACEhB,IAAM,EAAA,8BAAA;gBACNiB,OAAS,EAAA;AAAC,oBAAA;AAAU,iBAAA;gBACpBhB,IAAM,EAAA;AACR,aAAA;AACA,YAAA;gBACED,IAAM,EAAA,2BAAA;gBACNiB,OAAS,EAAA;AAAC,oBAAA;AAAO,iBAAA;gBACjBhB,IAAM,EAAA;AACR;AACD;AACH;AACF,CAAE;;;;"}