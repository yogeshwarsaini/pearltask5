{"version":3,"file":"admin-file.js","sources":["../../../server/src/controllers/admin-file.ts"],"sourcesContent":["import { merge } from 'lodash/fp';\nimport { async } from '@strapi/utils';\n\nimport type { Context } from 'koa';\n\nimport { getService } from '../utils';\nimport { ACTIONS, FILE_MODEL_UID } from '../constants';\nimport { findEntityAndCheckPermissions } from './utils/find-entity-and-check-permissions';\n\nexport default {\n  async find(ctx: Context) {\n    const {\n      state: { userAbility },\n    } = ctx;\n\n    const defaultQuery = { populate: { folder: true } };\n\n    const pm = strapi.service('admin::permission').createPermissionsManager({\n      ability: userAbility,\n      action: ACTIONS.read,\n      model: FILE_MODEL_UID,\n    });\n\n    if (!pm.isAllowed) {\n      return ctx.forbidden();\n    }\n\n    // validate the incoming user query params\n    await pm.validateQuery(ctx.query);\n\n    const query = await async.pipe(\n      // Start by sanitizing the incoming query\n      (q) => pm.sanitizeQuery(q),\n      // Add the default query which should not be validated or sanitized\n      (q) => merge(defaultQuery, q),\n      // Add the dynamic filters based on permissions' conditions\n      (q) => pm.addPermissionsQueryTo(q)\n    )(ctx.query);\n\n    const { results: files, pagination } = await getService('upload').findPage(query);\n\n    // Sign file urls for private providers\n    const signedFiles = await async.map(files, getService('file').signFileUrls);\n\n    const sanitizedFiles = await pm.sanitizeOutput(signedFiles);\n\n    return { results: sanitizedFiles, pagination };\n  },\n\n  async findOne(ctx: Context) {\n    const {\n      state: { userAbility },\n      params: { id },\n    } = ctx;\n\n    const { pm, file } = await findEntityAndCheckPermissions(\n      userAbility,\n      ACTIONS.read,\n      FILE_MODEL_UID,\n      id\n    );\n\n    const signedFile = await getService('file').signFileUrls(file);\n    ctx.body = await pm.sanitizeOutput(signedFile);\n  },\n\n  async destroy(ctx: Context) {\n    const { id } = ctx.params;\n    const { userAbility } = ctx.state;\n\n    const { pm, file } = await findEntityAndCheckPermissions(\n      userAbility,\n      ACTIONS.update,\n      FILE_MODEL_UID,\n      id\n    );\n\n    const [body] = await Promise.all([\n      pm.sanitizeOutput(file, { action: ACTIONS.read }),\n      getService('upload').remove(file),\n    ]);\n\n    ctx.body = body;\n  },\n};\n"],"names":["find","ctx","state","userAbility","defaultQuery","populate","folder","pm","strapi","service","createPermissionsManager","ability","action","ACTIONS","read","model","FILE_MODEL_UID","isAllowed","forbidden","validateQuery","query","async","pipe","q","sanitizeQuery","merge","addPermissionsQueryTo","results","files","pagination","getService","findPage","signedFiles","map","signFileUrls","sanitizedFiles","sanitizeOutput","findOne","params","id","file","findEntityAndCheckPermissions","signedFile","body","destroy","update","Promise","all","remove"],"mappings":"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"}