{"version":3,"file":"upload.js","sources":["../../../../../server/src/controllers/validation/admin/upload.ts"],"sourcesContent":["import { yup, validateYupSchema } from '@strapi/utils';\nimport { isNil } from 'lodash/fp';\nimport { getService } from '../../../utils';\n\nconst fileInfoSchema = yup.object({\n  name: yup.string().nullable(),\n  alternativeText: yup.string().nullable(),\n  caption: yup.string().nullable(),\n  folder: yup\n    .strapiID()\n    .nullable()\n    .test('folder-exists', 'the folder does not exist', async (folderId) => {\n      if (isNil(folderId)) {\n        return true;\n      }\n\n      const exists = await getService('folder').exists({ id: folderId });\n\n      return exists;\n    }),\n});\n\nconst uploadSchema = yup.object({\n  fileInfo: fileInfoSchema,\n});\n\nconst multiUploadSchema = yup.object({\n  fileInfo: yup.array().of(fileInfoSchema),\n});\n\nconst validateUploadBody = (data = {}, isMulti = false) => {\n  const schema = isMulti ? multiUploadSchema : uploadSchema;\n\n  return validateYupSchema(schema, { strict: false })(data);\n};\n\nexport { validateUploadBody };\n\nexport type UploadBody =\n  | yup.InferType<typeof uploadSchema>\n  | yup.InferType<typeof multiUploadSchema>;\n"],"names":["fileInfoSchema","yup","object","name","string","nullable","alternativeText","caption","folder","strapiID","test","folderId","isNil","exists","getService","id","uploadSchema","fileInfo","multiUploadSchema","array","of","validateUploadBody","data","isMulti","schema","validateYupSchema","strict"],"mappings":";;;;;;AAIA,MAAMA,cAAAA,GAAiBC,SAAIC,CAAAA,MAAM,CAAC;IAChCC,IAAMF,EAAAA,SAAAA,CAAIG,MAAM,EAAA,CAAGC,QAAQ,EAAA;IAC3BC,eAAiBL,EAAAA,SAAAA,CAAIG,MAAM,EAAA,CAAGC,QAAQ,EAAA;IACtCE,OAASN,EAAAA,SAAAA,CAAIG,MAAM,EAAA,CAAGC,QAAQ,EAAA;IAC9BG,MAAQP,EAAAA,SAAAA,CACLQ,QAAQ,EACRJ,CAAAA,QAAQ,GACRK,IAAI,CAAC,eAAiB,EAAA,2BAAA,EAA6B,OAAOC,QAAAA,GAAAA;AACzD,QAAA,IAAIC,SAAMD,QAAW,CAAA,EAAA;YACnB,OAAO,IAAA;AACT;AAEA,QAAA,MAAME,MAAS,GAAA,MAAMC,gBAAW,CAAA,QAAA,CAAA,CAAUD,MAAM,CAAC;YAAEE,EAAIJ,EAAAA;AAAS,SAAA,CAAA;QAEhE,OAAOE,MAAAA;AACT,KAAA;AACJ,CAAA,CAAA;AAEA,MAAMG,YAAAA,GAAef,SAAIC,CAAAA,MAAM,CAAC;IAC9Be,QAAUjB,EAAAA;AACZ,CAAA,CAAA;AAEA,MAAMkB,iBAAAA,GAAoBjB,SAAIC,CAAAA,MAAM,CAAC;AACnCe,IAAAA,QAAAA,EAAUhB,SAAIkB,CAAAA,KAAK,EAAGC,CAAAA,EAAE,CAACpB,cAAAA;AAC3B,CAAA,CAAA;AAEA,MAAMqB,qBAAqB,CAACC,IAAAA,GAAO,EAAE,EAAEC,UAAU,KAAK,GAAA;IACpD,MAAMC,MAAAA,GAASD,UAAUL,iBAAoBF,GAAAA,YAAAA;AAE7C,IAAA,OAAOS,wBAAkBD,MAAQ,EAAA;QAAEE,MAAQ,EAAA;KAASJ,CAAAA,CAAAA,IAAAA,CAAAA;AACtD;;;;"}