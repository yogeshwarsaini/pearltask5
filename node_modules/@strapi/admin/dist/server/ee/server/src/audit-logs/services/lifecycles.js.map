{"version":3,"file":"lifecycles.js","sources":["../../../../../../../ee/server/src/audit-logs/services/lifecycles.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\nimport { scheduleJob } from 'node-schedule';\n\nconst DEFAULT_RETENTION_DAYS = 90;\n\nconst defaultEvents = [\n  'entry.create',\n  'entry.update',\n  'entry.delete',\n  'entry.publish',\n  'entry.unpublish',\n  'media.create',\n  'media.update',\n  'media.delete',\n  'media-folder.create',\n  'media-folder.update',\n  'media-folder.delete',\n  'user.create',\n  'user.update',\n  'user.delete',\n  'admin.auth.success',\n  'admin.logout',\n  'content-type.create',\n  'content-type.update',\n  'content-type.delete',\n  'component.create',\n  'component.update',\n  'component.delete',\n  'role.create',\n  'role.update',\n  'role.delete',\n  'permission.create',\n  'permission.update',\n  'permission.delete',\n];\n\nconst getEventMap = (defaultEvents: any) => {\n  const getDefaultPayload = (...args: any) => args[0];\n\n  // Use the default payload for all default events\n  return defaultEvents.reduce((acc: any, event: any) => {\n    acc[event] = getDefaultPayload;\n    return acc;\n  }, {} as any);\n};\n\nconst getRetentionDays = (strapi: Core.Strapi) => {\n  const featureConfig = strapi.ee.features.get('audit-logs');\n  const licenseRetentionDays =\n    typeof featureConfig === 'object' && featureConfig?.options.retentionDays;\n  const userRetentionDays = strapi.config.get('admin.auditLogs.retentionDays');\n\n  // For enterprise plans, use 90 days by default, but allow users to override it\n  if (licenseRetentionDays == null) {\n    return userRetentionDays ?? DEFAULT_RETENTION_DAYS;\n  }\n\n  // Allow users to override the license retention days, but not to increase it\n  if (userRetentionDays && userRetentionDays < licenseRetentionDays) {\n    return userRetentionDays;\n  }\n\n  // User didn't provide a retention days value, use the license one\n  return licenseRetentionDays;\n};\n\n/**\n * @description\n * Manages the the lifecycle of audit logs. Accessible via strapi.get('audit-logs-lifecycles')\n */\nconst createAuditLogsLifecycleService = (strapi: Core.Strapi) => {\n  // Manage internal service state privately\n  const state = {} as any;\n  const auditLogsService = strapi.get('audit-logs');\n\n  // NOTE: providers should be able to replace getEventMap to add or remove events\n  const eventMap = getEventMap(defaultEvents);\n\n  const processEvent = (name: string, ...args: any) => {\n    const requestState = strapi.requestContext.get()?.state;\n\n    // Ignore events with auth strategies different from admin\n    const isUsingAdminAuth = requestState?.route.info.type === 'admin';\n    const user = requestState?.user;\n    if (!isUsingAdminAuth || !user) {\n      return null;\n    }\n\n    const getPayload = eventMap[name];\n\n    // Ignore the event if it's not in the map\n    if (!getPayload) {\n      return null;\n    }\n\n    // Ignore some events based on payload\n    // TODO: What does this ignore in upload? Why would we want to ignore anything?\n    const ignoredUids = ['plugin::upload.file', 'plugin::upload.folder'];\n    if (ignoredUids.includes(args[0]?.uid)) {\n      return null;\n    }\n\n    return {\n      action: name,\n      date: new Date().toISOString(),\n      payload: getPayload(...args) || {},\n      userId: user.id,\n    };\n  };\n\n  const handleEvent = async (name: string, ...args: any) => {\n    const processedEvent = processEvent(name, ...args);\n\n    if (processedEvent) {\n      await auditLogsService.saveEvent(processedEvent);\n    }\n  };\n\n  return {\n    async register() {\n      // Handle license being enabled\n      if (!state.eeEnableUnsubscribe) {\n        // @ts-expect-error- update event hub to receive callback argument\n        state.eeEnableUnsubscribe = strapi.eventHub.on('ee.enable', () => {\n          // Recreate the service to use the new license info\n          this.destroy();\n          this.register();\n        });\n      }\n\n      // Handle license being updated\n      if (!state.eeUpdateUnsubscribe) {\n        // @ts-expect-error- update event hub to receive callback argument\n        state.eeUpdateUnsubscribe = strapi.eventHub.on('ee.update', () => {\n          // Recreate the service to use the new license info\n          this.destroy();\n          this.register();\n        });\n      }\n\n      // Handle license being disabled\n      // @ts-expect-error- update event hub to receive callback argument\n      state.eeDisableUnsubscribe = strapi.eventHub.on('ee.disable', () => {\n        // Turn off service when the license gets disabled\n        // Only ee.enable and ee.update listeners remain active to recreate the service\n        this.destroy();\n      });\n\n      // Check current state of license\n      if (!strapi.ee.features.isEnabled('audit-logs')) {\n        return this;\n      }\n\n      // Start saving events\n      state.eventHubUnsubscribe = strapi.eventHub.subscribe(handleEvent);\n\n      // Manage audit logs auto deletion\n      const retentionDays = getRetentionDays(strapi);\n      state.deleteExpiredJob = scheduleJob('0 0 * * *', () => {\n        const expirationDate = new Date(Date.now() - retentionDays * 24 * 60 * 60 * 1000);\n        auditLogsService.deleteExpiredEvents(expirationDate);\n      });\n\n      return this;\n    },\n\n    unsubscribe() {\n      if (state.eeDisableUnsubscribe) {\n        state.eeDisableUnsubscribe();\n      }\n\n      if (state.eventHubUnsubscribe) {\n        state.eventHubUnsubscribe();\n      }\n\n      if (state.deleteExpiredJob) {\n        state.deleteExpiredJob.cancel();\n      }\n\n      return this;\n    },\n\n    destroy() {\n      return this.unsubscribe();\n    },\n  };\n};\n\nexport { createAuditLogsLifecycleService };\n"],"names":["DEFAULT_RETENTION_DAYS","defaultEvents","getEventMap","getDefaultPayload","args","reduce","acc","event","getRetentionDays","strapi","featureConfig","ee","features","get","licenseRetentionDays","options","retentionDays","userRetentionDays","config","createAuditLogsLifecycleService","state","auditLogsService","eventMap","processEvent","name","requestState","requestContext","isUsingAdminAuth","route","info","type","user","getPayload","ignoredUids","includes","uid","action","date","Date","toISOString","payload","userId","id","handleEvent","processedEvent","saveEvent","register","eeEnableUnsubscribe","eventHub","on","destroy","eeUpdateUnsubscribe","eeDisableUnsubscribe","isEnabled","eventHubUnsubscribe","subscribe","deleteExpiredJob","scheduleJob","expirationDate","now","deleteExpiredEvents","unsubscribe","cancel"],"mappings":"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"}