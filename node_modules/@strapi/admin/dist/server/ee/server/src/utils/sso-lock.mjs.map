{"version":3,"file":"sso-lock.mjs","sources":["../../../../../../ee/server/src/utils/sso-lock.ts"],"sourcesContent":["import { isEmpty } from 'lodash/fp';\n\nexport const isSsoLocked = async (user: any) => {\n  if (!strapi.ee.features.isEnabled('sso')) {\n    return false;\n  }\n\n  if (!user) {\n    throw new Error('Missing user object');\n  }\n\n  // check if any roles are locked\n  const adminStore = await strapi.store({ type: 'core', name: 'admin' });\n  const { providers } = (await adminStore.get({ key: 'auth' })) as any;\n  const lockedRoles = providers.ssoLockedRoles ?? [];\n  if (isEmpty(lockedRoles)) {\n    return false;\n  }\n\n  const roles =\n    // If the roles are pre-loaded for the given user, then use them\n    user.roles ??\n    // Otherwise, try to load the role based on the given user ID\n    (await strapi.db.query('admin::user').load(user, 'roles', { roles: { fields: ['id'] } })) ??\n    // If the query fails somehow, default to an empty array\n    [];\n\n  // Check if any of the user's roles are in lockedRoles\n  const isLocked = lockedRoles.some((lockedId: string) =>\n    // lockedRoles will be a string to avoid issues with frontend and bigints\n    roles.some((role: any) => lockedId === role.id.toString())\n  );\n\n  return isLocked;\n};\n\nexport default {\n  isSsoLocked,\n};\n"],"names":["isSsoLocked","user","strapi","ee","features","isEnabled","Error","adminStore","store","type","name","providers","get","key","lockedRoles","ssoLockedRoles","isEmpty","roles","db","query","load","fields","isLocked","some","lockedId","role","id","toString"],"mappings":";;AAEO,MAAMA,cAAc,OAAOC,IAAAA,GAAAA;IAChC,IAAI,CAACC,OAAOC,EAAE,CAACC,QAAQ,CAACC,SAAS,CAAC,KAAQ,CAAA,EAAA;QACxC,OAAO,KAAA;AACT;AAEA,IAAA,IAAI,CAACJ,IAAM,EAAA;AACT,QAAA,MAAM,IAAIK,KAAM,CAAA,qBAAA,CAAA;AAClB;;AAGA,IAAA,MAAMC,UAAa,GAAA,MAAML,MAAOM,CAAAA,KAAK,CAAC;QAAEC,IAAM,EAAA,MAAA;QAAQC,IAAM,EAAA;AAAQ,KAAA,CAAA;AACpE,IAAA,MAAM,EAAEC,SAAS,EAAE,GAAI,MAAMJ,UAAAA,CAAWK,GAAG,CAAC;QAAEC,GAAK,EAAA;AAAO,KAAA,CAAA;AAC1D,IAAA,MAAMC,WAAcH,GAAAA,SAAAA,CAAUI,cAAc,IAAI,EAAE;AAClD,IAAA,IAAIC,QAAQF,WAAc,CAAA,EAAA;QACxB,OAAO,KAAA;AACT;AAEA,IAAA,MAAMG;IAEJhB,IAAKgB,CAAAA,KAAK;IAET,MAAMf,MAAAA,CAAOgB,EAAE,CAACC,KAAK,CAAC,aAAeC,CAAAA,CAAAA,IAAI,CAACnB,IAAAA,EAAM,OAAS,EAAA;QAAEgB,KAAO,EAAA;YAAEI,MAAQ,EAAA;AAAC,gBAAA;AAAK;AAAC;AAAE,KAAA,CAAA;IAEtF,EAAE;;AAGJ,IAAA,MAAMC,WAAWR,WAAYS,CAAAA,IAAI,CAAC,CAACC;QAEjCP,KAAMM,CAAAA,IAAI,CAAC,CAACE,IAAAA,GAAcD,aAAaC,IAAKC,CAAAA,EAAE,CAACC,QAAQ,EAAA,CAAA,CAAA;IAGzD,OAAOL,QAAAA;AACT;;;;"}