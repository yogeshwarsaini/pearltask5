{"version":3,"file":"passport.js","sources":["../../../../../../ee/server/src/services/passport.ts"],"sourcesContent":["import { errors } from '@strapi/utils';\nimport createLocalStrategy from '../../../../server/src/services/passport/local-strategy';\nimport sso from './passport/sso';\nimport { isSsoLocked } from '../utils/sso-lock';\n\nconst { UnauthorizedError } = errors;\n\nconst localStrategyMiddleware = async ([error, user, message]: any, done: any) => {\n  // if we got a user, we need to check that it's not sso locked\n  if (user && !error && (await isSsoLocked(user))) {\n    return done(\n      new UnauthorizedError('Login not allowed, please contact your administrator', {\n        code: 'LOGIN_NOT_ALLOWED',\n      }),\n      user,\n      message\n    );\n  }\n\n  return done(error, user, message);\n};\n\nconst getPassportStrategies = () => {\n  if (!strapi.ee.features.isEnabled('sso')) {\n    return [createLocalStrategy(strapi)];\n  }\n\n  const localStrategy = createLocalStrategy(strapi, localStrategyMiddleware);\n\n  if (!strapi.isLoaded) {\n    sso.syncProviderRegistryWithConfig();\n  }\n\n  // TODO\n  // @ts-expect-error check map types\n  const providers = sso.providerRegistry.getAll();\n  const strategies = providers.map((provider: any) => provider.createStrategy(strapi));\n\n  return [localStrategy, ...strategies];\n};\n\nexport default {\n  getPassportStrategies,\n  ...sso,\n};\n"],"names":["UnauthorizedError","errors","localStrategyMiddleware","error","user","message","done","isSsoLocked","code","getPassportStrategies","strapi","ee","features","isEnabled","createLocalStrategy","localStrategy","isLoaded","sso","syncProviderRegistryWithConfig","providers","providerRegistry","getAll","strategies","map","provider","createStrategy"],"mappings":";;;;;;;AAKA,MAAM,EAAEA,iBAAiB,EAAE,GAAGC,YAAAA;AAE9B,MAAMC,0BAA0B,OAAO,CAACC,KAAOC,EAAAA,IAAAA,EAAMC,QAAa,EAAEC,IAAAA,GAAAA;;AAElE,IAAA,IAAIF,IAAQ,IAAA,CAACD,KAAU,IAAA,MAAMI,oBAAYH,IAAQ,CAAA,EAAA;QAC/C,OAAOE,IAAAA,CACL,IAAIN,iBAAAA,CAAkB,sDAAwD,EAAA;YAC5EQ,IAAM,EAAA;AACR,SAAA,CAAA,EACAJ,IACAC,EAAAA,OAAAA,CAAAA;AAEJ;IAEA,OAAOC,IAAAA,CAAKH,OAAOC,IAAMC,EAAAA,OAAAA,CAAAA;AAC3B,CAAA;AAEA,MAAMI,qBAAwB,GAAA,IAAA;IAC5B,IAAI,CAACC,OAAOC,EAAE,CAACC,QAAQ,CAACC,SAAS,CAAC,KAAQ,CAAA,EAAA;QACxC,OAAO;YAACC,aAAoBJ,CAAAA,MAAAA;AAAQ,SAAA;AACtC;IAEA,MAAMK,eAAAA,GAAgBD,cAAoBJ,MAAQR,EAAAA,uBAAAA,CAAAA;IAElD,IAAI,CAACQ,MAAOM,CAAAA,QAAQ,EAAE;AACpBC,QAAAA,WAAAA,CAAIC,8BAA8B,EAAA;AACpC;;;AAIA,IAAA,MAAMC,SAAYF,GAAAA,WAAAA,CAAIG,gBAAgB,CAACC,MAAM,EAAA;IAC7C,MAAMC,UAAAA,GAAaH,UAAUI,GAAG,CAAC,CAACC,QAAkBA,GAAAA,QAAAA,CAASC,cAAc,CAACf,MAAAA,CAAAA,CAAAA;IAE5E,OAAO;AAACK,QAAAA,eAAAA;AAAkBO,QAAAA,GAAAA;AAAW,KAAA;AACvC,CAAA;AAEA,eAAe;AACbb,IAAAA,qBAAAA;AACA,IAAA,GAAGQ;AACL,CAAE;;;;"}