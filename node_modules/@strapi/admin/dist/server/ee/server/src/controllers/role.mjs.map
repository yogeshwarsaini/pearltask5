{"version":3,"file":"role.mjs","sources":["../../../../../../ee/server/src/controllers/role.ts"],"sourcesContent":["import type { Context } from 'koa';\n\nimport {\n  validateRoleCreateInput,\n  validateRoleDeleteInput,\n  validateRolesDeleteInput,\n} from '../validation/role';\nimport { getService } from '../utils';\n\nexport default {\n  /**\n   * Create a new role\n   * @param {KoaContext} ctx - koa context\n   */\n  async create(ctx: Context) {\n    await validateRoleCreateInput(ctx.request.body);\n\n    const roleService = getService('role');\n\n    const role = await roleService.create(ctx.request.body);\n    const sanitizedRole = roleService.sanitizeRole(role);\n\n    ctx.created({ data: sanitizedRole });\n  },\n\n  /**\n   * Delete a role\n   * @param {KoaContext} ctx - koa context\n   */\n  async deleteOne(ctx: Context) {\n    const { id } = ctx.params;\n\n    await validateRoleDeleteInput(id);\n\n    const roleService = getService('role');\n\n    const roles = await roleService.deleteByIds([id]);\n\n    const sanitizedRole = roles.map((role: unknown) => roleService.sanitizeRole(role))[0] || null;\n\n    return ctx.deleted({\n      data: sanitizedRole,\n    });\n  },\n\n  /**\n   * delete several roles\n   * @param {KoaContext} ctx - koa context\n   */\n  async deleteMany(ctx: Context) {\n    const { body } = ctx.request;\n\n    await validateRolesDeleteInput(body);\n\n    const roleService = getService('role');\n\n    const roles = await roleService.deleteByIds(body.ids);\n    const sanitizedRoles = roles.map(roleService.sanitizeRole);\n\n    return ctx.deleted({\n      data: sanitizedRoles,\n    });\n  },\n};\n"],"names":["create","ctx","validateRoleCreateInput","request","body","roleService","getService","role","sanitizedRole","sanitizeRole","created","data","deleteOne","id","params","validateRoleDeleteInput","roles","deleteByIds","map","deleted","deleteMany","validateRolesDeleteInput","ids","sanitizedRoles"],"mappings":";;;AASA,WAAe;AACb;;;MAIA,MAAMA,QAAOC,GAAY,EAAA;AACvB,QAAA,MAAMC,uBAAwBD,CAAAA,GAAAA,CAAIE,OAAO,CAACC,IAAI,CAAA;AAE9C,QAAA,MAAMC,cAAcC,UAAW,CAAA,MAAA,CAAA;QAE/B,MAAMC,IAAAA,GAAO,MAAMF,WAAYL,CAAAA,MAAM,CAACC,GAAIE,CAAAA,OAAO,CAACC,IAAI,CAAA;QACtD,MAAMI,aAAAA,GAAgBH,WAAYI,CAAAA,YAAY,CAACF,IAAAA,CAAAA;AAE/CN,QAAAA,GAAAA,CAAIS,OAAO,CAAC;YAAEC,IAAMH,EAAAA;AAAc,SAAA,CAAA;AACpC,KAAA;AAEA;;;MAIA,MAAMI,WAAUX,GAAY,EAAA;AAC1B,QAAA,MAAM,EAAEY,EAAE,EAAE,GAAGZ,IAAIa,MAAM;AAEzB,QAAA,MAAMC,uBAAwBF,CAAAA,EAAAA,CAAAA;AAE9B,QAAA,MAAMR,cAAcC,UAAW,CAAA,MAAA,CAAA;AAE/B,QAAA,MAAMU,KAAQ,GAAA,MAAMX,WAAYY,CAAAA,WAAW,CAAC;AAACJ,YAAAA;AAAG,SAAA,CAAA;AAEhD,QAAA,MAAML,aAAgBQ,GAAAA,KAAAA,CAAME,GAAG,CAAC,CAACX,IAAAA,GAAkBF,WAAYI,CAAAA,YAAY,CAACF,IAAAA,CAAAA,CAAM,CAAC,CAAA,CAAE,IAAI,IAAA;QAEzF,OAAON,GAAAA,CAAIkB,OAAO,CAAC;YACjBR,IAAMH,EAAAA;AACR,SAAA,CAAA;AACF,KAAA;AAEA;;;MAIA,MAAMY,YAAWnB,GAAY,EAAA;AAC3B,QAAA,MAAM,EAAEG,IAAI,EAAE,GAAGH,IAAIE,OAAO;AAE5B,QAAA,MAAMkB,wBAAyBjB,CAAAA,IAAAA,CAAAA;AAE/B,QAAA,MAAMC,cAAcC,UAAW,CAAA,MAAA,CAAA;AAE/B,QAAA,MAAMU,QAAQ,MAAMX,WAAAA,CAAYY,WAAW,CAACb,KAAKkB,GAAG,CAAA;AACpD,QAAA,MAAMC,cAAiBP,GAAAA,KAAAA,CAAME,GAAG,CAACb,YAAYI,YAAY,CAAA;QAEzD,OAAOR,GAAAA,CAAIkB,OAAO,CAAC;YACjBR,IAAMY,EAAAA;AACR,SAAA,CAAA;AACF;AACF,CAAE;;;;"}