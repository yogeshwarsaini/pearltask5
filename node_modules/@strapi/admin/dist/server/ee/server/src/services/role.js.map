{"version":3,"file":"role.js","sources":["../../../../../../ee/server/src/services/role.ts"],"sourcesContent":["import { toString } from 'lodash/fp';\nimport { errors } from '@strapi/utils';\n\nconst { ApplicationError } = errors;\n\nconst ssoCheckRolesIdForDeletion = async (ids: any) => {\n  const adminStore = await strapi.store({ type: 'core', name: 'admin' });\n\n  const {\n    providers: { defaultRole },\n  } = (await adminStore.get({ key: 'auth' })) as any;\n\n  for (const roleId of ids) {\n    if (defaultRole && toString(defaultRole) === toString(roleId)) {\n      throw new ApplicationError(\n        'This role is used as the default SSO role. Make sure to change this configuration before deleting the role'\n      );\n    }\n  }\n};\n\nexport default {\n  ssoCheckRolesIdForDeletion,\n};\n"],"names":["ApplicationError","errors","ssoCheckRolesIdForDeletion","ids","adminStore","strapi","store","type","name","providers","defaultRole","get","key","roleId","toString"],"mappings":";;;;;AAGA,MAAM,EAAEA,gBAAgB,EAAE,GAAGC,YAAAA;AAE7B,MAAMC,6BAA6B,OAAOC,GAAAA,GAAAA;AACxC,IAAA,MAAMC,UAAa,GAAA,MAAMC,MAAOC,CAAAA,KAAK,CAAC;QAAEC,IAAM,EAAA,MAAA;QAAQC,IAAM,EAAA;AAAQ,KAAA,CAAA;IAEpE,MAAM,EACJC,SAAW,EAAA,EAAEC,WAAW,EAAE,EAC3B,GAAI,MAAMN,UAAWO,CAAAA,GAAG,CAAC;QAAEC,GAAK,EAAA;AAAO,KAAA,CAAA;IAExC,KAAK,MAAMC,UAAUV,GAAK,CAAA;AACxB,QAAA,IAAIO,WAAeI,IAAAA,WAAAA,CAASJ,WAAiBI,CAAAA,KAAAA,WAAAA,CAASD,MAAS,CAAA,EAAA;AAC7D,YAAA,MAAM,IAAIb,gBACR,CAAA,4GAAA,CAAA;AAEJ;AACF;AACF,CAAA;AAEA,WAAe;AACbE,IAAAA;AACF,CAAE;;;;"}