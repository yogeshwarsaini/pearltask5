{"version":3,"file":"provider-registry.mjs","sources":["../../../../../../../ee/server/src/services/passport/provider-registry.ts"],"sourcesContent":["import '@strapi/types';\n\nexport default () => {\n  const registry = new Map();\n\n  Object.assign(registry, {\n    register(provider: unknown) {\n      if (strapi.isLoaded) {\n        throw new Error(`You can't register new provider after the bootstrap`);\n      }\n\n      // TODO\n      // @ts-expect-error check map types\n      this.set(provider.uid, provider);\n    },\n\n    registerMany(providers: unknown[]) {\n      providers.forEach((provider) => {\n        this.register(provider);\n      });\n    },\n\n    getAll(): unknown[] {\n      // TODO\n      // @ts-expect-error check map types\n      return Array.from(this.values());\n    },\n  });\n\n  return registry;\n};\n"],"names":["registry","Map","Object","assign","register","provider","strapi","isLoaded","Error","set","uid","registerMany","providers","forEach","getAll","Array","from","values"],"mappings":";;AAEA,6BAAe,CAAA,IAAA;AACb,IAAA,MAAMA,WAAW,IAAIC,GAAAA,EAAAA;IAErBC,MAAOC,CAAAA,MAAM,CAACH,QAAU,EAAA;AACtBI,QAAAA,QAAAA,CAAAA,CAASC,QAAiB,EAAA;YACxB,IAAIC,MAAAA,CAAOC,QAAQ,EAAE;AACnB,gBAAA,MAAM,IAAIC,KAAAA,CAAM,CAAC,mDAAmD,CAAC,CAAA;AACvE;;;AAIA,YAAA,IAAI,CAACC,GAAG,CAACJ,QAAAA,CAASK,GAAG,EAAEL,QAAAA,CAAAA;AACzB,SAAA;AAEAM,QAAAA,YAAAA,CAAAA,CAAaC,SAAoB,EAAA;YAC/BA,SAAUC,CAAAA,OAAO,CAAC,CAACR,QAAAA,GAAAA;gBACjB,IAAI,CAACD,QAAQ,CAACC,QAAAA,CAAAA;AAChB,aAAA,CAAA;AACF,SAAA;AAEAS,QAAAA,MAAAA,CAAAA,GAAAA;;;AAGE,YAAA,OAAOC,KAAMC,CAAAA,IAAI,CAAC,IAAI,CAACC,MAAM,EAAA,CAAA;AAC/B;AACF,KAAA,CAAA;IAEA,OAAOjB,QAAAA;AACT,CAAA;;;;"}