{"version":3,"file":"sso.mjs","sources":["../../../../../../ee/server/src/routes/sso.ts"],"sourcesContent":["import { enableFeatureMiddleware } from './utils';\n\nexport default {\n  type: 'admin',\n  routes: [\n    {\n      method: 'GET',\n      path: '/providers',\n      handler: 'authentication.getProviders',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        auth: false,\n      },\n    },\n    {\n      method: 'GET',\n      path: '/connect/:provider',\n      handler: 'authentication.providerLogin',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        auth: false,\n      },\n    },\n    {\n      method: 'POST',\n      path: '/connect/:provider',\n      handler: 'authentication.providerLogin',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        auth: false,\n      },\n    },\n    {\n      method: 'GET',\n      path: '/providers/options',\n      handler: 'authentication.getProviderLoginOptions',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        policies: [\n          'admin::isAuthenticatedAdmin',\n          { name: 'admin::hasPermissions', config: { actions: ['admin::provider-login.read'] } },\n        ],\n      },\n    },\n    {\n      method: 'PUT',\n      path: '/providers/options',\n      handler: 'authentication.updateProviderLoginOptions',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        policies: [\n          'admin::isAuthenticatedAdmin',\n          { name: 'admin::hasPermissions', config: { actions: ['admin::provider-login.update'] } },\n        ],\n      },\n    },\n    {\n      method: 'GET',\n      path: '/providers/isSSOLocked',\n      handler: 'user.isSSOLocked',\n      config: {\n        middlewares: [enableFeatureMiddleware('sso')],\n        policies: ['admin::isAuthenticatedAdmin'],\n      },\n    },\n  ],\n};\n"],"names":["type","routes","method","path","handler","config","middlewares","enableFeatureMiddleware","auth","policies","name","actions"],"mappings":";;AAEA,UAAe;IACbA,IAAM,EAAA,OAAA;IACNC,MAAQ,EAAA;AACN,QAAA;YACEC,MAAQ,EAAA,KAAA;YACRC,IAAM,EAAA,YAAA;YACNC,OAAS,EAAA,6BAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CC,IAAM,EAAA;AACR;AACF,SAAA;AACA,QAAA;YACEN,MAAQ,EAAA,KAAA;YACRC,IAAM,EAAA,oBAAA;YACNC,OAAS,EAAA,8BAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CC,IAAM,EAAA;AACR;AACF,SAAA;AACA,QAAA;YACEN,MAAQ,EAAA,MAAA;YACRC,IAAM,EAAA,oBAAA;YACNC,OAAS,EAAA,8BAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CC,IAAM,EAAA;AACR;AACF,SAAA;AACA,QAAA;YACEN,MAAQ,EAAA,KAAA;YACRC,IAAM,EAAA,oBAAA;YACNC,OAAS,EAAA,wCAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CE,QAAU,EAAA;AACR,oBAAA,6BAAA;AACA,oBAAA;wBAAEC,IAAM,EAAA,uBAAA;wBAAyBL,MAAQ,EAAA;4BAAEM,OAAS,EAAA;AAAC,gCAAA;AAA6B;AAAC;AAAE;AACtF;AACH;AACF,SAAA;AACA,QAAA;YACET,MAAQ,EAAA,KAAA;YACRC,IAAM,EAAA,oBAAA;YACNC,OAAS,EAAA,2CAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CE,QAAU,EAAA;AACR,oBAAA,6BAAA;AACA,oBAAA;wBAAEC,IAAM,EAAA,uBAAA;wBAAyBL,MAAQ,EAAA;4BAAEM,OAAS,EAAA;AAAC,gCAAA;AAA+B;AAAC;AAAE;AACxF;AACH;AACF,SAAA;AACA,QAAA;YACET,MAAQ,EAAA,KAAA;YACRC,IAAM,EAAA,wBAAA;YACNC,OAAS,EAAA,kBAAA;YACTC,MAAQ,EAAA;gBACNC,WAAa,EAAA;oBAACC,uBAAwB,CAAA,KAAA;AAAO,iBAAA;gBAC7CE,QAAU,EAAA;AAAC,oBAAA;AAA8B;AAC3C;AACF;AACD;AACH,CAAE;;;;"}