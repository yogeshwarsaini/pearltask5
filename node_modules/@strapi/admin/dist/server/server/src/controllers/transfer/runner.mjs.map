{"version":3,"file":"runner.mjs","sources":["../../../../../../server/src/controllers/transfer/runner.ts"],"sourcesContent":["import { Context } from 'koa';\n\nimport { strapi as dataTransferStrapi } from '@strapi/data-transfer';\nimport { errors } from '@strapi/utils';\nimport dataTransferAuthStrategy from '../../strategies/data-transfer';\n\nconst {\n  remote: {\n    handlers: { createPushController, createPullController },\n  },\n} = dataTransferStrapi;\n\nconst { UnauthorizedError } = errors;\n\n/**\n * @param ctx the koa context\n * @param scope the scope to verify\n */\nconst verify = async (ctx: Context, scope?: dataTransferStrapi.remote.constants.TransferMethod) => {\n  const { auth } = ctx.state;\n\n  if (!auth) {\n    throw new UnauthorizedError();\n  }\n\n  await dataTransferAuthStrategy.verify(auth, { scope });\n};\n\nexport const push = createPushController({ verify });\nexport const pull = createPullController({ verify });\n\nexport default {\n  push,\n  pull,\n};\n"],"names":["remote","handlers","createPushController","createPullController","dataTransferStrapi","UnauthorizedError","errors","verify","ctx","scope","auth","state","dataTransferAuthStrategy","push","pull"],"mappings":";;;;AAMA,MAAM,EACJA,MAAQ,EAAA,EACNC,QAAU,EAAA,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAE,EACzD,EACF,GAAGC,MAAAA;AAEJ,MAAM,EAAEC,iBAAiB,EAAE,GAAGC,MAAAA;AAE9B;;;IAIA,MAAMC,MAAS,GAAA,OAAOC,GAAcC,EAAAA,KAAAA,GAAAA;AAClC,IAAA,MAAM,EAAEC,IAAI,EAAE,GAAGF,IAAIG,KAAK;AAE1B,IAAA,IAAI,CAACD,IAAM,EAAA;AACT,QAAA,MAAM,IAAIL,iBAAAA,EAAAA;AACZ;IAEA,MAAMO,wBAAAA,CAAyBL,MAAM,CAACG,IAAM,EAAA;AAAED,QAAAA;AAAM,KAAA,CAAA;AACtD,CAAA;AAEO,MAAMI,OAAOX,oBAAqB,CAAA;AAAEK,IAAAA;AAAO,CAAG;AAC9C,MAAMO,OAAOX,oBAAqB,CAAA;AAAEI,IAAAA;AAAO,CAAG;AAErD,aAAe;AACbM,IAAAA,IAAAA;AACAC,IAAAA;AACF,CAAE;;;;"}