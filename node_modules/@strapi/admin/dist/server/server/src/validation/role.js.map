{"version":3,"file":"role.js","sources":["../../../../../server/src/validation/role.ts"],"sourcesContent":["import { yup, validateYupSchema } from '@strapi/utils';\n\nconst roleCreateSchema = yup\n  .object()\n  .shape({\n    name: yup.string().min(1).required(),\n    description: yup.string().nullable(),\n  })\n  .noUnknown();\n\nconst rolesDeleteSchema = yup\n  .object()\n  .shape({\n    ids: yup\n      .array()\n      .of(yup.strapiID())\n      .min(1)\n      .required()\n      .test('roles-deletion-checks', 'Roles deletion checks have failed', async function (ids) {\n        try {\n          await strapi.service('admin::role').checkRolesIdForDeletion(ids);\n        } catch (e) {\n          // @ts-expect-error yup types\n          return this.createError({ path: 'ids', message: e.message });\n        }\n\n        return true;\n      }),\n  })\n  .noUnknown();\n\nconst roleDeleteSchema = yup\n  .strapiID()\n  .required()\n  .test('no-admin-single-delete', 'Role deletion checks have failed', async function (id) {\n    try {\n      await strapi.service('admin::role').checkRolesIdForDeletion([id]);\n    } catch (e) {\n      // @ts-expect-error yup types\n      return this.createError({ path: 'id', message: e.message });\n    }\n\n    return true;\n  });\n\nconst roleUpdateSchema = yup\n  .object()\n  .shape({\n    name: yup.string().min(1),\n    description: yup.string().nullable(),\n  })\n  .noUnknown();\n\nexport const validateRoleCreateInput = validateYupSchema(roleCreateSchema);\nexport const validateRoleUpdateInput = validateYupSchema(roleUpdateSchema);\nexport const validateRolesDeleteInput = validateYupSchema(rolesDeleteSchema);\nexport const validateRoleDeleteInput = validateYupSchema(roleDeleteSchema);\n\nexport default {\n  validateRoleUpdateInput,\n  validateRoleCreateInput,\n  validateRolesDeleteInput,\n  validateRoleDeleteInput,\n};\n"],"names":["roleCreateSchema","yup","object","shape","name","string","min","required","description","nullable","noUnknown","rolesDeleteSchema","ids","array","of","strapiID","test","strapi","service","checkRolesIdForDeletion","e","createError","path","message","roleDeleteSchema","id","roleUpdateSchema","validateRoleCreateInput","validateYupSchema","validateRoleUpdateInput","validateRolesDeleteInput","validateRoleDeleteInput"],"mappings":";;;;AAEA,MAAMA,gBAAmBC,GAAAA,SAAAA,CACtBC,MAAM,EAAA,CACNC,KAAK,CAAC;AACLC,IAAAA,IAAAA,EAAMH,UAAII,MAAM,EAAA,CAAGC,GAAG,CAAC,GAAGC,QAAQ,EAAA;IAClCC,WAAaP,EAAAA,SAAAA,CAAII,MAAM,EAAA,CAAGI,QAAQ;AACpC,CAAA,CAAA,CACCC,SAAS,EAAA;AAEZ,MAAMC,iBAAoBV,GAAAA,SAAAA,CACvBC,MAAM,EAAA,CACNC,KAAK,CAAC;AACLS,IAAAA,GAAAA,EAAKX,UACFY,KAAK,EAAA,CACLC,EAAE,CAACb,SAAAA,CAAIc,QAAQ,EACfT,CAAAA,CAAAA,GAAG,CAAC,CAAA,CAAA,CACJC,QAAQ,EACRS,CAAAA,IAAI,CAAC,uBAAyB,EAAA,mCAAA,EAAqC,eAAgBJ,GAAG,EAAA;QACrF,IAAI;AACF,YAAA,MAAMK,MAAOC,CAAAA,OAAO,CAAC,aAAA,CAAA,CAAeC,uBAAuB,CAACP,GAAAA,CAAAA;AAC9D,SAAA,CAAE,OAAOQ,CAAG,EAAA;;YAEV,OAAO,IAAI,CAACC,WAAW,CAAC;gBAAEC,IAAM,EAAA,KAAA;AAAOC,gBAAAA,OAAAA,EAASH,EAAEG;AAAQ,aAAA,CAAA;AAC5D;QAEA,OAAO,IAAA;AACT,KAAA;AACJ,CAAA,CAAA,CACCb,SAAS,EAAA;AAEZ,MAAMc,gBAAAA,GAAmBvB,SACtBc,CAAAA,QAAQ,EACRR,CAAAA,QAAQ,EACRS,CAAAA,IAAI,CAAC,wBAAA,EAA0B,kCAAoC,EAAA,eAAgBS,EAAE,EAAA;IACpF,IAAI;AACF,QAAA,MAAMR,MAAOC,CAAAA,OAAO,CAAC,aAAA,CAAA,CAAeC,uBAAuB,CAAC;AAACM,YAAAA;AAAG,SAAA,CAAA;AAClE,KAAA,CAAE,OAAOL,CAAG,EAAA;;QAEV,OAAO,IAAI,CAACC,WAAW,CAAC;YAAEC,IAAM,EAAA,IAAA;AAAMC,YAAAA,OAAAA,EAASH,EAAEG;AAAQ,SAAA,CAAA;AAC3D;IAEA,OAAO,IAAA;AACT,CAAA,CAAA;AAEF,MAAMG,gBAAmBzB,GAAAA,SAAAA,CACtBC,MAAM,EAAA,CACNC,KAAK,CAAC;AACLC,IAAAA,IAAAA,EAAMH,SAAII,CAAAA,MAAM,EAAGC,CAAAA,GAAG,CAAC,CAAA,CAAA;IACvBE,WAAaP,EAAAA,SAAAA,CAAII,MAAM,EAAA,CAAGI,QAAQ;AACpC,CAAA,CAAA,CACCC,SAAS,EAAA;AAEL,MAAMiB,uBAA0BC,GAAAA,uBAAAA,CAAkB5B,gBAAkB;AACpE,MAAM6B,uBAA0BD,GAAAA,uBAAAA,CAAkBF,gBAAkB;AACpE,MAAMI,wBAA2BF,GAAAA,uBAAAA,CAAkBjB,iBAAmB;AACtE,MAAMoB,uBAA0BH,GAAAA,uBAAAA,CAAkBJ,gBAAkB;;;;;;;"}