{"version":3,"file":"action-provider.js","sources":["../../../../../server/src/validation/action-provider.ts"],"sourcesContent":["import { yup, validateYupSchemaSync } from '@strapi/utils';\nimport validators from './common-validators';\n\nconst registerProviderActionSchema = yup\n  .array()\n  .required()\n  .of(\n    yup\n      .object()\n      .shape({\n        uid: yup\n          .string()\n          .matches(\n            /^[a-z]([a-z|.|-]+)[a-z]$/,\n            (v) => `${v.path}: The uid can only contain lowercase letters, dots and hyphens.`\n          )\n          .required(),\n        section: yup.string().oneOf(['contentTypes', 'plugins', 'settings', 'internal']).required(),\n        pluginName: yup.mixed().when('section', {\n          is: 'plugins',\n          then: validators.isAPluginName.required(),\n          otherwise: validators.isAPluginName,\n        }),\n        subjects: yup.mixed().when('section', {\n          is: 'contentTypes',\n          then: yup.array().of(yup.string()).required(),\n          otherwise: yup\n            .mixed()\n            .oneOf([undefined], 'subjects should only be defined for the \"contentTypes\" section'),\n        }),\n        displayName: yup.string().required(),\n        category: yup.mixed().when('section', {\n          is: 'settings',\n          then: yup.string().required(),\n          otherwise: yup\n            .mixed()\n            .test(\n              'settingsCategory',\n              'category should only be defined for the \"settings\" section',\n              (cat) => cat === undefined\n            ),\n        }),\n        subCategory: yup.mixed().when('section', {\n          is: (section: any) => ['settings', 'plugins'].includes(section),\n          then: yup.string(),\n          otherwise: yup\n            .mixed()\n            .test(\n              'settingsSubCategory',\n              'subCategory should only be defined for \"plugins\" and \"settings\" sections',\n              (subCat) => {\n                return subCat === undefined;\n              }\n            ),\n        }),\n        options: yup.object({\n          applyToProperties: yup.array().of(yup.string()),\n        }),\n        aliases: yup\n          .array(\n            yup.object({\n              actionId: yup.string(),\n              subjects: yup.array(yup.string()).nullable(),\n            })\n          )\n          .nullable(),\n      })\n      .noUnknown()\n  );\n\nexport const validateRegisterProviderAction = validateYupSchemaSync(registerProviderActionSchema);\n\nexport default {\n  validateRegisterProviderAction,\n};\n"],"names":["registerProviderActionSchema","yup","array","required","of","object","shape","uid","string","matches","v","path","section","oneOf","pluginName","mixed","when","is","then","validators","isAPluginName","otherwise","subjects","undefined","displayName","category","test","cat","subCategory","includes","subCat","options","applyToProperties","aliases","actionId","nullable","noUnknown","validateRegisterProviderAction","validateYupSchemaSync"],"mappings":"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"}