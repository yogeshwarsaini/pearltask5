{"version":3,"file":"data-transfer.js","sources":["../../../../../server/src/middlewares/data-transfer.ts"],"sourcesContent":["import type { Context, Next } from 'koa';\n\nimport { getService } from '../utils';\n\nexport default () => async (ctx: Context, next: Next) => {\n  const transferUtils = getService('transfer').utils;\n\n  const { hasValidTokenSalt, isRemoteTransferEnabled } = transferUtils;\n\n  // verify that data transfer is enabled\n  if (isRemoteTransferEnabled()) {\n    return next();\n  }\n\n  // if it has been manually disabled, return a not found\n  if (strapi.config.get('server.transfer.remote.enabled') === false) {\n    return ctx.notFound();\n  }\n\n  // if it's enabled but doesn't have a valid salt, throw a not implemented\n  if (!hasValidTokenSalt()) {\n    return ctx.notImplemented(\n      'The server configuration for data transfer is invalid. Please contact your server administrator.',\n      {\n        code: 'INVALID_TOKEN_SALT',\n      }\n    );\n  }\n\n  // This should never happen as long as we're handling individual scenarios above\n  throw new Error('Unexpected error while trying to access a data transfer route');\n};\n"],"names":["ctx","next","transferUtils","getService","utils","hasValidTokenSalt","isRemoteTransferEnabled","strapi","config","get","notFound","notImplemented","code","Error"],"mappings":";;;;AAIA,mBAAe,CAAA,IAAM,OAAOA,GAAcC,EAAAA,IAAAA,GAAAA;QACxC,MAAMC,aAAAA,GAAgBC,gBAAW,CAAA,UAAA,CAAA,CAAYC,KAAK;AAElD,QAAA,MAAM,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAE,GAAGJ,aAAAA;;AAGvD,QAAA,IAAII,uBAA2B,EAAA,EAAA;YAC7B,OAAOL,IAAAA,EAAAA;AACT;;AAGA,QAAA,IAAIM,OAAOC,MAAM,CAACC,GAAG,CAAC,sCAAsC,KAAO,EAAA;AACjE,YAAA,OAAOT,IAAIU,QAAQ,EAAA;AACrB;;AAGA,QAAA,IAAI,CAACL,iBAAqB,EAAA,EAAA;YACxB,OAAOL,GAAAA,CAAIW,cAAc,CACvB,kGACA,EAAA;gBACEC,IAAM,EAAA;AACR,aAAA,CAAA;AAEJ;;AAGA,QAAA,MAAM,IAAIC,KAAM,CAAA,+DAAA,CAAA;AAClB,KAAA;;;;"}