{"version":3,"file":"admin.mjs","sources":["../../../../../server/src/strategies/admin.ts"],"sourcesContent":["import type { Context } from 'koa';\nimport { getService } from '../utils';\n\n/** @type {import('.').AuthenticateFunction} */\nexport const authenticate = async (ctx: Context) => {\n  const { authorization } = ctx.request.header;\n\n  if (!authorization) {\n    return { authenticated: false };\n  }\n\n  const parts = authorization.split(/\\s+/);\n\n  if (parts[0].toLowerCase() !== 'bearer' || parts.length !== 2) {\n    return { authenticated: false };\n  }\n\n  const token = parts[1];\n  const { payload, isValid } = getService('token').decodeJwtToken(token);\n\n  if (!isValid) {\n    return { authenticated: false };\n  }\n\n  const user = await strapi.db\n    .query('admin::user')\n    .findOne({ where: { id: payload.id }, populate: ['roles'] });\n\n  if (!user || !(user.isActive === true)) {\n    return { authenticated: false };\n  }\n\n  const userAbility = await getService('permission').engine.generateUserAbility(user);\n\n  // TODO: use the ability from ctx.state.auth instead of\n  // ctx.state.userAbility, and remove the assign below\n  ctx.state.userAbility = userAbility;\n  ctx.state.user = user;\n\n  return {\n    authenticated: true,\n    credentials: user,\n    ability: userAbility,\n  };\n};\n\nexport const name = 'admin';\n\n/** @type {import('.').AuthStrategy} */\nexport default {\n  name,\n  authenticate,\n};\n"],"names":["authenticate","ctx","authorization","request","header","authenticated","parts","split","toLowerCase","length","token","payload","isValid","getService","decodeJwtToken","user","strapi","db","query","findOne","where","id","populate","isActive","userAbility","engine","generateUserAbility","state","credentials","ability","name"],"mappings":";;AAGA,gDACaA,MAAAA,YAAAA,GAAe,OAAOC,GAAAA,GAAAA;AACjC,IAAA,MAAM,EAAEC,aAAa,EAAE,GAAGD,GAAIE,CAAAA,OAAO,CAACC,MAAM;AAE5C,IAAA,IAAI,CAACF,aAAe,EAAA;QAClB,OAAO;YAAEG,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMC,KAAAA,GAAQJ,aAAcK,CAAAA,KAAK,CAAC,KAAA,CAAA;IAElC,IAAID,KAAK,CAAC,CAAA,CAAE,CAACE,WAAW,OAAO,QAAYF,IAAAA,KAAAA,CAAMG,MAAM,KAAK,CAAG,EAAA;QAC7D,OAAO;YAAEJ,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMK,KAAAA,GAAQJ,KAAK,CAAC,CAAE,CAAA;IACtB,MAAM,EAAEK,OAAO,EAAEC,OAAO,EAAE,GAAGC,UAAAA,CAAW,OAASC,CAAAA,CAAAA,cAAc,CAACJ,KAAAA,CAAAA;AAEhE,IAAA,IAAI,CAACE,OAAS,EAAA;QACZ,OAAO;YAAEP,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMU,IAAAA,GAAO,MAAMC,MAAOC,CAAAA,EAAE,CACzBC,KAAK,CAAC,aACNC,CAAAA,CAAAA,OAAO,CAAC;QAAEC,KAAO,EAAA;AAAEC,YAAAA,EAAAA,EAAIV,QAAQU;AAAG,SAAA;QAAGC,QAAU,EAAA;AAAC,YAAA;AAAQ;AAAC,KAAA,CAAA;IAE5D,IAAI,CAACP,QAAQ,EAAEA,KAAKQ,QAAQ,KAAK,IAAG,CAAI,EAAA;QACtC,OAAO;YAAElB,aAAe,EAAA;AAAM,SAAA;AAChC;AAEA,IAAA,MAAMmB,cAAc,MAAMX,UAAAA,CAAW,cAAcY,MAAM,CAACC,mBAAmB,CAACX,IAAAA,CAAAA;;;IAI9Ed,GAAI0B,CAAAA,KAAK,CAACH,WAAW,GAAGA,WAAAA;IACxBvB,GAAI0B,CAAAA,KAAK,CAACZ,IAAI,GAAGA,IAAAA;IAEjB,OAAO;QACLV,aAAe,EAAA,IAAA;QACfuB,WAAab,EAAAA,IAAAA;QACbc,OAASL,EAAAA;AACX,KAAA;AACF;AAEO,MAAMM,OAAO;AAEpB,wCACA,wBAAe;AACbA,IAAAA,IAAAA;AACA9B,IAAAA;AACF,CAAE;;;;"}