{"version":3,"file":"local-strategy.mjs","sources":["../../../../../../server/src/services/passport/local-strategy.ts"],"sourcesContent":["import { toLower } from 'lodash/fp';\nimport { Strategy as LocalStrategy } from 'passport-local';\nimport type { Core } from '@strapi/types';\nimport { getService } from '../../utils';\n\nconst createLocalStrategy = (strapi: Core.Strapi, middleware?: any) => {\n  return new LocalStrategy(\n    {\n      usernameField: 'email',\n      passwordField: 'password',\n      session: false,\n    },\n    (email: string, password: string, done: any) => {\n      return getService('auth')\n        .checkCredentials({ email: toLower(email), password })\n        .then(async ([error, user, message]) => {\n          if (middleware) {\n            return middleware([error, user, message], done);\n          }\n\n          return done(error, user, message);\n        })\n        .catch((error) => done(error));\n    }\n  );\n};\n\nexport default createLocalStrategy;\n"],"names":["createLocalStrategy","strapi","middleware","LocalStrategy","usernameField","passwordField","session","email","password","done","getService","checkCredentials","toLower","then","error","user","message","catch"],"mappings":";;;;AAKMA,MAAAA,mBAAAA,GAAsB,CAACC,MAAqBC,EAAAA,UAAAA,GAAAA;AAChD,IAAA,OAAO,IAAIC,QACT,CAAA;QACEC,aAAe,EAAA,OAAA;QACfC,aAAe,EAAA,UAAA;QACfC,OAAS,EAAA;KAEX,EAAA,CAACC,OAAeC,QAAkBC,EAAAA,IAAAA,GAAAA;QAChC,OAAOC,UAAAA,CAAW,MACfC,CAAAA,CAAAA,gBAAgB,CAAC;AAAEJ,YAAAA,KAAAA,EAAOK,OAAQL,CAAAA,KAAAA,CAAAA;AAAQC,YAAAA;AAAS,SAAA,CAAA,CACnDK,IAAI,CAAC,OAAO,CAACC,KAAAA,EAAOC,MAAMC,OAAQ,CAAA,GAAA;AACjC,YAAA,IAAId,UAAY,EAAA;AACd,gBAAA,OAAOA,UAAW,CAAA;AAACY,oBAAAA,KAAAA;AAAOC,oBAAAA,IAAAA;AAAMC,oBAAAA;iBAAQ,EAAEP,IAAAA,CAAAA;AAC5C;YAEA,OAAOA,IAAAA,CAAKK,OAAOC,IAAMC,EAAAA,OAAAA,CAAAA;AAC3B,SAAA,CAAA,CACCC,KAAK,CAAC,CAACH,KAAAA,GAAUL,IAAKK,CAAAA,KAAAA,CAAAA,CAAAA;AAC3B,KAAA,CAAA;AAEJ;;;;"}