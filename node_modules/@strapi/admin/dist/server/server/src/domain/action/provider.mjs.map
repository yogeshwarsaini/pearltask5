{"version":3,"file":"provider.mjs","sources":["../../../../../../server/src/domain/action/provider.ts"],"sourcesContent":["import { providerFactory, hooks, errors } from '@strapi/utils';\nimport { validateRegisterProviderAction } from '../../validation/action-provider';\n\nimport domain from './index';\nimport type { Action, CreateActionPayload } from './index';\nimport type { Permission } from '../../../../shared/contracts/shared';\n\ntype Options = Parameters<typeof providerFactory>['0'];\n\nconst { ApplicationError } = errors;\n\n/**\n * Creates a new instance of an action provider\n */\nconst createActionProvider = (options?: Options) => {\n  const provider = providerFactory<Action>(options);\n  const actionHooks = {\n    appliesPropertyToSubject: hooks.createAsyncParallelHook(),\n  };\n\n  return {\n    ...provider,\n\n    hooks: {\n      ...provider.hooks,\n      ...actionHooks,\n    },\n\n    async register(actionAttributes: CreateActionPayload) {\n      if (strapi.isLoaded) {\n        throw new Error(`You can't register new actions outside of the bootstrap function.`);\n      }\n\n      validateRegisterProviderAction([actionAttributes]);\n\n      const action = domain.create(actionAttributes);\n\n      return provider.register(action.actionId, action);\n    },\n\n    async registerMany(actionsAttributes: CreateActionPayload[]) {\n      validateRegisterProviderAction(actionsAttributes);\n\n      for (const attributes of actionsAttributes) {\n        await this.register(attributes);\n      }\n\n      return this;\n    },\n\n    async appliesToProperty(property: string, actionId: string, subject: Permission['subject']) {\n      const action = provider.get(actionId) as Action | undefined;\n      if (!action) {\n        throw new ApplicationError(`No action found with id \"${actionId}\"`);\n      }\n\n      const appliesToAction = domain.appliesToProperty(property, action);\n\n      // If the property isn't valid for this action, ignore the rest of the checks\n      if (!appliesToAction) {\n        return false;\n      }\n\n      // If the property is valid for this action and there isn't any subject\n      if (!subject) {\n        return true;\n      }\n\n      // If the property is valid for this action and the subject is not handled by the action\n      if (!domain.appliesToSubject(subject, action)) {\n        return false;\n      }\n\n      const results = await actionHooks.appliesPropertyToSubject.call({\n        property,\n        action,\n        subject,\n      });\n\n      return results.every((result) => result !== false);\n    },\n\n    /**\n     * @experimental\n     */\n    unstable_aliases(actionId: string, subject?: string | null): string[] {\n      const isRegistered = this.has(actionId);\n\n      if (!isRegistered) {\n        return [];\n      }\n\n      return this.values()\n        .filter((action) =>\n          action.aliases?.some((alias) => {\n            // Only look at alias with the correct actionId\n            if (alias.actionId !== actionId) {\n              return false;\n            }\n\n            // If the alias don't have a list of required subjects, keep it\n            if (!Array.isArray(alias.subjects)) {\n              return true;\n            }\n\n            // If the alias require specific subjects but none is provided, skip it\n            if (!subject) {\n              return false;\n            }\n\n            // Else, make sure the given subject is allowed\n            return alias.subjects.includes(subject);\n          })\n        )\n        .map((action) => action.actionId);\n    },\n  };\n};\n\nexport default createActionProvider;\n"],"names":["ApplicationError","errors","createActionProvider","options","provider","providerFactory","actionHooks","appliesPropertyToSubject","hooks","createAsyncParallelHook","register","actionAttributes","strapi","isLoaded","Error","validateRegisterProviderAction","action","domain","create","actionId","registerMany","actionsAttributes","attributes","appliesToProperty","property","subject","get","appliesToAction","appliesToSubject","results","call","every","result","unstable_aliases","isRegistered","has","values","filter","aliases","some","alias","Array","isArray","subjects","includes","map"],"mappings":"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"}