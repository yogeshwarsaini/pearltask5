{"version":3,"file":"getDisplayedFilters.js","sources":["../../../../../../../../../../ee/admin/src/pages/SettingsPage/pages/AuditLogs/utils/getDisplayedFilters.ts"],"sourcesContent":["import { IntlShape } from 'react-intl';\n\nimport { Filters } from '../../../../../../../../admin/src/components/Filters';\nimport { getDisplayName } from '../../../../../../../../admin/src/utils/users';\nimport { SanitizedAdminUser } from '../../../../../../../../shared/contracts/shared';\nimport { ComboboxFilter } from '../components/ComboboxFilter';\n\nimport { actionTypes, getDefaultMessage } from './getActionTypesDefaultMessages';\n\nexport const getDisplayedFilters = ({\n  formatMessage,\n  users,\n  canReadUsers,\n}: {\n  formatMessage: IntlShape['formatMessage'];\n  users: SanitizedAdminUser[];\n  canReadUsers: boolean;\n}): Filters.Filter[] => {\n  const operators = [\n    {\n      label: formatMessage({\n        id: 'components.FilterOptions.FILTER_TYPES.$eq',\n        defaultMessage: 'is',\n      }),\n      value: '$eq',\n    },\n    {\n      label: formatMessage({\n        id: 'components.FilterOptions.FILTER_TYPES.$ne',\n        defaultMessage: 'is not',\n      }),\n      value: '$ne',\n    },\n  ] as NonNullable<Filters.Filter['operators']>;\n\n  const filters = [\n    {\n      input: ComboboxFilter,\n      label: formatMessage({\n        id: 'Settings.permissions.auditLogs.action',\n        defaultMessage: 'Action',\n      }),\n      name: 'action',\n      operators,\n      options: (Object.keys(actionTypes) as (keyof typeof actionTypes)[]).map((action) => ({\n        label: formatMessage(\n          {\n            id: `Settings.permissions.auditLogs.${action}`,\n            defaultMessage: getDefaultMessage(action),\n          },\n          { model: undefined }\n        ),\n        value: action,\n      })),\n      type: 'enumeration',\n    },\n    {\n      label: formatMessage({\n        id: 'Settings.permissions.auditLogs.date',\n        defaultMessage: 'Date',\n      }),\n      name: 'date',\n      type: 'datetime',\n    },\n  ] satisfies Filters.Filter[];\n\n  if (canReadUsers && users) {\n    return [\n      ...filters,\n      {\n        input: ComboboxFilter,\n        label: formatMessage({\n          id: 'Settings.permissions.auditLogs.user',\n          defaultMessage: 'User',\n        }),\n        mainField: { name: 'id', type: 'integer' },\n        name: 'user',\n        operators,\n        options: users.map((user) => ({\n          label: getDisplayName(user),\n          value: user.id.toString(),\n        })),\n        type: 'relation',\n      } satisfies Filters.Filter,\n    ];\n  }\n\n  return filters;\n};\n"],"names":["getDisplayedFilters","formatMessage","users","canReadUsers","operators","label","id","defaultMessage","value","filters","input","ComboboxFilter","name","options","Object","keys","actionTypes","map","action","getDefaultMessage","model","undefined","type","mainField","user","getDisplayName","toString"],"mappings":";;;;;;AASO,MAAMA,sBAAsB,CAAC,EAClCC,aAAa,SACbC,OAAK,EACLC,YAAY,EAKb,GAAA;AACC,IAAA,MAAMC,SAAY,GAAA;AAChB,QAAA;AACEC,YAAAA,KAAAA,EAAOJ,aAAc,CAAA;gBACnBK,EAAI,EAAA,2CAAA;gBACJC,cAAgB,EAAA;AAClB,aAAA,CAAA;YACAC,KAAO,EAAA;AACT,SAAA;AACA,QAAA;AACEH,YAAAA,KAAAA,EAAOJ,aAAc,CAAA;gBACnBK,EAAI,EAAA,2CAAA;gBACJC,cAAgB,EAAA;AAClB,aAAA,CAAA;YACAC,KAAO,EAAA;AACT;AACD,KAAA;AAED,IAAA,MAAMC,OAAU,GAAA;AACd,QAAA;YACEC,KAAOC,EAAAA,6BAAAA;AACPN,YAAAA,KAAAA,EAAOJ,aAAc,CAAA;gBACnBK,EAAI,EAAA,uCAAA;gBACJC,cAAgB,EAAA;AAClB,aAAA,CAAA;YACAK,IAAM,EAAA,QAAA;AACNR,YAAAA,SAAAA;YACAS,OAAS,EAACC,OAAOC,IAAI,CAACC,2CAA8CC,GAAG,CAAC,CAACC,MAAAA,IAAY;AACnFb,oBAAAA,KAAAA,EAAOJ,aACL,CAAA;AACEK,wBAAAA,EAAAA,EAAI,CAAC,+BAA+B,EAAEY,MAAAA,CAAO,CAAC;AAC9CX,wBAAAA,cAAAA,EAAgBY,+CAAkBD,CAAAA,MAAAA;qBAEpC,EAAA;wBAAEE,KAAOC,EAAAA;AAAU,qBAAA,CAAA;oBAErBb,KAAOU,EAAAA;iBACT,CAAA,CAAA;YACAI,IAAM,EAAA;AACR,SAAA;AACA,QAAA;AACEjB,YAAAA,KAAAA,EAAOJ,aAAc,CAAA;gBACnBK,EAAI,EAAA,qCAAA;gBACJC,cAAgB,EAAA;AAClB,aAAA,CAAA;YACAK,IAAM,EAAA,MAAA;YACNU,IAAM,EAAA;AACR;AACD,KAAA;AAED,IAAA,IAAInB,gBAAgBD,OAAO,EAAA;QACzB,OAAO;AACFO,YAAAA,GAAAA,OAAAA;AACH,YAAA;gBACEC,KAAOC,EAAAA,6BAAAA;AACPN,gBAAAA,KAAAA,EAAOJ,aAAc,CAAA;oBACnBK,EAAI,EAAA,qCAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA,CAAA;gBACAgB,SAAW,EAAA;oBAAEX,IAAM,EAAA,IAAA;oBAAMU,IAAM,EAAA;AAAU,iBAAA;gBACzCV,IAAM,EAAA,MAAA;AACNR,gBAAAA,SAAAA;AACAS,gBAAAA,OAAAA,EAASX,OAAMe,CAAAA,GAAG,CAAC,CAACO,QAAU;AAC5BnB,wBAAAA,KAAAA,EAAOoB,oBAAeD,CAAAA,IAAAA,CAAAA;wBACtBhB,KAAOgB,EAAAA,IAAAA,CAAKlB,EAAE,CAACoB,QAAQ;qBACzB,CAAA,CAAA;gBACAJ,IAAM,EAAA;AACR;AACD,SAAA;AACH;IAEA,OAAOb,OAAAA;AACT;;;;"}