{"version":3,"file":"auditLogs.js","sources":["../../../../../../ee/admin/src/services/auditLogs.ts"],"sourcesContent":["import { adminApi } from '../../../../admin/src/services/api';\nimport * as AuditLogs from '../../../../shared/contracts/audit-logs';\n\nconst auditLogsService = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getAuditLogs: builder.query<AuditLogs.GetAll.Response, AuditLogs.GetAll.Request['query']>({\n      query: (params) => ({\n        url: `/admin/audit-logs`,\n        config: {\n          params,\n        },\n      }),\n    }),\n    getAuditLog: builder.query<AuditLogs.Get.Response, AuditLogs.Get.Params['id']>({\n      query: (id) => `/admin/audit-logs/${id}`,\n    }),\n  }),\n  overrideExisting: false,\n});\n\nconst { useGetAuditLogsQuery, useGetAuditLogQuery } = auditLogsService;\n\nexport { useGetAuditLogsQuery, useGetAuditLogQuery };\n"],"names":["auditLogsService","adminApi","injectEndpoints","endpoints","builder","getAuditLogs","query","params","url","config","getAuditLog","id","overrideExisting","useGetAuditLogsQuery","useGetAuditLogQuery"],"mappings":";;;;AAGA,MAAMA,gBAAAA,GAAmBC,YAASC,CAAAA,eAAe,CAAC;IAChDC,SAAW,EAAA,CAACC,WAAa;YACvBC,YAAcD,EAAAA,OAAAA,CAAQE,KAAK,CAA+D;gBACxFA,KAAO,EAAA,CAACC,UAAY;wBAClBC,GAAK,EAAA,CAAC,iBAAiB,CAAC;wBACxBC,MAAQ,EAAA;AACNF,4BAAAA;AACF;qBACF;AACF,aAAA,CAAA;YACAG,WAAaN,EAAAA,OAAAA,CAAQE,KAAK,CAAqD;AAC7EA,gBAAAA,KAAAA,EAAO,CAACK,EAAO,GAAA,CAAC,kBAAkB,EAAEA,GAAG;AACzC,aAAA;SACF,CAAA;IACAC,gBAAkB,EAAA;AACpB,CAAA,CAAA;AAEA,MAAM,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAE,GAAGd;;;;;"}