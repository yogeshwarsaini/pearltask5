{"version":3,"file":"SSOProviders.mjs","sources":["../../../../../../../../ee/admin/src/pages/AuthPage/components/SSOProviders.tsx"],"sourcesContent":["import { Flex, Grid, Tooltip, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { GetProviders } from '../../../../../../shared/contracts/providers';\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviders\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProvidersProps {\n  providers: GetProviders.Response;\n  displayAllProviders?: boolean;\n}\n\nconst SSOProviders = ({ providers, displayAllProviders }: SSOProvidersProps) => {\n  const { formatMessage } = useIntl();\n\n  if (displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n      </Grid.Root>\n    );\n  }\n\n  if (providers.length > 2 && !displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.slice(0, 2).map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n        <Grid.Item col={4} direction=\"column\" alignItems=\"stretch\">\n          <Tooltip\n            label={formatMessage({\n              id: 'global.see-more',\n            })}\n          >\n            <SSOButton as={Link} to=\"/auth/providers\">\n              <span aria-hidden>•••</span>\n            </SSOButton>\n          </Tooltip>\n        </Grid.Item>\n      </Grid.Root>\n    );\n  }\n\n  return (\n    <SSOProvidersWrapper justifyContent=\"center\">\n      {providers.map((provider) => (\n        <SSOProviderButton key={provider.uid} provider={provider} />\n      ))}\n    </SSOProvidersWrapper>\n  );\n};\n\nconst SSOProvidersWrapper = styled(Flex)`\n  & a:not(:first-child):not(:last-child) {\n    margin: 0 ${({ theme }) => theme.spaces[2]};\n  }\n  & a:first-child {\n    margin-right: ${({ theme }) => theme.spaces[2]};\n  }\n  & a:last-child {\n    margin-left: ${({ theme }) => theme.spaces[2]};\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviderButton\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProviderButtonProps {\n  provider: GetProviders.Response[number];\n}\n\nconst SSOProviderButton = ({ provider }: SSOProviderButtonProps) => {\n  return (\n    <Tooltip label={provider.displayName}>\n      <SSOButton href={`${window.strapi.backendURL}/admin/connect/${provider.uid}`}>\n        {provider.icon ? (\n          <img src={provider.icon} aria-hidden alt=\"\" height=\"32px\" />\n        ) : (\n          <Typography>{provider.displayName}</Typography>\n        )}\n      </SSOButton>\n    </Tooltip>\n  );\n};\n\nconst SSOButton = styled.a`\n  width: 13.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 4.8rem;\n  border: 1px solid ${({ theme }) => theme.colors.neutral150};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  text-decoration: inherit;\n  &:link {\n    text-decoration: none;\n  }\n  color: ${({ theme }) => theme.colors.neutral600};\n`;\n\nexport { SSOProviders };\nexport type { SSOProvidersProps };\n"],"names":["SSOProviders","providers","displayAllProviders","formatMessage","useIntl","_jsx","Grid","Root","gap","map","provider","Item","col","direction","alignItems","SSOProviderButton","uid","length","_jsxs","slice","Tooltip","label","id","SSOButton","as","Link","to","span","aria-hidden","SSOProvidersWrapper","justifyContent","styled","Flex","theme","spaces","displayName","href","window","strapi","backendURL","icon","img","src","alt","height","Typography","a","colors","neutral150","borderRadius","neutral600"],"mappings":"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"}