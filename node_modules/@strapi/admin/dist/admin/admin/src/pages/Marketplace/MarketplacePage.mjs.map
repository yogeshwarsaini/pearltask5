{"version":3,"file":"MarketplacePage.mjs","sources":["../../../../../../admin/src/pages/Marketplace/MarketplacePage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Flex, Searchbar, Tabs } from '@strapi/design-system';\nimport { ExternalLink } from '@strapi/icons';\nimport { GlassesSquare } from '@strapi/icons/symbols';\nimport { useIntl } from 'react-intl';\n\nimport { ContentBox } from '../../components/ContentBox';\nimport { Layouts } from '../../components/Layouts/Layout';\nimport { Page } from '../../components/PageHelpers';\nimport { Pagination } from '../../components/Pagination';\nimport { useTypedSelector } from '../../core/store/hooks';\nimport { useAppInfo } from '../../features/AppInfo';\nimport { useNotification } from '../../features/Notifications';\nimport { useTracking } from '../../features/Tracking';\nimport { useDebounce } from '../../hooks/useDebounce';\nimport { useQueryParams } from '../../hooks/useQueryParams';\n\nimport { NpmPackagesFilters } from './components/NpmPackagesFilters';\nimport { NpmPackagesGrid } from './components/NpmPackagesGrid';\nimport { OfflineLayout } from './components/OfflineLayout';\nimport { PageHeader } from './components/PageHeader';\nimport { SortSelect, SortSelectProps } from './components/SortSelect';\nimport { FilterTypes, useMarketplaceData } from './hooks/useMarketplaceData';\nimport { useNavigatorOnline } from './hooks/useNavigatorOnline';\n\ntype NpmPackageType = 'plugin' | 'provider';\n\ninterface MarketplacePageQuery {\n  collections?: string[];\n  categories?: string[];\n  npmPackageType?: NpmPackageType;\n  page?: number;\n  pageSize?: number;\n  search?: string;\n  sort?: SortSelectProps['sortQuery'];\n}\n\ninterface TabQuery {\n  plugin: MarketplacePageQuery;\n  provider: MarketplacePageQuery;\n}\n\nconst PLUGIN = 'plugin';\nconst PROVIDER = 'provider';\n\nconst MarketplacePage = () => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const { toggleNotification } = useNotification();\n  const [{ query }, setQuery] = useQueryParams<MarketplacePageQuery>();\n  const debouncedSearch = useDebounce(query?.search, 500) || '';\n\n  const {\n    autoReload: isInDevelopmentMode,\n    dependencies,\n    useYarn,\n    strapiVersion,\n  } = useAppInfo('MarketplacePage', (state) => state);\n  const isOnline = useNavigatorOnline();\n\n  const npmPackageType = query?.npmPackageType || PLUGIN;\n\n  const [tabQuery, setTabQuery] = React.useState<TabQuery>({\n    plugin: npmPackageType === PLUGIN ? { ...query } : {},\n    provider: npmPackageType === PROVIDER ? { ...query } : {},\n  });\n\n  React.useEffect(() => {\n    trackUsage('didGoToMarketplace');\n  }, [trackUsage]);\n\n  React.useEffect(() => {\n    if (!isInDevelopmentMode) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({\n          id: 'admin.pages.MarketPlacePage.production',\n          defaultMessage: 'Manage plugins from the development environment',\n        }),\n      });\n    }\n  }, [toggleNotification, isInDevelopmentMode, formatMessage]);\n\n  const {\n    pluginsResponse,\n    providersResponse,\n    pluginsStatus,\n    providersStatus,\n    possibleCollections,\n    possibleCategories,\n    pagination,\n  } = useMarketplaceData({ npmPackageType, debouncedSearch, query, tabQuery, strapiVersion });\n\n  if (!isOnline) {\n    return <OfflineLayout />;\n  }\n\n  const handleTabChange = (tab: string) => {\n    const selectedTab = tab === PLUGIN || tab === PROVIDER ? tab : PLUGIN;\n\n    const hasTabQuery = tabQuery[selectedTab] && Object.keys(tabQuery[selectedTab]).length;\n\n    if (hasTabQuery) {\n      setQuery({\n        // Keep filters and search\n        ...tabQuery[selectedTab],\n        search: query?.search || '',\n        // Set tab and reset page\n        npmPackageType: selectedTab,\n        page: 1,\n      });\n    } else {\n      setQuery({\n        // Set tab\n        npmPackageType: selectedTab,\n        // Clear filters\n        collections: [],\n        categories: [],\n        sort: 'name:asc',\n        page: 1,\n        // Keep search\n        search: query?.search || '',\n      });\n    }\n  };\n\n  const handleSelectChange = (update: Partial<MarketplacePageQuery>) => {\n    setQuery({ ...update, page: 1 });\n    setTabQuery((prev) => ({\n      ...prev,\n      [npmPackageType]: { ...prev[npmPackageType], ...update },\n    }));\n  };\n\n  const handleSelectClear = (filterType: FilterTypes) => {\n    setQuery({ [filterType]: [], page: undefined }, 'remove');\n    setTabQuery((prev) => ({ ...prev, [npmPackageType]: {} }));\n  };\n\n  const handleSortSelectChange: SortSelectProps['handleSelectChange'] = ({ sort }) =>\n    // @ts-expect-error - this is a narrowing issue.\n    handleSelectChange({ sort });\n\n  // Check if plugins and providers are installed already\n  const installedPackageNames = Object.keys(dependencies ?? {});\n\n  return (\n    <Layouts.Root>\n      <Page.Main>\n        <Page.Title>\n          {formatMessage({\n            id: 'admin.pages.MarketPlacePage.head',\n            defaultMessage: 'Marketplace - Plugins',\n          })}\n        </Page.Title>\n        <PageHeader isOnline={isOnline} npmPackageType={npmPackageType} />\n        <Layouts.Content>\n          <Tabs.Root variant=\"simple\" onValueChange={handleTabChange} value={npmPackageType}>\n            <Flex justifyContent=\"space-between\" paddingBottom={4}>\n              <Tabs.List\n                aria-label={formatMessage({\n                  id: 'admin.pages.MarketPlacePage.tab-group.label',\n                  defaultMessage: 'Plugins and Providers for Strapi',\n                })}\n              >\n                <Tabs.Trigger value={PLUGIN}>\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.plugins',\n                    defaultMessage: 'Plugins',\n                  })}{' '}\n                  {pluginsResponse ? `(${pluginsResponse.meta.pagination.total})` : '...'}\n                </Tabs.Trigger>\n                <Tabs.Trigger value={PROVIDER}>\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.providers',\n                    defaultMessage: 'Providers',\n                  })}{' '}\n                  {providersResponse ? `(${providersResponse.meta.pagination.total})` : '...'}\n                </Tabs.Trigger>\n              </Tabs.List>\n\n              <Box width=\"25%\">\n                <Searchbar\n                  name=\"searchbar\"\n                  onClear={() => setQuery({ search: '', page: 1 })}\n                  value={query?.search}\n                  onChange={(e) => setQuery({ search: e.target.value, page: 1 })}\n                  clearLabel={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.clear',\n                    defaultMessage: 'Clear the search',\n                  })}\n                  placeholder={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\n                    defaultMessage: 'Search',\n                  })}\n                >\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\n                    defaultMessage: 'Search',\n                  })}\n                </Searchbar>\n              </Box>\n            </Flex>\n            <Flex paddingBottom={4} gap={2}>\n              <SortSelect\n                sortQuery={query?.sort || 'name:asc'}\n                handleSelectChange={handleSortSelectChange}\n              />\n              <NpmPackagesFilters\n                npmPackageType={npmPackageType}\n                possibleCollections={possibleCollections}\n                possibleCategories={possibleCategories}\n                query={query || {}}\n                handleSelectChange={handleSelectChange}\n                handleSelectClear={handleSelectClear}\n              />\n            </Flex>\n            <Tabs.Content value={PLUGIN}>\n              <NpmPackagesGrid\n                npmPackages={pluginsResponse?.data}\n                status={pluginsStatus}\n                installedPackageNames={installedPackageNames}\n                useYarn={useYarn}\n                isInDevelopmentMode={isInDevelopmentMode}\n                npmPackageType=\"plugin\"\n                strapiAppVersion={strapiVersion}\n                debouncedSearch={debouncedSearch}\n              />\n            </Tabs.Content>\n            <Tabs.Content value={PROVIDER}>\n              <NpmPackagesGrid\n                npmPackages={providersResponse?.data}\n                status={providersStatus}\n                installedPackageNames={installedPackageNames}\n                useYarn={useYarn}\n                isInDevelopmentMode={isInDevelopmentMode}\n                npmPackageType=\"provider\"\n                debouncedSearch={debouncedSearch}\n              />\n            </Tabs.Content>\n            <Pagination.Root {...pagination} defaultPageSize={24}>\n              <Pagination.PageSize options={['12', '24', '50', '100']} />\n              <Pagination.Links />\n            </Pagination.Root>\n            <Box paddingTop={8}>\n              <a\n                href=\"https://strapi.canny.io/plugin-requests\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n                style={{ textDecoration: 'none' }}\n                onClick={() => trackUsage('didMissMarketplacePlugin')}\n              >\n                <ContentBox\n                  title={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.title',\n                    defaultMessage: 'Documentation',\n                  })}\n                  subtitle={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.description',\n                    defaultMessage:\n                      \"Tell us what plugin you are looking for and we'll let our community plugin developers know in case they are in search for inspiration!\",\n                  })}\n                  icon={<GlassesSquare />}\n                  iconBackground=\"alternative100\"\n                  endAction={\n                    <ExternalLink\n                      fill=\"neutral600\"\n                      width=\"1.2rem\"\n                      height=\"1.2rem\"\n                      style={{ marginLeft: '0.8rem' }}\n                    />\n                  }\n                />\n              </a>\n            </Box>\n          </Tabs.Root>\n        </Layouts.Content>\n      </Page.Main>\n    </Layouts.Root>\n  );\n};\n\nconst ProtectedMarketplacePage = () => {\n  const permissions = useTypedSelector((state) => state.admin_app.permissions.marketplace?.main);\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <MarketplacePage />\n    </Page.Protect>\n  );\n};\n\nexport { MarketplacePage, ProtectedMarketplacePage };\nexport type { NpmPackageType, MarketplacePageQuery, TabQuery };\n"],"names":["PLUGIN","PROVIDER","MarketplacePage","formatMessage","useIntl","trackUsage","useTracking","toggleNotification","useNotification","query","setQuery","useQueryParams","debouncedSearch","useDebounce","search","autoReload","isInDevelopmentMode","dependencies","useYarn","strapiVersion","useAppInfo","state","isOnline","useNavigatorOnline","npmPackageType","tabQuery","setTabQuery","React","useState","plugin","provider","useEffect","type","message","id","defaultMessage","pluginsResponse","providersResponse","pluginsStatus","providersStatus","possibleCollections","possibleCategories","pagination","useMarketplaceData","_jsx","OfflineLayout","handleTabChange","tab","selectedTab","hasTabQuery","Object","keys","length","page","collections","categories","sort","handleSelectChange","update","prev","handleSelectClear","filterType","undefined","handleSortSelectChange","installedPackageNames","Layouts","Root","_jsxs","Page","Main","Title","PageHeader","Content","Tabs","variant","onValueChange","value","Flex","justifyContent","paddingBottom","List","aria-label","Trigger","meta","total","Box","width","Searchbar","name","onClear","onChange","e","target","clearLabel","placeholder","gap","SortSelect","sortQuery","NpmPackagesFilters","NpmPackagesGrid","npmPackages","data","status","strapiAppVersion","Pagination","defaultPageSize","PageSize","options","Links","paddingTop","a","href","rel","style","textDecoration","onClick","ContentBox","title","subtitle","icon","GlassesSquare","iconBackground","endAction","ExternalLink","fill","height","marginLeft","ProtectedMarketplacePage","permissions","useTypedSelector","admin_app","marketplace","main","Protect"],"mappings":"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"}