{"version":3,"file":"reducer.js","sources":["../../../../../../../../../admin/src/pages/Settings/pages/ApiTokens/EditView/reducer.ts"],"sourcesContent":["/* eslint-disable consistent-return */\nimport { produce } from 'immer';\nimport pull from 'lodash/pull';\n\nimport { ContentApiPermission } from '../../../../../../../shared/contracts/content-api/permissions';\n\nimport { ApiTokenPermissionsContextValue } from './apiTokenPermissions';\nimport { transformPermissionsData } from './utils/transformPermissionsData';\n\ntype InitialState = Pick<\n  ApiTokenPermissionsContextValue['value'],\n  'data' | 'routes' | 'selectedAction' | 'selectedActions'\n>;\n\ninterface ActionOnChange {\n  type: 'ON_CHANGE';\n  value: string;\n}\n\ninterface ActionSelectAllInPermission {\n  type: 'SELECT_ALL_IN_PERMISSION';\n  value: { action: string; actionId: string }[];\n}\n\ninterface ActionSelectAllActions {\n  type: 'SELECT_ALL_ACTIONS';\n}\n\ninterface ActionOnChangeReadOnly {\n  type: 'ON_CHANGE_READ_ONLY';\n}\n\ninterface ActionUpdatePermissionsLayout {\n  type: 'UPDATE_PERMISSIONS_LAYOUT';\n  value: ContentApiPermission;\n}\n\ninterface ActionUpdateRoutes {\n  type: 'UPDATE_ROUTES';\n  value: ApiTokenPermissionsContextValue['value']['routes'] | undefined;\n}\n\ninterface ActionUpdatePermissions {\n  type: 'UPDATE_PERMISSIONS';\n  value: any[];\n}\n\ninterface ActionSetSelectedAction {\n  type: 'SET_SELECTED_ACTION';\n  value: string;\n}\n\ntype Action =\n  | ActionOnChange\n  | ActionSelectAllInPermission\n  | ActionSelectAllActions\n  | ActionOnChangeReadOnly\n  | ActionUpdatePermissionsLayout\n  | ActionUpdateRoutes\n  | ActionUpdatePermissions\n  | ActionSetSelectedAction;\n\nexport const initialState: InitialState = {\n  data: {\n    allActionsIds: [],\n    permissions: [],\n  },\n  routes: {},\n  selectedAction: '',\n  selectedActions: [],\n};\n\nexport const reducer = (state: InitialState, action: Action) =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case 'ON_CHANGE': {\n        if (draftState.selectedActions.includes(action.value)) {\n          pull(draftState.selectedActions, action.value);\n        } else {\n          draftState.selectedActions.push(action.value);\n        }\n        break;\n      }\n      case 'SELECT_ALL_IN_PERMISSION': {\n        const areAllSelected = action.value.every((item) =>\n          draftState.selectedActions.includes(item.actionId)\n        );\n\n        if (areAllSelected) {\n          action.value.forEach((item) => {\n            pull(draftState.selectedActions, item.actionId);\n          });\n        } else {\n          action.value.forEach((item) => {\n            draftState.selectedActions.push(item.actionId);\n          });\n        }\n        break;\n      }\n\n      case 'SELECT_ALL_ACTIONS': {\n        draftState.selectedActions = [...draftState.data.allActionsIds];\n\n        break;\n      }\n      case 'ON_CHANGE_READ_ONLY': {\n        const onlyReadOnlyActions = draftState.data.allActionsIds.filter(\n          (actionId) => actionId.includes('find') || actionId.includes('findOne')\n        );\n        draftState.selectedActions = [...onlyReadOnlyActions];\n        break;\n      }\n      case 'UPDATE_PERMISSIONS_LAYOUT': {\n        draftState.data = transformPermissionsData(action.value);\n        break;\n      }\n      case 'UPDATE_ROUTES': {\n        draftState.routes = { ...action.value };\n        break;\n      }\n      case 'UPDATE_PERMISSIONS': {\n        draftState.selectedActions = [...action.value];\n        break;\n      }\n      case 'SET_SELECTED_ACTION': {\n        draftState.selectedAction = action.value;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n"],"names":["initialState","data","allActionsIds","permissions","routes","selectedAction","selectedActions","reducer","state","action","produce","draftState","type","includes","value","pull","push","areAllSelected","every","item","actionId","forEach","onlyReadOnlyActions","filter","transformPermissionsData"],"mappings":";;;;;;MA8DaA,YAA6B,GAAA;IACxCC,IAAM,EAAA;AACJC,QAAAA,aAAAA,EAAe,EAAE;AACjBC,QAAAA,WAAAA,EAAa;AACf,KAAA;AACAC,IAAAA,MAAAA,EAAQ,EAAC;IACTC,cAAgB,EAAA,EAAA;AAChBC,IAAAA,eAAAA,EAAiB;AACnB;MAEaC,OAAU,GAAA,CAACC,OAAqBC,MAC3CC,GAAAA,aAAAA,CAAQF,OAAO,CAACG,UAAAA,GAAAA;AACd,QAAA,OAAQF,OAAOG,IAAI;YACjB,KAAK,WAAA;AAAa,gBAAA;AAChB,oBAAA,IAAID,WAAWL,eAAe,CAACO,QAAQ,CAACJ,MAAAA,CAAOK,KAAK,CAAG,EAAA;AACrDC,wBAAAA,IAAAA,CAAKJ,UAAWL,CAAAA,eAAe,EAAEG,MAAAA,CAAOK,KAAK,CAAA;qBACxC,MAAA;AACLH,wBAAAA,UAAAA,CAAWL,eAAe,CAACU,IAAI,CAACP,OAAOK,KAAK,CAAA;AAC9C;AACA,oBAAA;AACF;YACA,KAAK,0BAAA;AAA4B,gBAAA;AAC/B,oBAAA,MAAMG,cAAiBR,GAAAA,MAAAA,CAAOK,KAAK,CAACI,KAAK,CAAC,CAACC,IACzCR,GAAAA,UAAAA,CAAWL,eAAe,CAACO,QAAQ,CAACM,KAAKC,QAAQ,CAAA,CAAA;AAGnD,oBAAA,IAAIH,cAAgB,EAAA;AAClBR,wBAAAA,MAAAA,CAAOK,KAAK,CAACO,OAAO,CAAC,CAACF,IAAAA,GAAAA;AACpBJ,4BAAAA,IAAAA,CAAKJ,UAAWL,CAAAA,eAAe,EAAEa,IAAAA,CAAKC,QAAQ,CAAA;AAChD,yBAAA,CAAA;qBACK,MAAA;AACLX,wBAAAA,MAAAA,CAAOK,KAAK,CAACO,OAAO,CAAC,CAACF,IAAAA,GAAAA;AACpBR,4BAAAA,UAAAA,CAAWL,eAAe,CAACU,IAAI,CAACG,KAAKC,QAAQ,CAAA;AAC/C,yBAAA,CAAA;AACF;AACA,oBAAA;AACF;YAEA,KAAK,oBAAA;AAAsB,gBAAA;AACzBT,oBAAAA,UAAAA,CAAWL,eAAe,GAAG;2BAAIK,UAAWV,CAAAA,IAAI,CAACC;AAAc,qBAAA;AAE/D,oBAAA;AACF;YACA,KAAK,qBAAA;AAAuB,gBAAA;AAC1B,oBAAA,MAAMoB,sBAAsBX,UAAWV,CAAAA,IAAI,CAACC,aAAa,CAACqB,MAAM,CAC9D,CAACH,QAAAA,GAAaA,SAASP,QAAQ,CAAC,MAAWO,CAAAA,IAAAA,QAAAA,CAASP,QAAQ,CAAC,SAAA,CAAA,CAAA;AAE/DF,oBAAAA,UAAAA,CAAWL,eAAe,GAAG;AAAIgB,wBAAAA,GAAAA;AAAoB,qBAAA;AACrD,oBAAA;AACF;YACA,KAAK,2BAAA;AAA6B,gBAAA;AAChCX,oBAAAA,UAAAA,CAAWV,IAAI,GAAGuB,iDAAyBf,CAAAA,MAAAA,CAAOK,KAAK,CAAA;AACvD,oBAAA;AACF;YACA,KAAK,eAAA;AAAiB,gBAAA;AACpBH,oBAAAA,UAAAA,CAAWP,MAAM,GAAG;AAAE,wBAAA,GAAGK,OAAOK;AAAM,qBAAA;AACtC,oBAAA;AACF;YACA,KAAK,oBAAA;AAAsB,gBAAA;AACzBH,oBAAAA,UAAAA,CAAWL,eAAe,GAAG;AAAIG,wBAAAA,GAAAA,MAAAA,CAAOK;AAAM,qBAAA;AAC9C,oBAAA;AACF;YACA,KAAK,qBAAA;AAAuB,gBAAA;oBAC1BH,UAAWN,CAAAA,cAAc,GAAGI,MAAAA,CAAOK,KAAK;AACxC,oBAAA;AACF;AACA,YAAA;gBACE,OAAOH,UAAAA;AACX;KACC;;;;;"}