{"version":3,"file":"LifeSpanInput.js","sources":["../../../../../../../../admin/src/pages/Settings/components/Tokens/LifeSpanInput.tsx"],"sourcesContent":["import { SingleSelectOption, SingleSelect, Typography, Field } from '@strapi/design-system';\nimport { MessageDescriptor, useIntl } from 'react-intl';\n\nimport { getDateOfExpiration } from '../../pages/ApiTokens/EditView/utils/getDateOfExpiration';\nimport { isErrorMessageMessageDescriptor } from '../../utils/forms';\n\nimport type { ApiToken } from '../../../../../../shared/contracts/api-token';\nimport type { TransferToken } from '../../../../../../shared/contracts/transfer';\n\ninterface LifeSpanInputProps {\n  error?: string | MessageDescriptor;\n  value?: string | number | null;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  isCreating: boolean;\n  token: Partial<TransferToken> | Partial<ApiToken> | null;\n}\n\nexport const LifeSpanInput = ({\n  token,\n  error,\n  value,\n  onChange,\n  isCreating,\n}: LifeSpanInputProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <>\n      <Field.Root\n        error={\n          error\n            ? formatMessage(\n                isErrorMessageMessageDescriptor(error)\n                  ? error\n                  : { id: error, defaultMessage: error }\n              )\n            : undefined\n        }\n        name=\"lifespan\"\n        required\n      >\n        <Field.Label>\n          {formatMessage({\n            id: 'Settings.tokens.form.duration',\n            defaultMessage: 'Token duration',\n          })}\n        </Field.Label>\n        <SingleSelect\n          value={value}\n          onChange={(value) => {\n            // @ts-expect-error – DS v2 won't support number types for select\n            onChange({ target: { name: 'lifespan', value } });\n          }}\n          disabled={!isCreating}\n          placeholder=\"Select\"\n        >\n          <SingleSelectOption value=\"604800000\">\n            {formatMessage({\n              id: 'Settings.tokens.duration.7-days',\n              defaultMessage: '7 days',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"2592000000\">\n            {formatMessage({\n              id: 'Settings.tokens.duration.30-days',\n              defaultMessage: '30 days',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"7776000000\">\n            {formatMessage({\n              id: 'Settings.tokens.duration.90-days',\n              defaultMessage: '90 days',\n            })}\n          </SingleSelectOption>\n          <SingleSelectOption value=\"0\">\n            {formatMessage({\n              id: 'Settings.tokens.duration.unlimited',\n              defaultMessage: 'Unlimited',\n            })}\n          </SingleSelectOption>\n        </SingleSelect>\n        <Field.Error />\n      </Field.Root>\n      <Typography variant=\"pi\" textColor=\"neutral600\">\n        {!isCreating &&\n          `${formatMessage({\n            id: 'Settings.tokens.duration.expiration-date',\n            defaultMessage: 'Expiration date',\n            // @ts-expect-error – TODO: fix this.\n          })}: ${getDateOfExpiration(token?.createdAt, parseInt(value ?? '', 10))}`}\n      </Typography>\n    </>\n  );\n};\n"],"names":["LifeSpanInput","token","error","value","onChange","isCreating","formatMessage","useIntl","_jsxs","_Fragment","Field","Root","isErrorMessageMessageDescriptor","id","defaultMessage","undefined","name","required","_jsx","Label","SingleSelect","target","disabled","placeholder","SingleSelectOption","Error","Typography","variant","textColor","getDateOfExpiration","createdAt","parseInt"],"mappings":";;;;;;;;AAiBaA,MAAAA,aAAAA,GAAgB,CAAC,EAC5BC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACS,GAAA;IACnB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;IAE1B,qBACEC,eAAA,CAAAC,mBAAA,EAAA;;AACE,0BAAAD,eAAA,CAACE,mBAAMC,IAAI,EAAA;AACTT,gBAAAA,KAAAA,EACEA,KACII,GAAAA,aAAAA,CACEM,qCAAgCV,CAAAA,KAAAA,CAAAA,GAC5BA,KACA,GAAA;oBAAEW,EAAIX,EAAAA,KAAAA;oBAAOY,cAAgBZ,EAAAA;iBAEnCa,CAAAA,GAAAA,SAAAA;gBAENC,IAAK,EAAA,UAAA;gBACLC,QAAQ,EAAA,IAAA;;AAER,kCAAAC,cAAA,CAACR,mBAAMS,KAAK,EAAA;kCACTb,aAAc,CAAA;4BACbO,EAAI,EAAA,+BAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;;kCAEFN,eAACY,CAAAA,yBAAAA,EAAAA;wBACCjB,KAAOA,EAAAA,KAAAA;AACPC,wBAAAA,QAAAA,EAAU,CAACD,KAAAA,GAAAA;;4BAETC,QAAS,CAAA;gCAAEiB,MAAQ,EAAA;oCAAEL,IAAM,EAAA,UAAA;AAAYb,oCAAAA;AAAM;AAAE,6BAAA,CAAA;AACjD,yBAAA;AACAmB,wBAAAA,QAAAA,EAAU,CAACjB,UAAAA;wBACXkB,WAAY,EAAA,QAAA;;0CAEZL,cAACM,CAAAA,+BAAAA,EAAAA;gCAAmBrB,KAAM,EAAA,WAAA;0CACvBG,aAAc,CAAA;oCACbO,EAAI,EAAA,iCAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA;;0CAEFI,cAACM,CAAAA,+BAAAA,EAAAA;gCAAmBrB,KAAM,EAAA,YAAA;0CACvBG,aAAc,CAAA;oCACbO,EAAI,EAAA,kCAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA;;0CAEFI,cAACM,CAAAA,+BAAAA,EAAAA;gCAAmBrB,KAAM,EAAA,YAAA;0CACvBG,aAAc,CAAA;oCACbO,EAAI,EAAA,kCAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA;;0CAEFI,cAACM,CAAAA,+BAAAA,EAAAA;gCAAmBrB,KAAM,EAAA,GAAA;0CACvBG,aAAc,CAAA;oCACbO,EAAI,EAAA,oCAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA;;;;AAGJ,kCAAAI,cAAA,CAACR,mBAAMe,KAAK,EAAA,EAAA;;;0BAEdP,cAACQ,CAAAA,uBAAAA,EAAAA;gBAAWC,OAAQ,EAAA,IAAA;gBAAKC,SAAU,EAAA,YAAA;0BAChC,CAACvB,UAAAA,IACA,CAAC,EAAEC,aAAc,CAAA;oBACfO,EAAI,EAAA,0CAAA;oBACJC,cAAgB,EAAA;iBAEf,CAAA,CAAA,EAAE,EAAEe,uCAAoB5B,CAAAA,KAAAA,EAAO6B,WAAWC,QAAS5B,CAAAA,KAAAA,IAAS,EAAI,EAAA,EAAA,CAAA,CAAA,CAAK;;;;AAIlF;;;;"}