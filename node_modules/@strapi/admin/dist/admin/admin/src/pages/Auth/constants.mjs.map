{"version":3,"file":"constants.mjs","sources":["../../../../../../admin/src/pages/Auth/constants.ts"],"sourcesContent":["import type { ComponentType } from 'react';\n\nimport { ForgotPassword } from './components/ForgotPassword';\nimport { ForgotPasswordSuccess } from './components/ForgotPasswordSuccess';\nimport { Oops } from './components/Oops';\nimport { Register, RegisterProps } from './components/Register';\nimport { ResetPassword } from './components/ResetPassword';\n\nexport type AuthType =\n  | 'login'\n  | 'register'\n  | 'register-admin'\n  | 'forgot-password'\n  | 'reset-password'\n  | 'forgot-password-success'\n  | 'oops'\n  | 'providers';\n\nexport type FormDictionary = Record<AuthType, ComponentType | ComponentType<RegisterProps>>;\n\nexport const FORMS = {\n  'forgot-password': ForgotPassword,\n  'forgot-password-success': ForgotPasswordSuccess,\n  // the `Component` attribute is set after all forms and CE/EE components are loaded, but since we\n  // are here outside of a React component we can not use the hook directly\n  login: () => null,\n  oops: Oops,\n  register: Register,\n  'register-admin': Register,\n  'reset-password': ResetPassword,\n  providers: () => null,\n} satisfies FormDictionary;\n"],"names":["FORMS","ForgotPassword","ForgotPasswordSuccess","login","oops","Oops","register","Register","ResetPassword","providers"],"mappings":";;;;;;MAoBaA,KAAQ,GAAA;IACnB,iBAAmBC,EAAAA,cAAAA;IACnB,yBAA2BC,EAAAA,qBAAAA;;;AAG3BC,IAAAA,KAAAA,EAAO,IAAM,IAAA;IACbC,IAAMC,EAAAA,IAAAA;IACNC,QAAUC,EAAAA,QAAAA;IACV,gBAAkBA,EAAAA,QAAAA;IAClB,gBAAkBC,EAAAA,aAAAA;AAClBC,IAAAA,SAAAA,EAAW,IAAM;AACnB;;;;"}