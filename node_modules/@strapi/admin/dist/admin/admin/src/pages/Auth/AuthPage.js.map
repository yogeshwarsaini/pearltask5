{"version":3,"file":"AuthPage.js","sources":["../../../../../../admin/src/pages/Auth/AuthPage.tsx"],"sourcesContent":["import { Navigate, useLocation, useMatch } from 'react-router-dom';\n\nimport { useAuth } from '../../features/Auth';\nimport { useEnterprise } from '../../hooks/useEnterprise';\nimport { useInitQuery } from '../../services/admin';\n\nimport { Login as LoginCE } from './components/Login';\nimport { FORMS, FormDictionary } from './constants';\n\n/* -------------------------------------------------------------------------------------------------\n * AuthPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst AuthPage = () => {\n  const { search } = useLocation();\n  const match = useMatch('/auth/:authType');\n  const authType = match?.params.authType;\n  const { data } = useInitQuery();\n  const { hasAdmin } = data ?? {};\n  const Login = useEnterprise(\n    LoginCE,\n    async () => (await import('../../../../ee/admin/src/pages/AuthPage/components/Login')).LoginEE\n  );\n  const forms = useEnterprise<FormDictionary, Partial<FormDictionary>>(\n    FORMS,\n    async () => (await import('../../../../ee/admin/src/pages/AuthPage/constants')).FORMS,\n    {\n      combine(ceForms, eeForms) {\n        return {\n          ...ceForms,\n          ...eeForms,\n        };\n      },\n      defaultValue: FORMS,\n    }\n  );\n\n  const { token } = useAuth('AuthPage', (auth) => auth);\n\n  if (!authType || !forms) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const Component = forms[authType as keyof FormDictionary];\n\n  // Redirect the user to the login page if\n  // the endpoint does not exists\n  if (!Component) {\n    return <Navigate to=\"/\" />;\n  }\n\n  // User is already logged in\n  if (authType !== 'register-admin' && authType !== 'register' && token) {\n    return <Navigate to=\"/\" />;\n  }\n\n  // there is already an admin user oo\n  if (hasAdmin && authType === 'register-admin' && token) {\n    return <Navigate to=\"/\" />;\n  }\n\n  // Redirect the user to the register-admin if it is the first user\n  if (!hasAdmin && authType !== 'register-admin') {\n    return (\n      <Navigate\n        to={{\n          pathname: '/auth/register-admin',\n          // Forward the `?redirectTo` from /auth/login\n          // /abc => /auth/login?redirectTo=%2Fabc => /auth/register-admin?redirectTo=%2Fabc\n          search,\n        }}\n      />\n    );\n  }\n\n  if (Login && authType === 'login') {\n    // Assign the component to render for the login form\n    return <Login />;\n  } else if (authType === 'login' && !Login) {\n    // block rendering until the Login EE component is fully loaded\n    return null;\n  }\n\n  return <Component hasAdmin={hasAdmin} />;\n};\n\nexport { AuthPage };\n"],"names":["AuthPage","search","useLocation","match","useMatch","authType","params","data","useInitQuery","hasAdmin","Login","useEnterprise","LoginCE","LoginEE","forms","FORMS","combine","ceForms","eeForms","defaultValue","token","useAuth","auth","_jsx","Navigate","to","Component","pathname"],"mappings":";;;;;;;;;;AASA;;AAEkG,2GAE5FA,QAAW,GAAA,IAAA;IACf,MAAM,EAAEC,MAAM,EAAE,GAAGC,0BAAAA,EAAAA;AACnB,IAAA,MAAMC,QAAQC,uBAAS,CAAA,iBAAA,CAAA;IACvB,MAAMC,QAAAA,GAAWF,OAAOG,MAAOD,CAAAA,QAAAA;IAC/B,MAAM,EAAEE,IAAI,EAAE,GAAGC,kBAAAA,EAAAA;AACjB,IAAA,MAAM,EAAEC,QAAQ,EAAE,GAAGF,QAAQ,EAAC;IAC9B,MAAMG,OAAAA,GAAQC,2BACZC,CAAAA,WAAAA,EACA,UAAa,CAAA,MAAM,oDAAO,6DAA0D,KAAA,EAAGC,OAAO,CAAA;AAEhG,IAAA,MAAMC,KAAQH,GAAAA,2BAAAA,CACZI,eACA,EAAA,UAAY,CAAC,MAAM,oDAAO,sDAAA,KAAmD,EAAGA,KAAK,EACrF;QACEC,OAAQC,CAAAA,CAAAA,OAAO,EAAEC,OAAO,EAAA;YACtB,OAAO;AACL,gBAAA,GAAGD,OAAO;AACV,gBAAA,GAAGC;AACL,aAAA;AACF,SAAA;QACAC,YAAcJ,EAAAA;AAChB,KAAA,CAAA;AAGF,IAAA,MAAM,EAAEK,KAAK,EAAE,GAAGC,YAAQ,CAAA,UAAA,EAAY,CAACC,IAASA,GAAAA,IAAAA,CAAAA;IAEhD,IAAI,CAACjB,QAAY,IAAA,CAACS,KAAO,EAAA;AACvB,QAAA,qBAAOS,cAACC,CAAAA,uBAAAA,EAAAA;YAASC,EAAG,EAAA;;AACtB;IAEA,MAAMC,SAAAA,GAAYZ,KAAK,CAACT,QAAiC,CAAA;;;AAIzD,IAAA,IAAI,CAACqB,SAAW,EAAA;AACd,QAAA,qBAAOH,cAACC,CAAAA,uBAAAA,EAAAA;YAASC,EAAG,EAAA;;AACtB;;AAGA,IAAA,IAAIpB,QAAa,KAAA,gBAAA,IAAoBA,QAAa,KAAA,UAAA,IAAce,KAAO,EAAA;AACrE,QAAA,qBAAOG,cAACC,CAAAA,uBAAAA,EAAAA;YAASC,EAAG,EAAA;;AACtB;;IAGA,IAAIhB,QAAAA,IAAYJ,QAAa,KAAA,gBAAA,IAAoBe,KAAO,EAAA;AACtD,QAAA,qBAAOG,cAACC,CAAAA,uBAAAA,EAAAA;YAASC,EAAG,EAAA;;AACtB;;IAGA,IAAI,CAAChB,QAAYJ,IAAAA,QAAAA,KAAa,gBAAkB,EAAA;AAC9C,QAAA,qBACEkB,cAACC,CAAAA,uBAAAA,EAAAA;YACCC,EAAI,EAAA;gBACFE,QAAU,EAAA,sBAAA;;;AAGV1B,gBAAAA;AACF;;AAGN;IAEA,IAAIS,OAAAA,IAASL,aAAa,OAAS,EAAA;;AAEjC,QAAA,qBAAOkB,cAACb,CAAAA,OAAAA,EAAAA,EAAAA,CAAAA;AACV,KAAA,MAAO,IAAIL,QAAAA,KAAa,OAAW,IAAA,CAACK,OAAO,EAAA;;QAEzC,OAAO,IAAA;AACT;AAEA,IAAA,qBAAOa,cAACG,CAAAA,SAAAA,EAAAA;QAAUjB,QAAUA,EAAAA;;AAC9B;;;;"}