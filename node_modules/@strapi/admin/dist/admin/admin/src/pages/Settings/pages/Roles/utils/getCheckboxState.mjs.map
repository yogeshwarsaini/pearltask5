{"version":3,"file":"getCheckboxState.mjs","sources":["../../../../../../../../../admin/src/pages/Settings/pages/Roles/utils/getCheckboxState.ts"],"sourcesContent":["import { createArrayOfValues } from './createArrayOfValues';\nimport { removeConditionKeyFromData } from './removeConditionKeyFromData';\n\ninterface RecursiveRecordOfBooleans extends Record<string, boolean | RecursiveRecordOfBooleans> {}\n\nconst getCheckboxState = (dataObj: RecursiveRecordOfBooleans) => {\n  const dataWithoutCondition = removeConditionKeyFromData(dataObj);\n\n  const arrayOfValues = createArrayOfValues(dataWithoutCondition);\n\n  if (!arrayOfValues.length) {\n    return { hasAllActionsSelected: false, hasSomeActionsSelected: false };\n  }\n\n  const hasAllActionsSelected = arrayOfValues.every((val) => val);\n  const hasSomeActionsSelected = arrayOfValues.some((val) => val) && !hasAllActionsSelected;\n\n  return { hasAllActionsSelected, hasSomeActionsSelected };\n};\n\nexport { getCheckboxState };\nexport type { RecursiveRecordOfBooleans };\n"],"names":["getCheckboxState","dataObj","dataWithoutCondition","removeConditionKeyFromData","arrayOfValues","createArrayOfValues","length","hasAllActionsSelected","hasSomeActionsSelected","every","val","some"],"mappings":";;;AAKA,MAAMA,mBAAmB,CAACC,OAAAA,GAAAA;AACxB,IAAA,MAAMC,uBAAuBC,0BAA2BF,CAAAA,OAAAA,CAAAA;AAExD,IAAA,MAAMG,gBAAgBC,mBAAoBH,CAAAA,oBAAAA,CAAAA;IAE1C,IAAI,CAACE,aAAcE,CAAAA,MAAM,EAAE;QACzB,OAAO;YAAEC,qBAAuB,EAAA,KAAA;YAAOC,sBAAwB,EAAA;AAAM,SAAA;AACvE;AAEA,IAAA,MAAMD,qBAAwBH,GAAAA,aAAAA,CAAcK,KAAK,CAAC,CAACC,GAAQA,GAAAA,GAAAA,CAAAA;AAC3D,IAAA,MAAMF,yBAAyBJ,aAAcO,CAAAA,IAAI,CAAC,CAACD,GAAAA,GAAQA,QAAQ,CAACH,qBAAAA;IAEpE,OAAO;AAAEA,QAAAA,qBAAAA;AAAuBC,QAAAA;AAAuB,KAAA;AACzD;;;;"}