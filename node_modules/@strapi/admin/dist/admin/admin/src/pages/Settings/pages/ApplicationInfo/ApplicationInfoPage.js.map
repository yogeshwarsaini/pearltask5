{"version":3,"file":"ApplicationInfoPage.js","sources":["../../../../../../../../admin/src/pages/Settings/pages/ApplicationInfo/ApplicationInfoPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Button, Flex, Grid, Link, Typography } from '@strapi/design-system';\nimport { Check, ExternalLink } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { Layouts } from '../../../../components/Layouts/Layout';\nimport { Page } from '../../../../components/PageHelpers';\nimport { useAppInfo } from '../../../../features/AppInfo';\nimport { useConfiguration } from '../../../../features/Configuration';\nimport { useTracking } from '../../../../features/Tracking';\nimport { useEnterprise } from '../../../../hooks/useEnterprise';\nimport { useRBAC } from '../../../../hooks/useRBAC';\nimport { selectAdminPermissions } from '../../../../selectors';\n\nimport { LogoInput, LogoInputProps } from './components/LogoInput';\nimport { DIMENSION, SIZE } from './utils/constants';\n\nconst AdminSeatInfoCE = () => null;\n\n/* -------------------------------------------------------------------------------------------------\n * ApplicationInfoPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst ApplicationInfoPage = () => {\n  const { trackUsage } = useTracking();\n  const { formatMessage } = useIntl();\n  const { logos: serverLogos, updateProjectSettings } = useConfiguration('ApplicationInfoPage');\n  const [logos, setLogos] = React.useState({ menu: serverLogos.menu, auth: serverLogos.auth });\n  const { settings } = useSelector(selectAdminPermissions);\n\n  const communityEdition = useAppInfo('ApplicationInfoPage', (state) => state.communityEdition);\n  const latestStrapiReleaseTag = useAppInfo(\n    'ApplicationInfoPage',\n    (state) => state.latestStrapiReleaseTag\n  );\n  const nodeVersion = useAppInfo('ApplicationInfoPage', (state) => state.nodeVersion);\n  const shouldUpdateStrapi = useAppInfo('ApplicationInfoPage', (state) => state.shouldUpdateStrapi);\n  const strapiVersion = useAppInfo('ApplicationInfoPage', (state) => state.strapiVersion);\n\n  const AdminSeatInfo = useEnterprise(\n    AdminSeatInfoCE,\n    async () =>\n      (\n        await import(\n          '../../../../../../ee/admin/src/pages/SettingsPage/pages/ApplicationInfoPage/components/AdminSeatInfo'\n        )\n      ).AdminSeatInfoEE\n  );\n\n  const {\n    allowedActions: { canRead, canUpdate },\n  } = useRBAC(settings ? settings['project-settings'] : {});\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    updateProjectSettings({\n      authLogo: logos.auth.custom ?? null,\n      menuLogo: logos.menu.custom ?? null,\n    });\n  };\n\n  const handleChangeLogo =\n    (logo: 'menu' | 'auth'): LogoInputProps['onChangeLogo'] =>\n    (newLogo) => {\n      /**\n       * If there's no newLogo value we can assume we're reseting.\n       */\n      if (newLogo === null) {\n        trackUsage('didClickResetLogo', {\n          logo,\n        });\n      }\n\n      setLogos((prev) => ({\n        ...prev,\n        [logo]: {\n          ...prev[logo],\n          custom: newLogo,\n        },\n      }));\n    };\n\n  React.useEffect(() => {\n    setLogos({\n      menu: serverLogos.menu,\n      auth: serverLogos.auth,\n    });\n  }, [serverLogos]);\n\n  // block rendering until the EE component is fully loaded\n  if (!AdminSeatInfo) {\n    return null;\n  }\n\n  const isSaveDisabled =\n    logos.auth.custom === serverLogos.auth.custom && logos.menu.custom === serverLogos.menu.custom;\n\n  return (\n    <Layouts.Root>\n      <Page.Title>\n        {formatMessage(\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\n          {\n            name: formatMessage({\n              id: 'Settings.application.header',\n              defaultMessage: 'Application',\n            }),\n          }\n        )}\n      </Page.Title>\n      <Page.Main>\n        <form onSubmit={handleSubmit}>\n          <Layouts.Header\n            title={formatMessage({\n              id: 'Settings.application.title',\n              defaultMessage: 'Overview',\n            })}\n            subtitle={formatMessage({\n              id: 'Settings.application.description',\n              defaultMessage: 'Administration panel’s global information',\n            })}\n            primaryAction={\n              canUpdate && (\n                <Button disabled={isSaveDisabled} type=\"submit\" startIcon={<Check />}>\n                  {formatMessage({ id: 'global.save', defaultMessage: 'Save' })}\n                </Button>\n              )\n            }\n          />\n          <Layouts.Content>\n            <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n              <Flex\n                direction=\"column\"\n                alignItems=\"stretch\"\n                gap={4}\n                hasRadius\n                background=\"neutral0\"\n                shadow=\"tableShadow\"\n                paddingTop={6}\n                paddingBottom={6}\n                paddingRight={7}\n                paddingLeft={7}\n              >\n                <Typography variant=\"delta\" tag=\"h3\">\n                  {formatMessage({\n                    id: 'global.details',\n                    defaultMessage: 'Details',\n                  })}\n                </Typography>\n\n                <Grid.Root gap={5} tag=\"dl\">\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\n                      {formatMessage({\n                        id: 'Settings.application.strapiVersion',\n                        defaultMessage: 'strapi version',\n                      })}\n                    </Typography>\n                    <Flex gap={3} direction=\"column\" alignItems=\"start\" tag=\"dd\">\n                      <Typography>v{strapiVersion}</Typography>\n                      {shouldUpdateStrapi && (\n                        <Link\n                          href={`https://github.com/strapi/strapi/releases/tag/${latestStrapiReleaseTag}`}\n                          endIcon={<ExternalLink />}\n                        >\n                          {formatMessage({\n                            id: 'Settings.application.link-upgrade',\n                            defaultMessage: 'Upgrade your admin panel',\n                          })}\n                        </Link>\n                      )}\n                    </Flex>\n                  </Grid.Item>\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\n                      {formatMessage({\n                        id: 'Settings.application.edition-title',\n                        defaultMessage: 'current edition',\n                      })}\n                    </Typography>\n                    <Flex gap={3} direction=\"column\" alignItems=\"start\" tag=\"dd\">\n                      <Typography>\n                        {formatMessage(\n                          {\n                            id: 'Settings.application.ee-or-ce',\n                            defaultMessage:\n                              '{communityEdition, select, true {Community Edition} other {Enterprise Edition}}',\n                          },\n                          { communityEdition }\n                        )}\n                      </Typography>\n                      <Link href=\"https://strapi.io/pricing-self-hosted\" endIcon={<ExternalLink />}>\n                        {formatMessage({\n                          id: 'Settings.application.link-pricing',\n                          defaultMessage: 'See all pricing plans',\n                        })}\n                      </Link>\n                    </Flex>\n                  </Grid.Item>\n\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\n                      {formatMessage({\n                        id: 'Settings.application.node-version',\n                        defaultMessage: 'node version',\n                      })}\n                    </Typography>\n                    <Typography tag=\"dd\">{nodeVersion}</Typography>\n                  </Grid.Item>\n                  <AdminSeatInfo />\n                </Grid.Root>\n              </Flex>\n              {canRead && (\n                <Box\n                  hasRadius\n                  background=\"neutral0\"\n                  shadow=\"tableShadow\"\n                  paddingTop={6}\n                  paddingBottom={6}\n                  paddingRight={7}\n                  paddingLeft={7}\n                >\n                  <Typography variant=\"delta\" tag=\"h3\">\n                    {formatMessage({\n                      id: 'Settings.application.customization',\n                      defaultMessage: 'Customization',\n                    })}\n                  </Typography>\n                  <Typography variant=\"pi\" textColor=\"neutral600\">\n                    {formatMessage(\n                      {\n                        id: 'Settings.application.customization.size-details',\n                        defaultMessage:\n                          'Max dimension: {dimension}×{dimension}, Max file size: {size}KB',\n                      },\n                      { dimension: DIMENSION, size: SIZE }\n                    )}\n                  </Typography>\n                  <Grid.Root paddingTop={4} gap={4}>\n                    <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"stretch\">\n                      <LogoInput\n                        canUpdate={canUpdate}\n                        customLogo={logos.menu.custom}\n                        defaultLogo={logos.menu.default}\n                        hint={formatMessage({\n                          id: 'Settings.application.customization.menu-logo.carousel-hint',\n                          defaultMessage: 'Replace the logo in the main navigation',\n                        })}\n                        label={formatMessage({\n                          id: 'Settings.application.customization.carousel.menu-logo.title',\n                          defaultMessage: 'Menu logo',\n                        })}\n                        onChangeLogo={handleChangeLogo('menu')}\n                      />\n                    </Grid.Item>\n                    <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"stretch\">\n                      <LogoInput\n                        canUpdate={canUpdate}\n                        customLogo={logos.auth.custom}\n                        defaultLogo={logos.auth.default}\n                        hint={formatMessage({\n                          id: 'Settings.application.customization.auth-logo.carousel-hint',\n                          defaultMessage: 'Replace the logo in the authentication pages',\n                        })}\n                        label={formatMessage({\n                          id: 'Settings.application.customization.carousel.auth-logo.title',\n                          defaultMessage: 'Auth logo',\n                        })}\n                        onChangeLogo={handleChangeLogo('auth')}\n                      />\n                    </Grid.Item>\n                  </Grid.Root>\n                </Box>\n              )}\n            </Flex>\n          </Layouts.Content>\n        </form>\n      </Page.Main>\n    </Layouts.Root>\n  );\n};\n\nexport { ApplicationInfoPage };\n"],"names":["AdminSeatInfoCE","ApplicationInfoPage","trackUsage","useTracking","formatMessage","useIntl","logos","serverLogos","updateProjectSettings","useConfiguration","setLogos","React","useState","menu","auth","settings","useSelector","selectAdminPermissions","communityEdition","useAppInfo","state","latestStrapiReleaseTag","nodeVersion","shouldUpdateStrapi","strapiVersion","AdminSeatInfo","useEnterprise","AdminSeatInfoEE","allowedActions","canRead","canUpdate","useRBAC","handleSubmit","e","preventDefault","authLogo","custom","menuLogo","handleChangeLogo","logo","newLogo","prev","useEffect","isSaveDisabled","_jsxs","Layouts","Root","_jsx","Page","Title","id","defaultMessage","name","Main","form","onSubmit","Header","title","subtitle","primaryAction","Button","disabled","type","startIcon","Check","Content","Flex","direction","alignItems","gap","hasRadius","background","shadow","paddingTop","paddingBottom","paddingRight","paddingLeft","Typography","variant","tag","Grid","Item","col","s","textColor","Link","href","endIcon","ExternalLink","Box","dimension","DIMENSION","size","SIZE","LogoInput","customLogo","defaultLogo","default","hint","label","onChangeLogo"],"mappings":"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"}