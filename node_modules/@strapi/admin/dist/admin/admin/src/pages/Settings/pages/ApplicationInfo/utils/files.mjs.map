{"version":3,"file":"files.mjs","sources":["../../../../../../../../../admin/src/pages/Settings/pages/ApplicationInfo/utils/files.ts"],"sourcesContent":["import { ACCEPTED_FORMAT, DIMENSION, SIZE } from './constants';\n\nimport type { MessageDescriptor } from 'react-intl';\n\nconst FILE_FORMAT_ERROR_MESSAGE = {\n  id: 'Settings.application.customization.modal.upload.error-format',\n  defaultMessage: 'Wrong format uploaded (accepted formats only: jpeg, jpg, png, svg).',\n};\n\nconst FILE_SIZING_ERROR_MESSAGE = {\n  id: 'Settings.application.customization.modal.upload.error-size',\n  defaultMessage:\n    'The file uploaded is too large (max dimension: {dimension}x{dimension}, max file size: {size}KB)',\n};\n\ninterface ImageDimensions {\n  height: number;\n  width: number;\n}\n\ninterface ImageAsset extends ImageDimensions {\n  ext: string | undefined;\n  size: number;\n  name: string;\n  url: string;\n  rawFile: File;\n}\n\nconst parseFileMetadatas = async (file: File): Promise<ImageAsset> => {\n  const isFormatAuthorized = ACCEPTED_FORMAT.includes(file.type);\n\n  if (!isFormatAuthorized) {\n    throw new ParsingFileError('File format', FILE_FORMAT_ERROR_MESSAGE);\n  }\n\n  const fileDimensions = await new Promise<ImageDimensions>((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const img = new Image();\n      img.onload = () => {\n        resolve({ width: img.width, height: img.height });\n      };\n      img.src = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  });\n\n  const areDimensionsAuthorized =\n    fileDimensions.width <= DIMENSION && fileDimensions.height <= DIMENSION;\n\n  if (!areDimensionsAuthorized) {\n    throw new ParsingFileError('File sizing', FILE_SIZING_ERROR_MESSAGE);\n  }\n\n  const asset = {\n    ext: file.name.split('.').pop(),\n    size: file.size / 1000,\n    name: file.name,\n    url: URL.createObjectURL(file),\n    rawFile: file,\n    width: fileDimensions.width,\n    height: fileDimensions.height,\n  };\n\n  const isSizeAuthorized = asset.size <= SIZE;\n\n  if (!isSizeAuthorized) {\n    throw new ParsingFileError('File sizing', FILE_SIZING_ERROR_MESSAGE);\n  }\n\n  return asset;\n};\n\nclass ParsingFileError extends Error {\n  displayMessage: MessageDescriptor;\n\n  constructor(message: string, displayMessage: MessageDescriptor, options?: ErrorOptions) {\n    super(message, options);\n    this.displayMessage = displayMessage;\n  }\n}\n\nexport { parseFileMetadatas, ParsingFileError };\nexport type { ImageAsset };\n"],"names":["FILE_FORMAT_ERROR_MESSAGE","id","defaultMessage","FILE_SIZING_ERROR_MESSAGE","parseFileMetadatas","file","isFormatAuthorized","ACCEPTED_FORMAT","includes","type","ParsingFileError","fileDimensions","Promise","resolve","reader","FileReader","onload","img","Image","width","height","src","result","readAsDataURL","areDimensionsAuthorized","DIMENSION","asset","ext","name","split","pop","size","url","URL","createObjectURL","rawFile","isSizeAuthorized","SIZE","Error","constructor","message","displayMessage","options"],"mappings":";;AAIA,MAAMA,yBAA4B,GAAA;IAChCC,EAAI,EAAA,8DAAA;IACJC,cAAgB,EAAA;AAClB,CAAA;AAEA,MAAMC,yBAA4B,GAAA;IAChCF,EAAI,EAAA,4DAAA;IACJC,cACE,EAAA;AACJ,CAAA;AAeA,MAAME,qBAAqB,OAAOC,IAAAA,GAAAA;AAChC,IAAA,MAAMC,kBAAqBC,GAAAA,eAAAA,CAAgBC,QAAQ,CAACH,KAAKI,IAAI,CAAA;AAE7D,IAAA,IAAI,CAACH,kBAAoB,EAAA;QACvB,MAAM,IAAII,iBAAiB,aAAeV,EAAAA,yBAAAA,CAAAA;AAC5C;AAEA,IAAA,MAAMW,cAAiB,GAAA,MAAM,IAAIC,OAAAA,CAAyB,CAACC,OAAAA,GAAAA;AACzD,QAAA,MAAMC,SAAS,IAAIC,UAAAA,EAAAA;AACnBD,QAAAA,MAAAA,CAAOE,MAAM,GAAG,IAAA;AACd,YAAA,MAAMC,MAAM,IAAIC,KAAAA,EAAAA;AAChBD,YAAAA,GAAAA,CAAID,MAAM,GAAG,IAAA;gBACXH,OAAQ,CAAA;AAAEM,oBAAAA,KAAAA,EAAOF,IAAIE,KAAK;AAAEC,oBAAAA,MAAAA,EAAQH,IAAIG;AAAO,iBAAA,CAAA;AACjD,aAAA;YACAH,GAAII,CAAAA,GAAG,GAAGP,MAAAA,CAAOQ,MAAM;AACzB,SAAA;AACAR,QAAAA,MAAAA,CAAOS,aAAa,CAAClB,IAAAA,CAAAA;AACvB,KAAA,CAAA;AAEA,IAAA,MAAMmB,0BACJb,cAAeQ,CAAAA,KAAK,IAAIM,SAAad,IAAAA,cAAAA,CAAeS,MAAM,IAAIK,SAAAA;AAEhE,IAAA,IAAI,CAACD,uBAAyB,EAAA;QAC5B,MAAM,IAAId,iBAAiB,aAAeP,EAAAA,yBAAAA,CAAAA;AAC5C;AAEA,IAAA,MAAMuB,KAAQ,GAAA;AACZC,QAAAA,GAAAA,EAAKtB,KAAKuB,IAAI,CAACC,KAAK,CAAC,KAAKC,GAAG,EAAA;QAC7BC,IAAM1B,EAAAA,IAAAA,CAAK0B,IAAI,GAAG,IAAA;AAClBH,QAAAA,IAAAA,EAAMvB,KAAKuB,IAAI;QACfI,GAAKC,EAAAA,GAAAA,CAAIC,eAAe,CAAC7B,IAAAA,CAAAA;QACzB8B,OAAS9B,EAAAA,IAAAA;AACTc,QAAAA,KAAAA,EAAOR,eAAeQ,KAAK;AAC3BC,QAAAA,MAAAA,EAAQT,eAAeS;AACzB,KAAA;IAEA,MAAMgB,gBAAAA,GAAmBV,KAAMK,CAAAA,IAAI,IAAIM,IAAAA;AAEvC,IAAA,IAAI,CAACD,gBAAkB,EAAA;QACrB,MAAM,IAAI1B,iBAAiB,aAAeP,EAAAA,yBAAAA,CAAAA;AAC5C;IAEA,OAAOuB,KAAAA;AACT;AAEA,MAAMhB,gBAAyB4B,SAAAA,KAAAA,CAAAA;AAG7BC,IAAAA,WAAAA,CAAYC,OAAe,EAAEC,cAAiC,EAAEC,OAAsB,CAAE;AACtF,QAAA,KAAK,CAACF,OAASE,EAAAA,OAAAA,CAAAA;QACf,IAAI,CAACD,cAAc,GAAGA,cAAAA;AACxB;AACF;;;;"}