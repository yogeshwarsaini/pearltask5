{"version":3,"file":"forms.js","sources":["../../../../../../../../../admin/src/pages/Settings/pages/Roles/utils/forms.ts"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\n\nimport { findMatchingPermission } from './permissions';\n\nimport type { GenericLayout } from './layouts';\nimport type {\n  Condition,\n  SettingPermission,\n  ContentPermission,\n  Subject,\n  SubjectProperty,\n} from '../../../../../../../shared/contracts/permissions';\nimport type { Permission } from '../../../../../../../shared/contracts/shared';\n\ntype ConditionForm = Record<string, boolean>;\n\n/**\n * Creates the default condition form: { [conditionId]: false }\n */\nconst createDefaultConditionsForm = (\n  conditions: Condition[],\n  initialConditions: Permission['conditions'] = []\n): ConditionForm =>\n  conditions.reduce<ConditionForm>((acc, current) => {\n    acc[current.id] = initialConditions.indexOf(current.id) !== -1;\n\n    return acc;\n  }, {});\n\ninterface SubCategoryForm {\n  properties: {\n    enabled: boolean;\n  };\n  conditions: ConditionForm;\n}\n\ntype ChildrenForm = Record<\n  string,\n  SubCategoryForm | (Omit<SubCategoryForm, 'properties'> & PropertyForm)\n>;\n\ntype Form = Record<string, ChildrenForm>;\n\nconst createDefaultForm = <TLayout extends Omit<SettingPermission, 'category'>>(\n  layout: GenericLayout<TLayout>[],\n  conditions: Condition[],\n  initialPermissions: Permission[] = []\n) => {\n  return layout.reduce<Record<string, Form>>((acc, { categoryId, childrenForm }) => {\n    const childrenDefaultForm = childrenForm.reduce<Form>((acc, current) => {\n      acc[current.subCategoryId] = current.actions.reduce<ChildrenForm>((acc, current) => {\n        const foundMatchingPermission = findMatchingPermission(\n          initialPermissions,\n          current.action,\n          null\n        );\n\n        acc[current.action] = {\n          properties: {\n            enabled: foundMatchingPermission !== undefined,\n          },\n          conditions: createDefaultConditionsForm(\n            conditions,\n            foundMatchingPermission?.conditions ?? []\n          ),\n        };\n\n        return acc;\n      }, {});\n\n      return acc;\n    }, {});\n\n    acc[categoryId] = childrenDefaultForm;\n\n    return acc;\n  }, {});\n};\n\ninterface PropertyChildForm extends Record<string, boolean | PropertyChildForm> {}\n\ninterface PropertyForm {\n  properties: PropertyChildForm;\n}\n\n/**\n * Creates the default form for all the properties found in a content type's layout\n */\nconst createDefaultPropertiesForm = (\n  properties: string[],\n  subject: Subject,\n  matchingPermission?: Permission\n): PropertyForm => {\n  const recursivelyCreatePropertyForm = (\n    { children = [] }: SubjectProperty,\n    propertyValues: string[],\n    prefix = ''\n  ): PropertyChildForm => {\n    return children.reduce<PropertyChildForm>((acc, current) => {\n      if (current.children) {\n        return {\n          ...acc,\n          [current.value]: recursivelyCreatePropertyForm(\n            current,\n            propertyValues,\n            `${prefix}${current.value}.`\n          ),\n        };\n      }\n\n      const hasProperty = propertyValues.indexOf(`${prefix}${current.value}`) !== -1;\n\n      acc[current.value] = hasProperty;\n\n      return acc;\n    }, {});\n  };\n\n  return properties.reduce<PropertyForm>(\n    (acc, currentPropertyName) => {\n      const foundProperty = subject.properties.find(({ value }) => value === currentPropertyName);\n\n      if (foundProperty) {\n        const matchingPermissionPropertyValues =\n          matchingPermission?.properties[foundProperty.value] ?? [];\n\n        const propertyForm = recursivelyCreatePropertyForm(\n          foundProperty,\n          matchingPermissionPropertyValues\n        );\n\n        acc.properties[currentPropertyName] = propertyForm;\n      }\n\n      return acc;\n    },\n    { properties: {} }\n  );\n};\n\n/**\n * Creates the default for for a content type\n */\nconst createDefaultCTForm = (\n  { subjects, actions = [] }: ContentPermission,\n  conditions: Condition[],\n  initialPermissions: Permission[] = []\n) => {\n  return actions.reduce<Form>((defaultForm, action) => {\n    type SubjectLayouts = Record<string, Subject>;\n\n    const subjectLayouts = action.subjects.reduce<SubjectLayouts>((acc, current) => {\n      const foundLayout = subjects.find(({ uid }) => uid === current) || null;\n\n      if (foundLayout) {\n        acc[current] = foundLayout;\n      }\n\n      return acc;\n    }, {});\n\n    // This can happen when an action is not related to a content type\n    // for instance the D&P permission is applied only with the cts that\n    // have the D&P features enabled\n    if (isEmpty(subjectLayouts)) {\n      return defaultForm;\n    }\n\n    // The object has the following shape: { [ctUID]: { [actionId]: { [property]: { enabled: false } } } }\n    const contentTypesActions = Object.keys(subjectLayouts).reduce<Form>((acc, currentCTUID) => {\n      const { actionId, applyToProperties } = action;\n      const currentSubjectLayout = subjectLayouts[currentCTUID];\n      const properties = currentSubjectLayout.properties.map(({ value }) => value);\n      const doesNothaveProperty = properties.every(\n        (property) => (applyToProperties || []).indexOf(property) === -1\n      );\n\n      const matchingPermission = findMatchingPermission(initialPermissions, actionId, currentCTUID);\n      const conditionsForm = createDefaultConditionsForm(\n        conditions,\n        matchingPermission?.conditions ?? []\n      );\n\n      if (!acc[currentCTUID]) {\n        acc[currentCTUID] = {};\n      }\n\n      if (isEmpty(applyToProperties) || doesNothaveProperty) {\n        acc[currentCTUID][actionId] = {\n          properties: {\n            enabled: matchingPermission !== undefined,\n          },\n          conditions: conditionsForm,\n        };\n\n        return acc;\n      }\n\n      const propertiesForm = createDefaultPropertiesForm(\n        applyToProperties,\n        subjectLayouts[currentCTUID],\n        matchingPermission\n      );\n\n      acc[currentCTUID][actionId] = { ...propertiesForm, conditions: conditionsForm };\n\n      return acc;\n    }, {});\n\n    return merge(defaultForm, contentTypesActions);\n  }, {});\n};\n\nexport { createDefaultConditionsForm, createDefaultForm, createDefaultCTForm };\nexport type { ConditionForm, Form, PropertyForm, SubCategoryForm, ChildrenForm, PropertyChildForm };\n"],"names":["createDefaultConditionsForm","conditions","initialConditions","reduce","acc","current","id","indexOf","createDefaultForm","layout","initialPermissions","categoryId","childrenForm","childrenDefaultForm","subCategoryId","actions","foundMatchingPermission","findMatchingPermission","action","properties","enabled","undefined","createDefaultPropertiesForm","subject","matchingPermission","recursivelyCreatePropertyForm","children","propertyValues","prefix","value","hasProperty","currentPropertyName","foundProperty","find","matchingPermissionPropertyValues","propertyForm","createDefaultCTForm","subjects","defaultForm","subjectLayouts","foundLayout","uid","isEmpty","contentTypesActions","Object","keys","currentCTUID","actionId","applyToProperties","currentSubjectLayout","map","doesNothaveProperty","every","property","conditionsForm","propertiesForm","merge"],"mappings":"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"}