{"version":3,"file":"Layout.js","sources":["../../../../../../admin/src/pages/Settings/Layout.tsx"],"sourcesContent":["import { useIntl } from 'react-intl';\nimport { Navigate, Outlet, useMatch } from 'react-router-dom';\n\nimport { Layouts } from '../../components/Layouts/Layout';\nimport { Page } from '../../components/PageHelpers';\nimport { useSettingsMenu } from '../../hooks/useSettingsMenu';\n\nimport { SettingsNav } from './components/SettingsNav';\n\nconst Layout = () => {\n  /**\n   * This ensures we're capturing the settingId from the URL\n   * but also lets any nesting after that pass.\n   */\n  const match = useMatch('/settings/:settingId/*');\n  const { formatMessage } = useIntl();\n  const { isLoading, menu } = useSettingsMenu();\n\n  // Since the useSettingsMenu hook can make API calls in order to check the links permissions\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (!match?.params.settingId) {\n    return <Navigate to=\"application-infos\" />;\n  }\n\n  return (\n    <Layouts.Root sideNav={<SettingsNav menu={menu} />}>\n      <Page.Title>\n        {formatMessage({\n          id: 'global.settings',\n          defaultMessage: 'Settings',\n        })}\n      </Page.Title>\n      <Outlet />\n    </Layouts.Root>\n  );\n};\n\nexport { Layout };\n"],"names":["Layout","match","useMatch","formatMessage","useIntl","isLoading","menu","useSettingsMenu","_jsx","Page","Loading","params","settingId","Navigate","to","_jsxs","Layouts","Root","sideNav","SettingsNav","Title","id","defaultMessage","Outlet"],"mappings":";;;;;;;;;;AASA,MAAMA,MAAS,GAAA,IAAA;AACb;;;MAIA,MAAMC,QAAQC,uBAAS,CAAA,wBAAA,CAAA;IACvB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAC1B,IAAA,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAE,GAAGC,+BAAAA,EAAAA;;;AAI5B,IAAA,IAAIF,SAAW,EAAA;QACb,qBAAOG,cAAA,CAACC,iBAAKC,OAAO,EAAA,EAAA,CAAA;AACtB;IAEA,IAAI,CAACT,KAAOU,EAAAA,MAAAA,CAAOC,SAAW,EAAA;AAC5B,QAAA,qBAAOJ,cAACK,CAAAA,uBAAAA,EAAAA;YAASC,EAAG,EAAA;;AACtB;IAEA,qBACEC,eAAA,CAACC,iBAAQC,IAAI,EAAA;AAACC,QAAAA,OAAAA,gBAASV,cAACW,CAAAA,uBAAAA,EAAAA;YAAYb,IAAMA,EAAAA;;;AACxC,0BAAAE,cAAA,CAACC,iBAAKW,KAAK,EAAA;0BACRjB,aAAc,CAAA;oBACbkB,EAAI,EAAA,iBAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA;;0BAEFd,cAACe,CAAAA,qBAAAA,EAAAA,EAAAA;;;AAGP;;;;"}