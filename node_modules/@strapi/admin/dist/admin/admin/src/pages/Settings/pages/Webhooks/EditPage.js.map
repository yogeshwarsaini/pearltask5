{"version":3,"file":"EditPage.js","sources":["../../../../../../../../admin/src/pages/Settings/pages/Webhooks/EditPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Main } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { useNavigate, useMatch } from 'react-router-dom';\n\nimport { CreateWebhook, TriggerWebhook } from '../../../../../../shared/contracts/webhooks';\nimport { Page } from '../../../../components/PageHelpers';\nimport { useTypedSelector } from '../../../../core/store/hooks';\nimport { useNotification } from '../../../../features/Notifications';\nimport { useAPIErrorHandler } from '../../../../hooks/useAPIErrorHandler';\nimport { selectAdminPermissions } from '../../../../selectors';\nimport { isBaseQueryError } from '../../../../utils/baseQuery';\n\nimport { WebhookForm, WebhookFormProps, WebhookFormValues } from './components/WebhookForm';\nimport { useWebhooks } from './hooks/useWebhooks';\n\nimport type { Modules } from '@strapi/types';\n\n/* -------------------------------------------------------------------------------------------------\n * EditView\n * -----------------------------------------------------------------------------------------------*/\n\nconst cleanData = (\n  data: WebhookFormValues\n): Omit<CreateWebhook.Request['body'], 'id' | 'isEnabled'> => ({\n  ...data,\n  headers: data.headers.reduce<Modules.WebhookStore.Webhook['headers']>((acc, { key, value }) => {\n    if (key !== '') {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {}),\n});\n\nconst EditPage = () => {\n  const { formatMessage } = useIntl();\n  const match = useMatch('/settings/webhooks/:id');\n  const id = match?.params.id;\n  const isCreating = id === 'create';\n\n  const navigate = useNavigate();\n  const { toggleNotification } = useNotification();\n  const {\n    _unstableFormatAPIError: formatAPIError,\n    _unstableFormatValidationErrors: formatValidationErrors,\n  } = useAPIErrorHandler();\n\n  /**\n   * Prevents the notifications from showing up twice because the function identity\n   * coming from the helper plugin is not stable\n   */\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const stableFormatAPIError = React.useCallback(formatAPIError, []);\n  const [isTriggering, setIsTriggering] = React.useState(false);\n  const [triggerResponse, setTriggerResponse] = React.useState<TriggerWebhook.Response['data']>();\n\n  const { isLoading, webhooks, error, createWebhook, updateWebhook, triggerWebhook } = useWebhooks(\n    { id: id! },\n    {\n      skip: isCreating,\n    }\n  );\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: stableFormatAPIError(error),\n      });\n    }\n  }, [error, toggleNotification, stableFormatAPIError]);\n\n  const handleTriggerWebhook = async () => {\n    try {\n      setIsTriggering(true);\n\n      const res = await triggerWebhook(id!);\n\n      if ('error' in res) {\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(res.error),\n        });\n\n        return;\n      }\n\n      setTriggerResponse(res.data);\n    } catch {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({\n          id: 'notification.error',\n          defaultMessage: 'An error occurred',\n        }),\n      });\n    } finally {\n      setIsTriggering(false);\n    }\n  };\n\n  const handleSubmit: WebhookFormProps['handleSubmit'] = async (data, helpers) => {\n    try {\n      if (isCreating) {\n        const res = await createWebhook(cleanData(data));\n\n        if ('error' in res) {\n          if (isBaseQueryError(res.error) && res.error.name === 'ValidationError') {\n            helpers.setErrors(formatValidationErrors(res.error));\n          } else {\n            toggleNotification({\n              type: 'danger',\n              message: formatAPIError(res.error),\n            });\n          }\n\n          return;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'Settings.webhooks.created' }),\n        });\n\n        navigate(`../webhooks/${res.data.id}`, { replace: true });\n      } else {\n        const res = await updateWebhook({ id: id!, ...cleanData(data) });\n\n        if ('error' in res) {\n          if (isBaseQueryError(res.error) && res.error.name === 'ValidationError') {\n            helpers.setErrors(formatValidationErrors(res.error));\n          } else {\n            toggleNotification({\n              type: 'danger',\n              message: formatAPIError(res.error),\n            });\n          }\n\n          return;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'notification.form.success.fields' }),\n        });\n      }\n    } catch {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({\n          id: 'notification.error',\n          defaultMessage: 'An error occurred',\n        }),\n      });\n    }\n  };\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  const [webhook] = webhooks ?? [];\n\n  return (\n    <Main>\n      <Page.Title>\n        {formatMessage(\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\n          {\n            name: 'Webhooks',\n          }\n        )}\n      </Page.Title>\n      <WebhookForm\n        data={webhook}\n        handleSubmit={handleSubmit}\n        triggerWebhook={handleTriggerWebhook}\n        isCreating={isCreating}\n        isTriggering={isTriggering}\n        triggerResponse={triggerResponse}\n      />\n    </Main>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ProtectedEditView\n * -----------------------------------------------------------------------------------------------*/\n\nconst ProtectedEditPage = () => {\n  const permissions = useTypedSelector(selectAdminPermissions);\n\n  return (\n    <Page.Protect permissions={permissions.settings?.webhooks.update}>\n      <EditPage />\n    </Page.Protect>\n  );\n};\n\nexport { ProtectedEditPage, EditPage };\n"],"names":["cleanData","data","headers","reduce","acc","key","value","EditPage","formatMessage","useIntl","match","useMatch","id","params","isCreating","navigate","useNavigate","toggleNotification","useNotification","_unstableFormatAPIError","formatAPIError","_unstableFormatValidationErrors","formatValidationErrors","useAPIErrorHandler","stableFormatAPIError","React","useCallback","isTriggering","setIsTriggering","useState","triggerResponse","setTriggerResponse","isLoading","webhooks","error","createWebhook","updateWebhook","triggerWebhook","useWebhooks","skip","useEffect","type","message","handleTriggerWebhook","res","defaultMessage","handleSubmit","helpers","isBaseQueryError","name","setErrors","replace","_jsx","Page","Loading","webhook","_jsxs","Main","Title","WebhookForm","ProtectedEditPage","permissions","useTypedSelector","selectAdminPermissions","Protect","settings","update"],"mappings":"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"}