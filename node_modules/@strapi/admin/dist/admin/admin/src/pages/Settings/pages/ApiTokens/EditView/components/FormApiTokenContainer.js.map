{"version":3,"file":"FormApiTokenContainer.js","sources":["../../../../../../../../../../admin/src/pages/Settings/pages/ApiTokens/EditView/components/FormApiTokenContainer.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Flex, Grid, Typography } from '@strapi/design-system';\nimport { FormikErrors } from 'formik';\nimport { useIntl } from 'react-intl';\n\nimport { LifeSpanInput } from '../../../../components/Tokens/LifeSpanInput';\nimport { TokenDescription } from '../../../../components/Tokens/TokenDescription';\nimport { TokenName } from '../../../../components/Tokens/TokenName';\nimport { TokenTypeSelect } from '../../../../components/Tokens/TokenTypeSelect';\n\nimport type { ApiToken } from '../../../../../../../../shared/contracts/api-token';\n\ninterface FormApiTokenContainerProps {\n  errors?: FormikErrors<Pick<ApiToken, 'name' | 'description' | 'lifespan' | 'type'>>;\n  onChange: ({ target: { name, value } }: { target: { name: string; value: string } }) => void;\n  canEditInputs: boolean;\n  values?: Partial<Pick<ApiToken, 'name' | 'description' | 'lifespan' | 'type'>>;\n  isCreating: boolean;\n  apiToken?: null | Partial<ApiToken>;\n  onDispatch: React.Dispatch<any>;\n  setHasChangedPermissions: (hasChanged: boolean) => void;\n}\n\nexport const FormApiTokenContainer = ({\n  errors = {},\n  onChange,\n  canEditInputs,\n  isCreating,\n  values = {},\n  apiToken = {},\n  onDispatch,\n  setHasChangedPermissions,\n}: FormApiTokenContainerProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleChangeSelectApiTokenType = ({ target: { value } }: { target: { value: string } }) => {\n    setHasChangedPermissions(false);\n\n    if (value === 'full-access') {\n      onDispatch({\n        type: 'SELECT_ALL_ACTIONS',\n      });\n    }\n    if (value === 'read-only') {\n      onDispatch({\n        type: 'ON_CHANGE_READ_ONLY',\n      });\n    }\n  };\n\n  const typeOptions = [\n    {\n      value: 'read-only',\n      label: {\n        id: 'Settings.tokens.types.read-only',\n        defaultMessage: 'Read-only',\n      },\n    },\n    {\n      value: 'full-access',\n      label: {\n        id: 'Settings.tokens.types.full-access',\n        defaultMessage: 'Full access',\n      },\n    },\n    {\n      value: 'custom',\n      label: {\n        id: 'Settings.tokens.types.custom',\n        defaultMessage: 'Custom',\n      },\n    },\n  ];\n\n  return (\n    <Box\n      background=\"neutral0\"\n      hasRadius\n      shadow=\"filterShadow\"\n      paddingTop={6}\n      paddingBottom={6}\n      paddingLeft={7}\n      paddingRight={7}\n    >\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={4}>\n        <Typography variant=\"delta\" tag=\"h2\">\n          {formatMessage({\n            id: 'global.details',\n            defaultMessage: 'Details',\n          })}\n        </Typography>\n        <Grid.Root gap={5}>\n          <Grid.Item key=\"name\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\n            <TokenName\n              error={errors['name']}\n              value={values['name']}\n              canEditInputs={canEditInputs}\n              onChange={onChange}\n            />\n          </Grid.Item>\n          <Grid.Item key=\"description\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\n            <TokenDescription\n              error={errors['description']}\n              value={values['description']}\n              canEditInputs={canEditInputs}\n              onChange={onChange}\n            />\n          </Grid.Item>\n          <Grid.Item key=\"lifespan\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\n            <LifeSpanInput\n              isCreating={isCreating}\n              error={errors['lifespan']}\n              value={values['lifespan']}\n              onChange={onChange}\n              token={apiToken}\n            />\n          </Grid.Item>\n\n          <Grid.Item key=\"type\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\n            <TokenTypeSelect\n              value={values['type']}\n              error={errors['type']}\n              label={{\n                id: 'Settings.tokens.form.type',\n                defaultMessage: 'Token type',\n              }}\n              onChange={(value) => {\n                // @ts-expect-error – DS Select supports numbers & strings, will be removed in V2\n                handleChangeSelectApiTokenType({ target: { value } });\n\n                // @ts-expect-error – DS Select supports numbers & strings, will be removed in V2\n                onChange({ target: { name: 'type', value } });\n              }}\n              options={typeOptions}\n              canEditInputs={canEditInputs}\n            />\n          </Grid.Item>\n        </Grid.Root>\n      </Flex>\n    </Box>\n  );\n};\n"],"names":["FormApiTokenContainer","errors","onChange","canEditInputs","isCreating","values","apiToken","onDispatch","setHasChangedPermissions","formatMessage","useIntl","handleChangeSelectApiTokenType","target","value","type","typeOptions","label","id","defaultMessage","_jsx","Box","background","hasRadius","shadow","paddingTop","paddingBottom","paddingLeft","paddingRight","_jsxs","Flex","direction","alignItems","gap","Typography","variant","tag","Grid","Root","Item","col","xs","TokenName","error","TokenDescription","LifeSpanInput","token","TokenTypeSelect","name","options"],"mappings":"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"}