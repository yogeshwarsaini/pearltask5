{"version":3,"file":"Login.js","sources":["../../../../../../../admin/src/pages/Auth/components/Login.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Button, Flex, Main, Typography, Link } from '@strapi/design-system';\nimport camelCase from 'lodash/camelCase';\nimport { useIntl } from 'react-intl';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { Form } from '../../../components/Form';\nimport { InputRenderer } from '../../../components/FormInputs/Renderer';\nimport { Logo } from '../../../components/UnauthenticatedLogo';\nimport { useAuth } from '../../../features/Auth';\nimport {\n  UnauthenticatedLayout,\n  Column,\n  LayoutContent,\n} from '../../../layouts/UnauthenticatedLayout';\nimport { translatedErrors } from '../../../utils/translatedErrors';\n\nimport type { Login } from '../../../../../shared/contracts/authentication';\n\ninterface LoginProps {\n  children?: React.ReactNode;\n}\n\nconst LOGIN_SCHEMA = yup.object().shape({\n  email: yup\n    .string()\n    .nullable()\n    .email({\n      id: translatedErrors.email.id,\n      defaultMessage: 'Not a valid email',\n    })\n    .required(translatedErrors.required),\n  password: yup.string().required(translatedErrors.required).nullable(),\n  rememberMe: yup.bool().nullable(),\n});\n\nconst Login = ({ children }: LoginProps) => {\n  const [apiError, setApiError] = React.useState<string>();\n  const { formatMessage } = useIntl();\n  const { search: searchString } = useLocation();\n  const query = React.useMemo(() => new URLSearchParams(searchString), [searchString]);\n  const navigate = useNavigate();\n\n  const { login } = useAuth('Login', (auth) => auth);\n\n  const handleLogin = async (body: Parameters<typeof login>[0]) => {\n    setApiError(undefined);\n\n    const res = await login(body);\n\n    if ('error' in res) {\n      const message = res.error.message ?? 'Something went wrong';\n\n      if (camelCase(message).toLowerCase() === 'usernotactive') {\n        navigate('/auth/oops');\n        return;\n      }\n\n      setApiError(message);\n    } else {\n      const redirectTo = query.get('redirectTo');\n      const redirectUrl = redirectTo ? decodeURIComponent(redirectTo) : '/';\n\n      navigate(redirectUrl);\n    }\n  };\n\n  return (\n    <UnauthenticatedLayout>\n      <Main>\n        <LayoutContent>\n          <Column>\n            <Logo />\n            <Box paddingTop={6} paddingBottom={1}>\n              <Typography variant=\"alpha\" tag=\"h1\">\n                {formatMessage({\n                  id: 'Auth.form.welcome.title',\n                  defaultMessage: 'Welcome!',\n                })}\n              </Typography>\n            </Box>\n            <Box paddingBottom={7}>\n              <Typography variant=\"epsilon\" textColor=\"neutral600\">\n                {formatMessage({\n                  id: 'Auth.form.welcome.subtitle',\n                  defaultMessage: 'Log in to your Strapi account',\n                })}\n              </Typography>\n            </Box>\n            {apiError ? (\n              <Typography id=\"global-form-error\" role=\"alert\" tabIndex={-1} textColor=\"danger600\">\n                {apiError}\n              </Typography>\n            ) : null}\n          </Column>\n          <Form\n            method=\"PUT\"\n            initialValues={{\n              email: '',\n              password: '',\n              rememberMe: false,\n            }}\n            onSubmit={(values) => {\n              handleLogin(values);\n            }}\n            validationSchema={LOGIN_SCHEMA}\n          >\n            <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n              {[\n                {\n                  label: formatMessage({ id: 'Auth.form.email.label', defaultMessage: 'Email' }),\n                  name: 'email',\n                  placeholder: formatMessage({\n                    id: 'Auth.form.email.placeholder',\n                    defaultMessage: 'kai@doe.com',\n                  }),\n                  required: true,\n                  type: 'string' as const,\n                },\n                {\n                  label: formatMessage({\n                    id: 'global.password',\n                    defaultMessage: 'Password',\n                  }),\n                  name: 'password',\n                  required: true,\n                  type: 'password' as const,\n                },\n                {\n                  label: formatMessage({\n                    id: 'Auth.form.rememberMe.label',\n                    defaultMessage: 'Remember me',\n                  }),\n                  name: 'rememberMe',\n                  type: 'checkbox' as const,\n                },\n              ].map((field) => (\n                <InputRenderer key={field.name} {...field} />\n              ))}\n              <Button fullWidth type=\"submit\">\n                {formatMessage({ id: 'Auth.form.button.login', defaultMessage: 'Login' })}\n              </Button>\n            </Flex>\n          </Form>\n          {children}\n        </LayoutContent>\n        <Flex justifyContent=\"center\">\n          <Box paddingTop={4}>\n            <Link isExternal={false} tag={NavLink} to=\"/auth/forgot-password\">\n              {formatMessage({\n                id: 'Auth.link.forgot-password',\n                defaultMessage: 'Forgot your password?',\n              })}\n            </Link>\n          </Box>\n        </Flex>\n      </Main>\n    </UnauthenticatedLayout>\n  );\n};\n\nexport { Login };\nexport type { LoginProps };\n"],"names":["LOGIN_SCHEMA","yup","object","shape","email","string","nullable","id","translatedErrors","defaultMessage","required","password","rememberMe","bool","Login","children","apiError","setApiError","React","useState","formatMessage","useIntl","search","searchString","useLocation","query","useMemo","URLSearchParams","navigate","useNavigate","login","useAuth","auth","handleLogin","body","undefined","res","message","error","camelCase","toLowerCase","redirectTo","get","redirectUrl","decodeURIComponent","_jsx","UnauthenticatedLayout","_jsxs","Main","LayoutContent","Column","Logo","Box","paddingTop","paddingBottom","Typography","variant","tag","textColor","role","tabIndex","Form","method","initialValues","onSubmit","values","validationSchema","Flex","direction","alignItems","gap","label","name","placeholder","type","map","field","InputRenderer","Button","fullWidth","justifyContent","Link","isExternal","NavLink","to"],"mappings":"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"}