{"version":3,"file":"NewUserForm.mjs","sources":["../../../../../../../../../admin/src/pages/Settings/pages/Users/components/NewUserForm.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Modal,\n  Typography,\n  Breadcrumbs,\n  Crumb,\n} from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport * as yup from 'yup';\n\nimport { Form, type FormHelpers } from '../../../../../components/Form';\nimport { InputRenderer } from '../../../../../components/FormInputs/Renderer';\nimport { useNotification } from '../../../../../features/Notifications';\nimport { useAPIErrorHandler } from '../../../../../hooks/useAPIErrorHandler';\nimport { useEnterprise } from '../../../../../hooks/useEnterprise';\nimport { useCreateUserMutation } from '../../../../../services/users';\nimport { FormLayoutInputProps } from '../../../../../types/forms';\nimport { isBaseQueryError } from '../../../../../utils/baseQuery';\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\n\nimport { MagicLinkCE } from './MagicLinkCE';\nimport { SelectRoles } from './SelectRoles';\n\nimport type { Data } from '@strapi/types';\n\ninterface ModalFormProps {\n  onToggle: () => void;\n}\n\ntype FormLayout = FormLayoutInputProps[][];\n\nconst ModalForm = ({ onToggle }: ModalFormProps) => {\n  const [currentStep, setStep] = React.useState<keyof typeof STEPPER>('create');\n  const [registrationToken, setRegistrationToken] = React.useState('');\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const {\n    _unstableFormatAPIError: formatAPIError,\n    _unstableFormatValidationErrors: formatValidationErrors,\n  } = useAPIErrorHandler();\n  const roleLayout = useEnterprise<FormLayout, FormLayout, FormLayout>(\n    ROLE_LAYOUT,\n    async () =>\n      (\n        await import(\n          '../../../../../../../ee/admin/src/pages/SettingsPage/pages/Users/components/ModalForm'\n        )\n      ).ROLE_LAYOUT,\n    {\n      combine(ceRoles, eeRoles) {\n        return [...ceRoles, ...eeRoles];\n      },\n\n      defaultValue: [],\n    }\n  );\n\n  const initialValues = useEnterprise<InitialData>(\n    FORM_INITIAL_VALUES,\n    async () =>\n      (\n        await import(\n          '../../../../../../../ee/admin/src/pages/SettingsPage/pages/Users/components/ModalForm'\n        )\n      ).FORM_INITIAL_VALUES,\n    {\n      combine(ceValues, eeValues) {\n        return {\n          ...ceValues,\n          ...eeValues,\n        };\n      },\n\n      defaultValue: FORM_INITIAL_VALUES,\n    }\n  );\n  const MagicLink = useEnterprise(\n    MagicLinkCE,\n    async () =>\n      (\n        await import(\n          '../../../../../../../ee/admin/src/pages/SettingsPage/pages/Users/components/MagicLinkEE'\n        )\n      ).MagicLinkEE\n  );\n\n  const [createUser] = useCreateUserMutation();\n\n  const headerTitle = formatMessage({\n    id: 'Settings.permissions.users.create',\n    defaultMessage: 'Invite new user',\n  });\n\n  const handleSubmit = async (body: InitialData, { setErrors }: FormHelpers<InitialData>) => {\n    const res = await createUser({\n      ...body,\n      roles: body.roles ?? [],\n    });\n\n    if ('data' in res) {\n      // NOTE: when enabling SSO, the user doesn't have to register and the token is undefined\n      if (res.data.registrationToken) {\n        setRegistrationToken(res.data.registrationToken);\n      }\n\n      goNext();\n    } else {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(res.error),\n      });\n\n      if (isBaseQueryError(res.error) && res.error.name === 'ValidationError') {\n        setErrors(formatValidationErrors(res.error));\n      }\n    }\n  };\n\n  const goNext = () => {\n    if (next) {\n      setStep(next);\n    } else {\n      onToggle();\n    }\n  };\n\n  const { buttonSubmitLabel, isDisabled, next } = STEPPER[currentStep];\n\n  // block rendering until the EE component is fully loaded\n  if (!MagicLink) {\n    return null;\n  }\n\n  return (\n    <Modal.Root defaultOpen onOpenChange={onToggle}>\n      <Modal.Content>\n        <Modal.Header>\n          {/**\n           * TODO: this is not semantically correct and should be amended.\n           */}\n          <Breadcrumbs label={headerTitle}>\n            <Crumb isCurrent>{headerTitle}</Crumb>\n          </Breadcrumbs>\n        </Modal.Header>\n        <Form\n          method={currentStep === 'create' ? 'POST' : 'PUT'}\n          initialValues={initialValues ?? {}}\n          onSubmit={handleSubmit}\n          validationSchema={FORM_SCHEMA}\n        >\n          {({ isSubmitting }) => {\n            return (\n              <>\n                <Modal.Body>\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n                    {currentStep !== 'create' && (\n                      <MagicLink registrationToken={registrationToken} />\n                    )}\n                    <Box>\n                      <Typography variant=\"beta\" tag=\"h2\">\n                        {formatMessage({\n                          id: 'app.components.Users.ModalCreateBody.block-title.details',\n                          defaultMessage: 'User details',\n                        })}\n                      </Typography>\n                      <Box paddingTop={4}>\n                        <Flex direction=\"column\" alignItems=\"stretch\" gap={1}>\n                          <Grid.Root gap={5}>\n                            {FORM_LAYOUT.map((row) => {\n                              return row.map(({ size, ...field }) => {\n                                return (\n                                  <Grid.Item\n                                    key={field.name}\n                                    col={size}\n                                    direction=\"column\"\n                                    alignItems=\"stretch\"\n                                  >\n                                    <InputRenderer\n                                      {...field}\n                                      disabled={isDisabled}\n                                      label={formatMessage(field.label)}\n                                      placeholder={formatMessage(field.placeholder)}\n                                    />\n                                  </Grid.Item>\n                                );\n                              });\n                            })}\n                          </Grid.Root>\n                        </Flex>\n                      </Box>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"beta\" tag=\"h2\">\n                        {formatMessage({\n                          id: 'global.roles',\n                          defaultMessage: \"User's role\",\n                        })}\n                      </Typography>\n                      <Box paddingTop={4}>\n                        <Grid.Root gap={5}>\n                          <Grid.Item col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\n                            <SelectRoles disabled={isDisabled} />\n                          </Grid.Item>\n                          {roleLayout.map((row) => {\n                            return row.map(({ size, ...field }) => {\n                              return (\n                                <Grid.Item\n                                  key={field.name}\n                                  col={size}\n                                  direction=\"column\"\n                                  alignItems=\"stretch\"\n                                >\n                                  <InputRenderer\n                                    {...field}\n                                    disabled={isDisabled}\n                                    label={formatMessage(field.label)}\n                                    placeholder={\n                                      field.placeholder\n                                        ? formatMessage(field.placeholder)\n                                        : undefined\n                                    }\n                                    hint={field.hint ? formatMessage(field.hint) : undefined}\n                                  />\n                                </Grid.Item>\n                              );\n                            });\n                          })}\n                        </Grid.Root>\n                      </Box>\n                    </Box>\n                  </Flex>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"tertiary\" onClick={onToggle} type=\"button\">\n                    {formatMessage({\n                      id: 'app.components.Button.cancel',\n                      defaultMessage: 'Cancel',\n                    })}\n                  </Button>\n                  {currentStep === 'create' ? (\n                    <Button type=\"submit\" loading={isSubmitting}>\n                      {formatMessage(buttonSubmitLabel)}\n                    </Button>\n                  ) : (\n                    <Button type=\"button\" loading={isSubmitting} onClick={onToggle}>\n                      {formatMessage(buttonSubmitLabel)}\n                    </Button>\n                  )}\n                </Modal.Footer>\n              </>\n            );\n          }}\n        </Form>\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n\ninterface InitialData {\n  firstname?: string;\n  lastname?: string;\n  email?: string;\n  roles?: Data.ID[];\n  useSSORegistration?: boolean;\n}\n\nconst FORM_INITIAL_VALUES = {\n  firstname: '',\n  lastname: '',\n  email: '',\n  roles: [],\n};\n\nconst ROLE_LAYOUT: FormLayout = [];\n\nconst FORM_LAYOUT = [\n  [\n    {\n      label: {\n        id: 'Auth.form.firstname.label',\n        defaultMessage: 'First name',\n      },\n      name: 'firstname',\n      placeholder: {\n        id: 'Auth.form.firstname.placeholder',\n        defaultMessage: 'e.g. Kai',\n      },\n      type: 'string' as const,\n      size: 6,\n      required: true,\n    },\n    {\n      label: {\n        id: 'Auth.form.lastname.label',\n        defaultMessage: 'Last name',\n      },\n      name: 'lastname',\n      placeholder: {\n        id: 'Auth.form.lastname.placeholder',\n        defaultMessage: 'e.g. Doe',\n      },\n      type: 'string' as const,\n      size: 6,\n    },\n  ],\n  [\n    {\n      label: {\n        id: 'Auth.form.email.label',\n        defaultMessage: 'Email',\n      },\n      name: 'email',\n      placeholder: {\n        id: 'Auth.form.email.placeholder',\n        defaultMessage: 'e.g. kai.doe@strapi.io',\n      },\n      type: 'email' as const,\n      size: 6,\n      required: true,\n    },\n  ],\n] satisfies FormLayout;\n\nconst FORM_SCHEMA = yup.object().shape({\n  firstname: yup\n    .string()\n    .trim()\n    .required({\n      id: translatedErrors.required.id,\n      defaultMessage: 'This field is required',\n    })\n    .nullable(),\n  lastname: yup.string(),\n  email: yup\n    .string()\n    .email(translatedErrors.email)\n    .required({\n      id: translatedErrors.required.id,\n      defaultMessage: 'This field is required',\n    })\n    .nullable(),\n  roles: yup\n    .array()\n    .min(1, {\n      id: translatedErrors.required.id,\n      defaultMessage: 'This field is required',\n    })\n    .required({\n      id: translatedErrors.required.id,\n      defaultMessage: 'This field is required',\n    }),\n});\n\nconst STEPPER = {\n  create: {\n    buttonSubmitLabel: {\n      id: 'app.containers.Users.ModalForm.footer.button-success',\n      defaultMessage: 'Invite user',\n    },\n    isDisabled: false,\n    next: 'magic-link',\n  },\n  'magic-link': {\n    buttonSubmitLabel: { id: 'global.finish', defaultMessage: 'Finish' },\n    isDisabled: true,\n    next: null,\n  },\n} as const;\n\nexport { ModalForm };\nexport type { InitialData };\n"],"names":["ModalForm","onToggle","currentStep","setStep","React","useState","registrationToken","setRegistrationToken","formatMessage","useIntl","toggleNotification","useNotification","_unstableFormatAPIError","formatAPIError","_unstableFormatValidationErrors","formatValidationErrors","useAPIErrorHandler","roleLayout","useEnterprise","ROLE_LAYOUT","combine","ceRoles","eeRoles","defaultValue","initialValues","FORM_INITIAL_VALUES","ceValues","eeValues","MagicLink","MagicLinkCE","MagicLinkEE","createUser","useCreateUserMutation","headerTitle","id","defaultMessage","handleSubmit","body","setErrors","res","roles","data","goNext","type","message","error","isBaseQueryError","name","next","buttonSubmitLabel","isDisabled","STEPPER","_jsx","Modal","Root","defaultOpen","onOpenChange","_jsxs","Content","Header","Breadcrumbs","label","Crumb","isCurrent","Form","method","onSubmit","validationSchema","FORM_SCHEMA","isSubmitting","_Fragment","Body","Flex","direction","alignItems","gap","Box","Typography","variant","tag","paddingTop","Grid","FORM_LAYOUT","map","row","size","field","Item","col","InputRenderer","disabled","placeholder","xs","SelectRoles","undefined","hint","Footer","Button","onClick","loading","firstname","lastname","email","required","yup","object","shape","string","trim","translatedErrors","nullable","array","min","create"],"mappings":"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"}