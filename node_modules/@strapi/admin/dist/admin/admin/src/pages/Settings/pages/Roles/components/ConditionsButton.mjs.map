{"version":3,"file":"ConditionsButton.mjs","sources":["../../../../../../../../../admin/src/pages/Settings/pages/Roles/components/ConditionsButton.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, BoxComponent, Button, ButtonProps } from '@strapi/design-system';\nimport { Cog } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\ninterface ConditionsButtonProps extends Pick<ButtonProps, 'className' | 'onClick' | 'variant'> {\n  hasConditions?: boolean;\n}\n\nconst ConditionsButtonImpl = React.forwardRef<HTMLButtonElement, ConditionsButtonProps>(\n  ({ onClick, className, hasConditions = false, variant = 'tertiary' }, ref) => {\n    const { formatMessage } = useIntl();\n\n    return (\n      <ButtonContainer $hasConditions={hasConditions} className={className}>\n        <Button variant={variant} startIcon={<Cog />} onClick={onClick} ref={ref} type=\"button\">\n          {formatMessage({\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          })}\n        </Button>\n      </ButtonContainer>\n    );\n  }\n);\n\nconst ButtonContainer = styled<BoxComponent>(Box)<{ $hasConditions?: boolean }>`\n  ${({ $hasConditions, theme }) =>\n    $hasConditions &&\n    `\n    &:before {\n      content: '';\n      position: absolute;\n      top: -3px;\n      left: -10px;\n      width: 6px;\n      height: 6px;\n      border-radius: 2rem;\n      background: ${theme.colors.primary600};\n    }\n  `}\n`;\n\n/**\n * We reference the component directly in other styled-components\n * and as such we need it to have a className already assigned.\n * Therefore we wrapped the implementation in a styled function.\n */\nconst ConditionsButton = styled(ConditionsButtonImpl)``;\n\nexport { ConditionsButton };\nexport type { ConditionsButtonProps };\n"],"names":["ConditionsButtonImpl","React","forwardRef","onClick","className","hasConditions","variant","ref","formatMessage","useIntl","_jsx","ButtonContainer","$hasConditions","Button","startIcon","Cog","type","id","defaultMessage","styled","Box","theme","colors","primary600","ConditionsButton"],"mappings":";;;;;;;AAWA,MAAMA,qCAAuBC,KAAMC,CAAAA,UAAU,CAC3C,CAAC,EAAEC,OAAO,EAAEC,SAAS,EAAEC,gBAAgB,KAAK,EAAEC,OAAU,GAAA,UAAU,EAAE,EAAEC,GAAAA,GAAAA;IACpE,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAE1B,IAAA,qBACEC,GAACC,CAAAA,eAAAA,EAAAA;QAAgBC,cAAgBP,EAAAA,aAAAA;QAAeD,SAAWA,EAAAA,SAAAA;AACzD,QAAA,QAAA,gBAAAM,GAACG,CAAAA,MAAAA,EAAAA;YAAOP,OAASA,EAAAA,OAAAA;AAASQ,YAAAA,SAAAA,gBAAWJ,GAACK,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA;YAAQZ,OAASA,EAAAA,OAAAA;YAASI,GAAKA,EAAAA,GAAAA;YAAKS,IAAK,EAAA,QAAA;sBAC5ER,aAAc,CAAA;gBACbS,EAAI,EAAA,iBAAA;gBACJC,cAAgB,EAAA;AAClB,aAAA;;;AAIR,CAAA,CAAA;AAGF,MAAMP,eAAAA,GAAkBQ,MAAqBC,CAAAA,GAAAA,CAAkC;EAC7E,EAAE,CAAC,EAAER,cAAc,EAAES,KAAK,EAAE,GAC1BT,kBACA;;;;;;;;;AASc,kBAAA,EAAES,KAAMC,CAAAA,MAAM,CAACC,UAAU,CAAC;;AAE1C,EAAA,CAAC;AACH,CAAC;AAED;;;;AAIC,IACKC,MAAAA,gBAAAA,GAAmBL,MAAOnB,CAAAA,oBAAAA,CAAqB,CAAC;;;;"}