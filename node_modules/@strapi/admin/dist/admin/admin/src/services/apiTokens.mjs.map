{"version":3,"file":"apiTokens.mjs","sources":["../../../../../admin/src/services/apiTokens.ts"],"sourcesContent":["import * as ApiToken from '../../../shared/contracts/api-token';\n\nimport { adminApi } from './api';\n\nconst apiTokensService = adminApi\n  .enhanceEndpoints({\n    addTagTypes: ['ApiToken', 'GuidedTourMeta'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getAPITokens: builder.query<ApiToken.List.Response['data'], void>({\n        query: () => '/admin/api-tokens',\n        transformResponse: (response: ApiToken.List.Response) => response.data,\n        providesTags: (res, _err) => [\n          ...(res?.map(({ id }) => ({ type: 'ApiToken' as const, id })) ?? []),\n          { type: 'ApiToken' as const, id: 'LIST' },\n        ],\n      }),\n      getAPIToken: builder.query<ApiToken.Get.Response['data'], ApiToken.Get.Params['id']>({\n        query: (id) => `/admin/api-tokens/${id}`,\n        transformResponse: (response: ApiToken.Get.Response) => response.data,\n        providesTags: (res, _err, id) => [{ type: 'ApiToken' as const, id }],\n      }),\n      createAPIToken: builder.mutation<\n        ApiToken.Create.Response['data'],\n        ApiToken.Create.Request['body']\n      >({\n        query: (body) => ({\n          url: '/admin/api-tokens',\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: ApiToken.Create.Response) => response.data,\n        invalidatesTags: [{ type: 'ApiToken' as const, id: 'LIST' }, 'GuidedTourMeta'],\n      }),\n      deleteAPIToken: builder.mutation<\n        ApiToken.Revoke.Response['data'],\n        ApiToken.Revoke.Params['id']\n      >({\n        query: (id) => ({\n          url: `/admin/api-tokens/${id}`,\n          method: 'DELETE',\n        }),\n        transformResponse: (response: ApiToken.Revoke.Response) => response.data,\n        invalidatesTags: (_res, _err, id) => [{ type: 'ApiToken' as const, id }],\n      }),\n      updateAPIToken: builder.mutation<\n        ApiToken.Update.Response['data'],\n        ApiToken.Update.Params & ApiToken.Update.Request['body']\n      >({\n        query: ({ id, ...body }) => ({\n          url: `/admin/api-tokens/${id}`,\n          method: 'PUT',\n          data: body,\n        }),\n        transformResponse: (response: ApiToken.Update.Response) => response.data,\n        invalidatesTags: (_res, _err, { id }) => [{ type: 'ApiToken' as const, id }],\n      }),\n    }),\n  });\n\nconst {\n  useGetAPITokensQuery,\n  useGetAPITokenQuery,\n  useCreateAPITokenMutation,\n  useDeleteAPITokenMutation,\n  useUpdateAPITokenMutation,\n} = apiTokensService;\n\nexport {\n  useGetAPITokensQuery,\n  useGetAPITokenQuery,\n  useCreateAPITokenMutation,\n  useDeleteAPITokenMutation,\n  useUpdateAPITokenMutation,\n};\n"],"names":["apiTokensService","adminApi","enhanceEndpoints","addTagTypes","injectEndpoints","endpoints","builder","getAPITokens","query","transformResponse","response","data","providesTags","res","_err","map","id","type","getAPIToken","createAPIToken","mutation","body","url","method","invalidatesTags","deleteAPIToken","_res","updateAPIToken","useGetAPITokensQuery","useGetAPITokenQuery","useCreateAPITokenMutation","useDeleteAPITokenMutation","useUpdateAPITokenMutation"],"mappings":"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"}