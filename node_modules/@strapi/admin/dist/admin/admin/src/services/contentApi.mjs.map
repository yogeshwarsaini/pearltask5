{"version":3,"file":"contentApi.mjs","sources":["../../../../../admin/src/services/contentApi.ts"],"sourcesContent":["import { adminApi } from './api';\n\nimport type { List as ListContentApiPermissions } from '../../../shared/contracts/content-api/permissions';\nimport type { List as ListContentApiRoutes } from '../../../shared/contracts/content-api/routes';\n\nconst contentApiService = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getPermissions: builder.query<ListContentApiPermissions.Response['data'], void>({\n      query: () => '/admin/content-api/permissions',\n      transformResponse: (response: ListContentApiPermissions.Response) => response.data,\n    }),\n    getRoutes: builder.query<ListContentApiRoutes.Response['data'], void>({\n      query: () => '/admin/content-api/routes',\n      transformResponse: (response: ListContentApiRoutes.Response) => response.data,\n    }),\n  }),\n  overrideExisting: false,\n});\n\nconst { useGetPermissionsQuery, useGetRoutesQuery } = contentApiService;\n\nexport { useGetPermissionsQuery, useGetRoutesQuery };\n"],"names":["contentApiService","adminApi","injectEndpoints","endpoints","builder","getPermissions","query","transformResponse","response","data","getRoutes","overrideExisting","useGetPermissionsQuery","useGetRoutesQuery"],"mappings":";;AAKA,MAAMA,iBAAAA,GAAoBC,QAASC,CAAAA,eAAe,CAAC;IACjDC,SAAW,EAAA,CAACC,WAAa;YACvBC,cAAgBD,EAAAA,OAAAA,CAAQE,KAAK,CAAmD;AAC9EA,gBAAAA,KAAAA,EAAO,IAAM,gCAAA;gBACbC,iBAAmB,EAAA,CAACC,QAAiDA,GAAAA,QAAAA,CAASC;AAChF,aAAA,CAAA;YACAC,SAAWN,EAAAA,OAAAA,CAAQE,KAAK,CAA8C;AACpEA,gBAAAA,KAAAA,EAAO,IAAM,2BAAA;gBACbC,iBAAmB,EAAA,CAACC,QAA4CA,GAAAA,QAAAA,CAASC;AAC3E,aAAA;SACF,CAAA;IACAE,gBAAkB,EAAA;AACpB,CAAA,CAAA;AAEA,MAAM,EAAEC,sBAAsB,EAAEC,iBAAiB,EAAE,GAAGb;;;;"}