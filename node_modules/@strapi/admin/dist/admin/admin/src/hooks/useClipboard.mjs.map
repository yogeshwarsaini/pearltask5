{"version":3,"file":"useClipboard.mjs","sources":["../../../../../admin/src/hooks/useClipboard.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nconst useClipboard = () => {\n  const copy = useCallback(async (value: string | number) => {\n    try {\n      // only strings and numbers casted to strings can be copied to clipboard\n      if (typeof value !== 'string' && typeof value !== 'number') {\n        throw new Error(\n          `Cannot copy typeof ${typeof value} to clipboard, must be a string or number`\n        );\n      }\n      // empty strings are also considered invalid\n      else if (value === '') {\n        throw new Error(`Cannot copy empty string to clipboard.`);\n      }\n\n      const stringifiedValue = value.toString();\n\n      await navigator.clipboard.writeText(stringifiedValue);\n\n      return true;\n    } catch (error) {\n      /**\n       * Realistically this isn't useful in production as there's nothing the user can do.\n       */\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Copy failed', error);\n      }\n\n      return false;\n    }\n  }, []);\n\n  return { copy };\n};\n\nexport { useClipboard };\n"],"names":["useClipboard","copy","useCallback","value","Error","stringifiedValue","toString","navigator","clipboard","writeText","error","process","env","NODE_ENV","console","warn"],"mappings":";;AAEA,MAAMA,YAAe,GAAA,IAAA;IACnB,MAAMC,IAAAA,GAAOC,YAAY,OAAOC,KAAAA,GAAAA;QAC9B,IAAI;;AAEF,YAAA,IAAI,OAAOA,KAAAA,KAAU,QAAY,IAAA,OAAOA,UAAU,QAAU,EAAA;gBAC1D,MAAM,IAAIC,MACR,CAAC,mBAAmB,EAAE,OAAOD,KAAAA,CAAM,yCAAyC,CAAC,CAAA;aAI5E,MAAA,IAAIA,UAAU,EAAI,EAAA;AACrB,gBAAA,MAAM,IAAIC,KAAAA,CAAM,CAAC,sCAAsC,CAAC,CAAA;AAC1D;YAEA,MAAMC,gBAAAA,GAAmBF,MAAMG,QAAQ,EAAA;AAEvC,YAAA,MAAMC,SAAUC,CAAAA,SAAS,CAACC,SAAS,CAACJ,gBAAAA,CAAAA;YAEpC,OAAO,IAAA;AACT,SAAA,CAAE,OAAOK,KAAO,EAAA;AACd;;AAEC,UACD,IAAIC,OAAQC,CAAAA,GAAG,CAACC,QAAQ,KAAK,aAAe,EAAA;gBAC1CC,OAAQC,CAAAA,IAAI,CAAC,aAAeL,EAAAA,KAAAA,CAAAA;AAC9B;YAEA,OAAO,KAAA;AACT;AACF,KAAA,EAAG,EAAE,CAAA;IAEL,OAAO;AAAET,QAAAA;AAAK,KAAA;AAChB;;;;"}