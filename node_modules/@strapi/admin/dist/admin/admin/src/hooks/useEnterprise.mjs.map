{"version":3,"file":"useEnterprise.mjs","sources":["../../../../../admin/src/hooks/useEnterprise.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useCallbackRef } from '@strapi/design-system';\n\nfunction isEnterprise() {\n  return window.strapi.isEE;\n}\n\nexport interface UseEnterpriseOptions<TCEData, TEEData, TDefaultValue, TCombinedValue> {\n  defaultValue?: TDefaultValue;\n  combine?: (ceData: TCEData, eeData: TEEData) => TCombinedValue;\n  enabled?: boolean;\n}\n\ntype UseEnterpriseReturn<TCEData, TEEData, TDefaultValue, TCombinedValue> =\n  TDefaultValue extends null\n    ? TCEData | TEEData | TCombinedValue | null\n    : TCEData | TEEData | TCombinedValue | TDefaultValue;\n\nexport const useEnterprise = <\n  TCEData,\n  TEEData = TCEData,\n  TCombinedValue = TEEData,\n  TDefaultValue = TCEData,\n>(\n  ceData: TCEData,\n  eeCallback: () => Promise<TEEData>,\n  opts: UseEnterpriseOptions<TCEData, TEEData, TDefaultValue, TCombinedValue> = {}\n): UseEnterpriseReturn<TCEData, TEEData, TDefaultValue, TCombinedValue> => {\n  const { defaultValue = null, combine = (_ceData, eeData) => eeData, enabled = true } = opts;\n  const eeCallbackRef = useCallbackRef(eeCallback);\n  const combineCallbackRef = useCallbackRef(combine);\n\n  // We have to use a nested object here, because functions (e.g. Components)\n  // can not be stored as value directly\n  const [{ data }, setData] = React.useState<{\n    data: TCEData | TEEData | TDefaultValue | TCombinedValue | null;\n  }>({\n    data: isEnterprise() && enabled ? defaultValue : ceData,\n  });\n\n  React.useEffect(() => {\n    async function importEE() {\n      const eeData = await eeCallbackRef();\n      const combinedValue = combineCallbackRef(ceData, eeData);\n\n      setData({ data: combinedValue ? combinedValue : eeData });\n    }\n\n    if (isEnterprise() && enabled) {\n      importEE();\n    }\n  }, [ceData, eeCallbackRef, combineCallbackRef, enabled]);\n\n  // @ts-expect-error â€“ the hook type assertion works in practice. But seems to have issues here...\n  return data;\n};\n"],"names":["isEnterprise","window","strapi","isEE","useEnterprise","ceData","eeCallback","opts","defaultValue","combine","_ceData","eeData","enabled","eeCallbackRef","useCallbackRef","combineCallbackRef","data","setData","React","useState","useEffect","importEE","combinedValue"],"mappings":";;;AAIA,SAASA,YAAAA,GAAAA;IACP,OAAOC,MAAAA,CAAOC,MAAM,CAACC,IAAI;AAC3B;MAaaC,aAAgB,GAAA,CAM3BC,QACAC,UACAC,EAAAA,IAAAA,GAA8E,EAAE,GAAA;AAEhF,IAAA,MAAM,EAAEC,YAAAA,GAAe,IAAI,EAAEC,OAAU,GAAA,CAACC,OAASC,EAAAA,MAAAA,GAAWA,MAAM,EAAEC,OAAU,GAAA,IAAI,EAAE,GAAGL,IAAAA;AACvF,IAAA,MAAMM,gBAAgBC,cAAeR,CAAAA,UAAAA,CAAAA;AACrC,IAAA,MAAMS,qBAAqBD,cAAeL,CAAAA,OAAAA,CAAAA;;;IAI1C,MAAM,CAAC,EAAEO,IAAI,EAAE,EAAEC,OAAQ,CAAA,GAAGC,KAAMC,CAAAA,QAAQ,CAEvC;QACDH,IAAMhB,EAAAA,YAAAA,EAAAA,IAAkBY,UAAUJ,YAAeH,GAAAA;AACnD,KAAA,CAAA;AAEAa,IAAAA,KAAAA,CAAME,SAAS,CAAC,IAAA;QACd,eAAeC,QAAAA,GAAAA;AACb,YAAA,MAAMV,SAAS,MAAME,aAAAA,EAAAA;YACrB,MAAMS,aAAAA,GAAgBP,mBAAmBV,MAAQM,EAAAA,MAAAA,CAAAA;YAEjDM,OAAQ,CAAA;AAAED,gBAAAA,IAAAA,EAAMM,gBAAgBA,aAAgBX,GAAAA;AAAO,aAAA,CAAA;AACzD;AAEA,QAAA,IAAIX,kBAAkBY,OAAS,EAAA;AAC7BS,YAAAA,QAAAA,EAAAA;AACF;KACC,EAAA;AAAChB,QAAAA,MAAAA;AAAQQ,QAAAA,aAAAA;AAAeE,QAAAA,kBAAAA;AAAoBH,QAAAA;AAAQ,KAAA,CAAA;;IAGvD,OAAOI,IAAAA;AACT;;;;"}