{"version":3,"file":"useAdminRoles.js","sources":["../../../../../admin/src/hooks/useAdminRoles.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useCollator } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { GetRolesParams, useGetRolesQuery } from '../services/users';\n\nimport type { FindRoles } from '../../../shared/contracts/roles';\n\nexport type AdminRole = FindRoles.Response['data'][number];\n\nexport const useAdminRoles = (\n  params: GetRolesParams = {},\n  queryOptions?: Parameters<typeof useGetRolesQuery>[1]\n) => {\n  const { locale } = useIntl();\n  const formatter = useCollator(locale, {\n    sensitivity: 'base',\n  });\n\n  const { data, error, isError, isLoading, refetch } = useGetRolesQuery(params, queryOptions);\n\n  // the return value needs to be memoized, because intantiating\n  // an empty array as default value would lead to an unstable return\n  // value, which later on triggers infinite loops if used in the\n  // dependency arrays of other hooks\n  const roles = React.useMemo(\n    () =>\n      [...(data ?? [])].sort((a, b) =>\n        formatter.compare(a.name, b.name)\n      ) as FindRoles.Response['data'],\n    [data, formatter]\n  );\n\n  return {\n    roles,\n    error,\n    isError,\n    isLoading,\n    refetch,\n  };\n};\n"],"names":["useAdminRoles","params","queryOptions","locale","useIntl","formatter","useCollator","sensitivity","data","error","isError","isLoading","refetch","useGetRolesQuery","roles","React","useMemo","sort","a","b","compare","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;MAWaA,aAAgB,GAAA,CAC3BC,MAAyB,GAAA,EAAE,EAC3BC,YAAAA,GAAAA;IAEA,MAAM,EAAEC,MAAM,EAAE,GAAGC,iBAAAA,EAAAA;IACnB,MAAMC,SAAAA,GAAYC,yBAAYH,MAAQ,EAAA;QACpCI,WAAa,EAAA;AACf,KAAA,CAAA;AAEA,IAAA,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAE,GAAGC,uBAAiBZ,MAAQC,EAAAA,YAAAA,CAAAA;;;;;AAM9E,IAAA,MAAMY,KAAQC,GAAAA,gBAAAA,CAAMC,OAAO,CACzB,IACE;AAAKR,YAAAA,GAAAA,IAAAA,IAAQ;AAAI,SAAA,CAACS,IAAI,CAAC,CAACC,CAAAA,EAAGC,CACzBd,GAAAA,SAAAA,CAAUe,OAAO,CAACF,CAAEG,CAAAA,IAAI,EAAEF,CAAAA,CAAEE,IAAI,CAEpC,CAAA,EAAA;AAACb,QAAAA,IAAAA;AAAMH,QAAAA;AAAU,KAAA,CAAA;IAGnB,OAAO;AACLS,QAAAA,KAAAA;AACAL,QAAAA,KAAAA;AACAC,QAAAA,OAAAA;AACAC,QAAAA,SAAAA;AACAC,QAAAA;AACF,KAAA;AACF;;;;"}