{"version":3,"file":"useControllableState.js","sources":["../../../../../admin/src/hooks/useControllableState.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useCallbackRef } from '@strapi/design-system';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n"],"names":["useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","useUncontrolledState","isControlled","undefined","value","handleChange","useCallbackRef","setValue","React","useCallback","nextValue","setter","uncontrolledState","useState","prevValueRef","useRef","useEffect","current"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAYA,SAASA,oBAAAA,CAAwB,EAC/BC,IAAI,EACJC,WAAW,EACXC,QAAAA,GAAW,IAAO,EAAC,EACW,EAAA;AAC9B,IAAA,MAAM,CAACC,gBAAAA,EAAkBC,mBAAoB,CAAA,GAAGC,oBAAqB,CAAA;AAAEJ,QAAAA,WAAAA;AAAaC,QAAAA;AAAS,KAAA,CAAA;AAC7F,IAAA,MAAMI,eAAeN,IAASO,KAAAA,SAAAA;IAC9B,MAAMC,KAAAA,GAAQF,eAAeN,IAAOG,GAAAA,gBAAAA;AACpC,IAAA,MAAMM,eAAeC,2BAAeR,CAAAA,QAAAA,CAAAA;AAEpC,IAAA,MAAMS,QAAgEC,GAAAA,gBAAAA,CAAMC,WAAW,CACrF,CAACC,SAAAA,GAAAA;AACC,QAAA,IAAIR,YAAc,EAAA;AAChB,YAAA,MAAMS,MAASD,GAAAA,SAAAA;AACf,YAAA,MAAMN,KAAQ,GAAA,OAAOM,SAAc,KAAA,UAAA,GAAaC,OAAOf,IAAQc,CAAAA,GAAAA,SAAAA;YAC/D,IAAIN,KAAAA,KAAUR,MAAMS,YAAaD,CAAAA,KAAAA,CAAAA;SAC5B,MAAA;YACLJ,mBAAoBU,CAAAA,SAAAA,CAAAA;AACtB;KAEF,EAAA;AAACR,QAAAA,YAAAA;AAAcN,QAAAA,IAAAA;AAAMI,QAAAA,mBAAAA;AAAqBK,QAAAA;AAAa,KAAA,CAAA;IAGzD,OAAO;AAACD,QAAAA,KAAAA;AAAOG,QAAAA;AAAS,KAAA;AAC1B;AAEA,SAASN,oBAAwB,CAAA,EAC/BJ,WAAW,EACXC,QAAQ,EACoC,EAAA;IAC5C,MAAMc,iBAAAA,GAAoBJ,gBAAMK,CAAAA,QAAQ,CAAgBhB,WAAAA,CAAAA;IACxD,MAAM,CAACO,MAAM,GAAGQ,iBAAAA;IAChB,MAAME,YAAAA,GAAeN,gBAAMO,CAAAA,MAAM,CAACX,KAAAA,CAAAA;AAClC,IAAA,MAAMC,eAAeC,2BAAeR,CAAAA,QAAAA,CAAAA;AAEpCU,IAAAA,gBAAAA,CAAMQ,SAAS,CAAC,IAAA;QACd,IAAIF,YAAAA,CAAaG,OAAO,KAAKb,KAAO,EAAA;YAClCC,YAAaD,CAAAA,KAAAA,CAAAA;AACbU,YAAAA,YAAAA,CAAaG,OAAO,GAAGb,KAAAA;AACzB;KACC,EAAA;AAACA,QAAAA,KAAAA;AAAOU,QAAAA,YAAAA;AAAcT,QAAAA;AAAa,KAAA,CAAA;IAEtC,OAAOO,iBAAAA;AACT;;;;"}