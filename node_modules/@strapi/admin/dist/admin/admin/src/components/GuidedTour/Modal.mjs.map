{"version":3,"file":"Modal.mjs","sources":["../../../../../../admin/src/components/GuidedTour/Modal.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Box,\n  Button,\n  Flex,\n  FlexComponent,\n  FocusTrap,\n  IconButton,\n  Portal,\n  Typography,\n  LinkButton,\n} from '@strapi/design-system';\nimport { ArrowRight, Cross } from '@strapi/icons';\nimport get from 'lodash/get';\nimport { MessageDescriptor, useIntl } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useTracking } from '../../features/Tracking';\n\nimport { LAYOUT_DATA, STATES } from './constants';\nimport { Number, VerticalDivider } from './Ornaments';\nimport { GuidedTourContextValue, useGuidedTour } from './Provider';\n\n/* -------------------------------------------------------------------------------------------------\n * GuidedTourModal\n * -----------------------------------------------------------------------------------------------*/\n\nconst GuidedTourModal = () => {\n  const guidedTour = useGuidedTour('GuidedTourModal', (state) => state);\n\n  const {\n    currentStep,\n    guidedTourState,\n    setCurrentStep,\n    setStepState,\n    isGuidedTourVisible,\n    setSkipped,\n  } = guidedTour;\n\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n\n  if (!currentStep || !isGuidedTourVisible) {\n    return null;\n  }\n\n  const stepData = get(LAYOUT_DATA, currentStep);\n  const sectionKeys = Object.keys(guidedTourState);\n  const [sectionName, stepName] = currentStep.split('.') as [\n    keyof GuidedTourContextValue['guidedTourState'],\n    string,\n  ];\n  const sectionIndex = sectionKeys.indexOf(sectionName);\n  const stepIndex = Object.keys(guidedTourState[sectionName]).indexOf(stepName);\n  const hasSectionAfter = sectionIndex < sectionKeys.length - 1;\n  const hasStepAfter = stepIndex < Object.keys(guidedTourState[sectionName]).length - 1;\n\n  const handleCtaClick = () => {\n    setStepState(currentStep, true);\n\n    if (stepData) {\n      trackUsage(stepData.trackingEvent);\n    }\n\n    setCurrentStep(null);\n  };\n\n  const handleSkip = () => {\n    setSkipped(true);\n    setCurrentStep(null);\n    trackUsage('didSkipGuidedtour');\n  };\n\n  return (\n    <Portal>\n      <ModalWrapper onClick={handleCtaClick} padding={8} justifyContent=\"center\">\n        <FocusTrap onEscape={handleCtaClick}>\n          <Flex\n            direction=\"column\"\n            alignItems=\"stretch\"\n            background=\"neutral0\"\n            width={`66rem`}\n            shadow=\"popupShadow\"\n            hasRadius\n            padding={4}\n            gap={8}\n            role=\"dialog\"\n            aria-modal\n            onClick={(e) => e.stopPropagation()}\n          >\n            <Flex justifyContent=\"flex-end\">\n              <IconButton\n                onClick={handleCtaClick}\n                withTooltip={false}\n                label={formatMessage({\n                  id: 'app.utils.close-label',\n                  defaultMessage: 'Close',\n                })}\n              >\n                <Cross />\n              </IconButton>\n            </Flex>\n            <Box\n              paddingLeft={7}\n              paddingRight={7}\n              paddingBottom={!hasStepAfter && !hasSectionAfter ? 8 : 0}\n            >\n              <GuidedTourStepper\n                title={stepData && 'title' in stepData ? stepData.title : undefined}\n                cta={stepData && 'cta' in stepData ? stepData.cta : undefined}\n                onCtaClick={handleCtaClick}\n                sectionIndex={sectionIndex}\n                stepIndex={stepIndex}\n                hasSectionAfter={hasSectionAfter}\n              >\n                {stepData && 'content' in stepData && <GuidedTourContent {...stepData.content} />}\n              </GuidedTourStepper>\n            </Box>\n            {!(!hasStepAfter && !hasSectionAfter) && (\n              <Flex justifyContent=\"flex-end\">\n                <Button variant=\"tertiary\" onClick={handleSkip}>\n                  {formatMessage({\n                    id: 'app.components.GuidedTour.skip',\n                    defaultMessage: 'Skip the tour',\n                  })}\n                </Button>\n              </Flex>\n            )}\n          </Flex>\n        </FocusTrap>\n      </ModalWrapper>\n    </Portal>\n  );\n};\n\nconst ModalWrapper = styled<FlexComponent>(Flex)`\n  position: fixed;\n  z-index: 4;\n  inset: 0;\n  /* this is theme.colors.neutral800 with opacity */\n  background: ${({ theme }) => `${theme.colors.neutral800}1F`};\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * GuidedTourStepper\n * -----------------------------------------------------------------------------------------------*/\n\ninterface GuidedTourStepperProps {\n  title: MessageDescriptor | undefined;\n  children: React.ReactNode;\n  cta?: {\n    title: MessageDescriptor;\n    target?: string;\n  };\n  onCtaClick: () => void;\n  sectionIndex: number;\n  stepIndex: number;\n  hasSectionAfter: boolean;\n}\n\nconst GuidedTourStepper = ({\n  title,\n  children,\n  cta,\n  onCtaClick,\n  sectionIndex,\n  stepIndex,\n  hasSectionAfter,\n}: GuidedTourStepperProps) => {\n  const { formatMessage } = useIntl();\n\n  const hasSectionBefore = sectionIndex > 0;\n  const hasStepsBefore = stepIndex > 0;\n  const nextSectionIndex = sectionIndex + 1;\n\n  return (\n    <>\n      <Flex alignItems=\"stretch\">\n        <Flex marginRight={8} justifyContent=\"center\" minWidth={`3rem`}>\n          {hasSectionBefore && <VerticalDivider state={STATES.IS_DONE} minHeight={`2.4rem`} />}\n        </Flex>\n        <Typography variant=\"sigma\" textColor=\"primary600\">\n          {formatMessage({\n            id: 'app.components.GuidedTour.title',\n            defaultMessage: '3 steps to get started',\n          })}\n        </Typography>\n      </Flex>\n      <Flex>\n        <Flex marginRight={8} minWidth={`3rem`}>\n          <Number\n            state={hasStepsBefore ? STATES.IS_DONE : STATES.IS_ACTIVE}\n            paddingTop={3}\n            paddingBottom={3}\n          >\n            {sectionIndex + 1}\n          </Number>\n        </Flex>\n        {title && (\n          <Typography variant=\"alpha\" fontWeight=\"bold\" textColor=\"neutral800\" tag=\"h3\" id=\"title\">\n            {formatMessage(title)}\n          </Typography>\n        )}\n      </Flex>\n      <Flex alignItems=\"stretch\">\n        <Flex marginRight={8} direction=\"column\" justifyContent=\"center\" minWidth={`3rem`}>\n          {hasSectionAfter && (\n            <>\n              <VerticalDivider state={STATES.IS_DONE} />\n              {hasStepsBefore && (\n                <Number state={STATES.IS_ACTIVE} paddingTop={3}>\n                  {nextSectionIndex + 1}\n                </Number>\n              )}\n            </>\n          )}\n        </Flex>\n        <Box>\n          {children}\n          {cta &&\n            (cta.target ? (\n              <LinkButton\n                tag={NavLink}\n                endIcon={<ArrowRight />}\n                onClick={onCtaClick}\n                to={cta.target}\n              >\n                {formatMessage(cta.title)}\n              </LinkButton>\n            ) : (\n              <Button endIcon={<ArrowRight />} onClick={onCtaClick}>\n                {formatMessage(cta.title)}\n              </Button>\n            ))}\n        </Box>\n      </Flex>\n      {hasStepsBefore && hasSectionAfter && (\n        <Box paddingTop={3}>\n          <Flex marginRight={8} justifyContent=\"center\" width={`3rem`}>\n            <VerticalDivider state={STATES.IS_DONE} minHeight={`2.4rem`} />\n          </Flex>\n        </Box>\n      )}\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * GuidedTourContent\n * -----------------------------------------------------------------------------------------------*/\n\ninterface GuidedTourContentProps\n  extends Required<Pick<MessageDescriptor, 'defaultMessage' | 'id'>> {}\n\nconst GuidedTourContent = ({ id, defaultMessage }: GuidedTourContentProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={4} paddingBottom={6}>\n      {formatMessage(\n        { id, defaultMessage },\n        {\n          documentationLink: DocumentationLink,\n          b: Bold,\n          p: Paragraph,\n          light: Light,\n          ul: List,\n          li: ListItem,\n        }\n      )}\n    </Flex>\n  );\n};\n\nconst DocumentationLink = (children: React.ReactNode) => (\n  <Typography\n    tag=\"a\"\n    textColor=\"primary600\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#api-parameters\"\n  >\n    {children}\n  </Typography>\n);\n\nconst Bold = (children: React.ReactNode) => (\n  <Typography fontWeight=\"semiBold\">{children}</Typography>\n);\n\nconst Paragraph = (children: React.ReactNode) => <Typography>{children}</Typography>;\n\nconst Light = (children: React.ReactNode) => (\n  <Typography textColor=\"neutral600\">{children}</Typography>\n);\n\nconst List = (children: React.ReactNode) => (\n  <Box paddingLeft={6}>\n    <ul>{children}</ul>\n  </Box>\n);\n\nconst LiStyled = styled.li`\n  list-style: disc;\n  &::marker {\n    color: ${({ theme }) => theme.colors.neutral800};\n  }\n`;\n\nconst ListItem = (children: React.ReactNode) => <LiStyled>{children}</LiStyled>;\n\nexport { GuidedTourModal };\n"],"names":["GuidedTourModal","guidedTour","useGuidedTour","state","currentStep","guidedTourState","setCurrentStep","setStepState","isGuidedTourVisible","setSkipped","formatMessage","useIntl","trackUsage","useTracking","stepData","get","LAYOUT_DATA","sectionKeys","Object","keys","sectionName","stepName","split","sectionIndex","indexOf","stepIndex","hasSectionAfter","length","hasStepAfter","handleCtaClick","trackingEvent","handleSkip","_jsx","Portal","ModalWrapper","onClick","padding","justifyContent","FocusTrap","onEscape","_jsxs","Flex","direction","alignItems","background","width","shadow","hasRadius","gap","role","aria-modal","e","stopPropagation","IconButton","withTooltip","label","id","defaultMessage","Cross","Box","paddingLeft","paddingRight","paddingBottom","GuidedTourStepper","title","undefined","cta","onCtaClick","GuidedTourContent","content","Button","variant","styled","theme","colors","neutral800","children","hasSectionBefore","hasStepsBefore","nextSectionIndex","_Fragment","marginRight","minWidth","VerticalDivider","STATES","IS_DONE","minHeight","Typography","textColor","Number","IS_ACTIVE","paddingTop","fontWeight","tag","target","LinkButton","NavLink","endIcon","ArrowRight","to","documentationLink","DocumentationLink","b","Bold","p","Paragraph","light","Light","ul","List","li","ListItem","rel","href","LiStyled"],"mappings":"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"}