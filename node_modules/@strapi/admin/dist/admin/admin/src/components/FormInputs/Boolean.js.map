{"version":3,"file":"Boolean.js","sources":["../../../../../../admin/src/components/FormInputs/Boolean.tsx"],"sourcesContent":["import { forwardRef, memo } from 'react';\n\nimport { Toggle, useComposedRefs, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useFocusInputField } from '../../hooks/useFocusInputField';\nimport { useField } from '../Form';\n\nimport { InputProps } from './types';\n\nconst BooleanInput = forwardRef<HTMLInputElement, InputProps>(\n  ({ name, required, label, hint, labelAction, ...props }, ref) => {\n    const { formatMessage } = useIntl();\n    const field = useField<boolean | null>(name);\n    const fieldRef = useFocusInputField<HTMLInputElement>(name);\n\n    const composedRefs = useComposedRefs(ref, fieldRef);\n\n    return (\n      <Field.Root error={field.error} name={name} hint={hint} required={required} maxWidth=\"320px\">\n        <Field.Label action={labelAction}>{label}</Field.Label>\n        <Toggle\n          ref={composedRefs}\n          checked={field.value === null ? null : field.value || false}\n          offLabel={formatMessage({\n            id: 'app.components.ToggleCheckbox.off-label',\n            defaultMessage: 'False',\n          })}\n          onLabel={formatMessage({\n            id: 'app.components.ToggleCheckbox.on-label',\n            defaultMessage: 'True',\n          })}\n          onChange={field.onChange}\n          {...props}\n        />\n        <Field.Hint />\n        <Field.Error />\n      </Field.Root>\n    );\n  }\n);\n\nconst MemoizedBooleanInput = memo(BooleanInput);\n\nexport { MemoizedBooleanInput as BooleanInput };\n"],"names":["BooleanInput","forwardRef","name","required","label","hint","labelAction","props","ref","formatMessage","useIntl","field","useField","fieldRef","useFocusInputField","composedRefs","useComposedRefs","_jsxs","Field","Root","error","maxWidth","_jsx","Label","action","Toggle","checked","value","offLabel","id","defaultMessage","onLabel","onChange","Hint","Error","MemoizedBooleanInput","memo"],"mappings":";;;;;;;;;AAUA,MAAMA,6BAAeC,gBACnB,CAAA,CAAC,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,EAAE,GAAGC,OAAO,EAAEC,GAAAA,GAAAA;IACvD,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAC1B,IAAA,MAAMC,QAAQC,aAAyBV,CAAAA,IAAAA,CAAAA;AACvC,IAAA,MAAMW,WAAWC,qCAAqCZ,CAAAA,IAAAA,CAAAA;IAEtD,MAAMa,YAAAA,GAAeC,6BAAgBR,GAAKK,EAAAA,QAAAA,CAAAA;IAE1C,qBACEI,eAAA,CAACC,mBAAMC,IAAI,EAAA;AAACC,QAAAA,KAAAA,EAAOT,MAAMS,KAAK;QAAElB,IAAMA,EAAAA,IAAAA;QAAMG,IAAMA,EAAAA,IAAAA;QAAMF,QAAUA,EAAAA,QAAAA;QAAUkB,QAAS,EAAA,OAAA;;AACnF,0BAAAC,cAAA,CAACJ,mBAAMK,KAAK,EAAA;gBAACC,MAAQlB,EAAAA,WAAAA;AAAcF,gBAAAA,QAAAA,EAAAA;;0BACnCkB,cAACG,CAAAA,mBAAAA,EAAAA;gBACCjB,GAAKO,EAAAA,YAAAA;AACLW,gBAAAA,OAAAA,EAASf,MAAMgB,KAAK,KAAK,OAAO,IAAOhB,GAAAA,KAAAA,CAAMgB,KAAK,IAAI,KAAA;AACtDC,gBAAAA,QAAAA,EAAUnB,aAAc,CAAA;oBACtBoB,EAAI,EAAA,yCAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA,CAAA;AACAC,gBAAAA,OAAAA,EAAStB,aAAc,CAAA;oBACrBoB,EAAI,EAAA,wCAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA,CAAA;AACAE,gBAAAA,QAAAA,EAAUrB,MAAMqB,QAAQ;AACvB,gBAAA,GAAGzB;;AAEN,0BAAAe,cAAA,CAACJ,mBAAMe,IAAI,EAAA,EAAA,CAAA;AACX,0BAAAX,cAAA,CAACJ,mBAAMgB,KAAK,EAAA,EAAA;;;AAGlB,CAAA,CAAA;AAGF,MAAMC,qCAAuBC,UAAKpC,CAAAA,YAAAA;;;;"}