{"version":3,"file":"Enumeration.js","sources":["../../../../../../admin/src/components/FormInputs/Enumeration.tsx"],"sourcesContent":["import { forwardRef, memo } from 'react';\n\nimport { SingleSelect, SingleSelectOption, useComposedRefs, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useFocusInputField } from '../../hooks/useFocusInputField';\nimport { useField } from '../Form';\n\nimport { EnumerationProps } from './types';\n\nconst EnumerationInput = forwardRef<HTMLDivElement, EnumerationProps>(\n  ({ name, required, label, hint, labelAction, options = [], ...props }, ref) => {\n    const { formatMessage } = useIntl();\n    const field = useField(name);\n    const fieldRef = useFocusInputField<HTMLDivElement>(name);\n\n    const composedRefs = useComposedRefs(ref, fieldRef);\n\n    return (\n      <Field.Root error={field.error} name={name} hint={hint} required={required}>\n        <Field.Label action={labelAction}>{label}</Field.Label>\n        <SingleSelect\n          ref={composedRefs}\n          onChange={(value) => {\n            field.onChange(name, value);\n          }}\n          value={field.value}\n          {...props}\n        >\n          <SingleSelectOption value=\"\" disabled={required} hidden={required}>\n            {formatMessage({\n              id: 'components.InputSelect.option.placeholder',\n              defaultMessage: 'Choose here',\n            })}\n          </SingleSelectOption>\n          {options.map(({ value, label, disabled, hidden }) => {\n            return (\n              <SingleSelectOption key={value} value={value} disabled={disabled} hidden={hidden}>\n                {label ?? value}\n              </SingleSelectOption>\n            );\n          })}\n        </SingleSelect>\n        <Field.Hint />\n        <Field.Error />\n      </Field.Root>\n    );\n  }\n);\n\nconst MemoizedEnumerationInput = memo(EnumerationInput);\n\nexport { MemoizedEnumerationInput as EnumerationInput };\n"],"names":["EnumerationInput","forwardRef","name","required","label","hint","labelAction","options","props","ref","formatMessage","useIntl","field","useField","fieldRef","useFocusInputField","composedRefs","useComposedRefs","_jsxs","Field","Root","error","_jsx","Label","action","SingleSelect","onChange","value","SingleSelectOption","disabled","hidden","id","defaultMessage","map","Hint","Error","MemoizedEnumerationInput","memo"],"mappings":";;;;;;;;;AAUA,MAAMA,iCAAmBC,gBACvB,CAAA,CAAC,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,EAAEC,OAAAA,GAAU,EAAE,EAAE,GAAGC,OAAO,EAAEC,GAAAA,GAAAA;IACrE,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAC1B,IAAA,MAAMC,QAAQC,aAASX,CAAAA,IAAAA,CAAAA;AACvB,IAAA,MAAMY,WAAWC,qCAAmCb,CAAAA,IAAAA,CAAAA;IAEpD,MAAMc,YAAAA,GAAeC,6BAAgBR,GAAKK,EAAAA,QAAAA,CAAAA;IAE1C,qBACEI,eAAA,CAACC,mBAAMC,IAAI,EAAA;AAACC,QAAAA,KAAAA,EAAOT,MAAMS,KAAK;QAAEnB,IAAMA,EAAAA,IAAAA;QAAMG,IAAMA,EAAAA,IAAAA;QAAMF,QAAUA,EAAAA,QAAAA;;AAChE,0BAAAmB,cAAA,CAACH,mBAAMI,KAAK,EAAA;gBAACC,MAAQlB,EAAAA,WAAAA;AAAcF,gBAAAA,QAAAA,EAAAA;;0BACnCc,eAACO,CAAAA,yBAAAA,EAAAA;gBACChB,GAAKO,EAAAA,YAAAA;AACLU,gBAAAA,QAAAA,EAAU,CAACC,KAAAA,GAAAA;oBACTf,KAAMc,CAAAA,QAAQ,CAACxB,IAAMyB,EAAAA,KAAAA,CAAAA;AACvB,iBAAA;AACAA,gBAAAA,KAAAA,EAAOf,MAAMe,KAAK;AACjB,gBAAA,GAAGnB,KAAK;;kCAETc,cAACM,CAAAA,+BAAAA,EAAAA;wBAAmBD,KAAM,EAAA,EAAA;wBAAGE,QAAU1B,EAAAA,QAAAA;wBAAU2B,MAAQ3B,EAAAA,QAAAA;kCACtDO,aAAc,CAAA;4BACbqB,EAAI,EAAA,2CAAA;4BACJC,cAAgB,EAAA;AAClB,yBAAA;;oBAEDzB,OAAQ0B,CAAAA,GAAG,CAAC,CAAC,EAAEN,KAAK,EAAEvB,KAAK,EAAEyB,QAAQ,EAAEC,MAAM,EAAE,GAAA;AAC9C,wBAAA,qBACER,cAACM,CAAAA,+BAAAA,EAAAA;4BAA+BD,KAAOA,EAAAA,KAAAA;4BAAOE,QAAUA,EAAAA,QAAAA;4BAAUC,MAAQA,EAAAA,MAAAA;sCACvE1B,KAASuB,IAAAA;AADaA,yBAAAA,EAAAA,KAAAA,CAAAA;AAI7B,qBAAA;;;AAEF,0BAAAL,cAAA,CAACH,mBAAMe,IAAI,EAAA,EAAA,CAAA;AACX,0BAAAZ,cAAA,CAACH,mBAAMgB,KAAK,EAAA,EAAA;;;AAGlB,CAAA,CAAA;AAGF,MAAMC,yCAA2BC,UAAKrC,CAAAA,gBAAAA;;;;"}