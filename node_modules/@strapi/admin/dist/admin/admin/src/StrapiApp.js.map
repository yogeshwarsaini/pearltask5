{"version":3,"file":"StrapiApp.js","sources":["../../../../admin/src/StrapiApp.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { darkTheme, lightTheme } from '@strapi/design-system';\nimport { User } from '@strapi/icons';\nimport invariant from 'invariant';\nimport isFunction from 'lodash/isFunction';\nimport merge from 'lodash/merge';\nimport pick from 'lodash/pick';\nimport { RouterProvider } from 'react-router-dom';\nimport { DefaultTheme } from 'styled-components';\n\nimport { ADMIN_PERMISSIONS_EE } from '../../ee/admin/src/constants';\n\nimport Logo from './assets/images/logo-strapi-2022.svg';\nimport { ADMIN_PERMISSIONS_CE, HOOKS } from './constants';\nimport { CustomFields } from './core/apis/CustomFields';\nimport { Plugin, PluginConfig } from './core/apis/Plugin';\nimport { RBAC, RBACMiddleware } from './core/apis/rbac';\nimport { Router, StrapiAppSetting, UnloadedSettingsLink } from './core/apis/router';\nimport { Widgets } from './core/apis/Widgets';\nimport { RootState, Store, configureStore } from './core/store/configure';\nimport { getBasename } from './core/utils/basename';\nimport { Handler, createHook } from './core/utils/createHook';\nimport {\n  THEME_LOCAL_STORAGE_KEY,\n  LANGUAGE_LOCAL_STORAGE_KEY,\n  ThemeName,\n  getStoredToken,\n} from './reducer';\nimport { getInitialRoutes } from './router';\nimport { languageNativeNames } from './translations/languageNativeNames';\n\nimport type { ReducersMapObject, Middleware } from '@reduxjs/toolkit';\n\nconst {\n  INJECT_COLUMN_IN_TABLE,\n  MUTATE_COLLECTION_TYPES_LINKS,\n  MUTATE_EDIT_VIEW_LAYOUT,\n  MUTATE_SINGLE_TYPES_LINKS,\n} = HOOKS;\n\ninterface StrapiAppConstructorArgs extends Partial<Pick<StrapiApp, 'appPlugins'>> {\n  config?: {\n    auth?: { logo: string };\n    head?: { favicon: string };\n    locales?: string[];\n    menu?: { logo: string };\n    notifications?: { releases: boolean };\n    theme?: { light: DefaultTheme; dark: DefaultTheme };\n    translations?: Record<string, Record<string, string>>;\n    tutorials?: boolean;\n  };\n}\n\ntype Translation = { data: Record<string, string>; locale: string };\ntype Translations = Array<Translation>;\n\ninterface StrapiAppPlugin {\n  bootstrap?: (\n    args: Pick<StrapiApp, 'addSettingsLink' | 'addSettingsLinks' | 'getPlugin' | 'registerHook'>\n  ) => void;\n  register: (app: StrapiApp) => void;\n  registerTrads?: (args: { locales: string[] }) => Promise<Translations>;\n}\n\ninterface InjectionZoneComponent {\n  Component: React.ComponentType;\n  name: string;\n  // TODO: in theory this could receive and forward any React component prop\n  // but in practice there only seems to be once instance, where `slug` is\n  // forwarded. The type needs to become either more generic or we disallow\n  // prop spreading and offer a different way to access context data.\n  slug: string;\n}\n\ninterface Component {\n  name: string;\n  Component: React.ComponentType;\n}\n\ninterface Field {\n  type: string;\n  Component: React.ComponentType;\n}\n\ninterface Library {\n  fields: Record<Field['type'], Field['Component']>;\n  components: Record<Component['name'], Component['Component']>;\n}\n\nclass StrapiApp {\n  appPlugins: Record<string, StrapiAppPlugin>;\n  plugins: Record<string, Plugin> = {};\n  hooksDict: Record<string, ReturnType<typeof createHook>> = {};\n\n  admin = {\n    injectionZones: {},\n  };\n\n  translations: StrapiApp['configurations']['translations'] = {};\n\n  configurations = {\n    authLogo: Logo,\n    head: { favicon: '' },\n    locales: ['en'],\n    menuLogo: Logo,\n    notifications: { releases: true },\n    themes: { light: lightTheme, dark: darkTheme },\n    translations: {},\n    tutorials: true,\n  };\n\n  /**\n   * APIs\n   */\n  rbac = new RBAC();\n  router: Router;\n  library: Library = {\n    components: {},\n    fields: {},\n  };\n  middlewares: Array<() => Middleware<object, RootState>> = [];\n  reducers: ReducersMapObject = {};\n  store: Store | null = null;\n  customFields = new CustomFields();\n  widgets = new Widgets();\n\n  constructor({ config, appPlugins }: StrapiAppConstructorArgs = {}) {\n    this.appPlugins = appPlugins || {};\n\n    this.createCustomConfigurations(config ?? {});\n\n    this.createHook(INJECT_COLUMN_IN_TABLE);\n    this.createHook(MUTATE_COLLECTION_TYPES_LINKS);\n    this.createHook(MUTATE_SINGLE_TYPES_LINKS);\n    this.createHook(MUTATE_EDIT_VIEW_LAYOUT);\n\n    this.router = new Router(getInitialRoutes());\n  }\n\n  addComponents = (components: Component | Component[]) => {\n    if (Array.isArray(components)) {\n      components.map((comp) => {\n        invariant(comp.Component, 'A Component must be provided');\n        invariant(comp.name, 'A type must be provided');\n\n        this.library.components[comp.name] = comp.Component;\n      });\n    } else {\n      invariant(components.Component, 'A Component must be provided');\n      invariant(components.name, 'A type must be provided');\n\n      this.library.components[components.name] = components.Component;\n    }\n  };\n\n  addFields = (fields: Field | Field[]) => {\n    if (Array.isArray(fields)) {\n      fields.map((field) => {\n        invariant(field.Component, 'A Component must be provided');\n        invariant(field.type, 'A type must be provided');\n\n        this.library.fields[field.type] = field.Component;\n      });\n    } else {\n      invariant(fields.Component, 'A Component must be provided');\n      invariant(fields.type, 'A type must be provided');\n\n      this.library.fields[fields.type] = fields.Component;\n    }\n  };\n\n  addMiddlewares = (middlewares: StrapiApp['middlewares']) => {\n    middlewares.forEach((middleware) => {\n      this.middlewares.push(middleware);\n    });\n  };\n\n  addRBACMiddleware = (m: RBACMiddleware | RBACMiddleware[]) => {\n    if (Array.isArray(m)) {\n      this.rbac.use(m);\n    } else {\n      this.rbac.use(m);\n    }\n  };\n\n  addReducers = (reducers: ReducersMapObject) => {\n    /**\n     * TODO: when we upgrade to redux-toolkit@2 and we can also dynamically add middleware,\n     * we'll deprecate these two APIs in favour of their hook counterparts.\n     */\n    Object.entries(reducers).forEach(([name, reducer]) => {\n      this.reducers[name] = reducer;\n    });\n  };\n\n  addMenuLink = (link: Parameters<typeof this.router.addMenuLink>[0]) =>\n    this.router.addMenuLink(link);\n\n  /**\n   * @deprecated use `addSettingsLink` instead, it internally supports\n   * adding multiple links at once.\n   */\n  addSettingsLinks = (sectionId: string, links: UnloadedSettingsLink[]) => {\n    invariant(Array.isArray(links), 'TypeError expected links to be an array');\n\n    this.router.addSettingsLink(sectionId, links);\n  };\n\n  /**\n   * @deprecated use `addSettingsLink` instead, you can pass a section object to\n   * create the section and links at the same time.\n   */\n  createSettingSection = (\n    section: Pick<StrapiAppSetting, 'id' | 'intlLabel'>,\n    links: UnloadedSettingsLink[]\n  ) => this.router.addSettingsLink(section, links);\n\n  addSettingsLink = (\n    sectionId: string | Pick<StrapiAppSetting, 'id' | 'intlLabel'>,\n    link: UnloadedSettingsLink\n  ) => {\n    this.router.addSettingsLink(sectionId, link);\n  };\n\n  async bootstrap(customBootstrap?: unknown) {\n    Object.keys(this.appPlugins).forEach((plugin) => {\n      const bootstrap = this.appPlugins[plugin].bootstrap;\n\n      if (bootstrap) {\n        bootstrap({\n          addSettingsLink: this.addSettingsLink,\n          addSettingsLinks: this.addSettingsLinks,\n          getPlugin: this.getPlugin,\n          registerHook: this.registerHook,\n        });\n      }\n    });\n\n    if (isFunction(customBootstrap)) {\n      customBootstrap({\n        addComponents: this.addComponents,\n        addFields: this.addFields,\n        addMenuLink: this.addMenuLink,\n        addReducers: this.addReducers,\n        addSettingsLink: this.addSettingsLink,\n        addSettingsLinks: this.addSettingsLinks,\n        getPlugin: this.getPlugin,\n        registerHook: this.registerHook,\n      });\n    }\n  }\n\n  createCustomConfigurations = (customConfig: NonNullable<StrapiAppConstructorArgs['config']>) => {\n    if (customConfig.locales) {\n      this.configurations.locales = [\n        'en',\n        ...(customConfig.locales?.filter((loc) => loc !== 'en') || []),\n      ];\n    }\n\n    if (customConfig.auth?.logo) {\n      this.configurations.authLogo = customConfig.auth.logo;\n    }\n\n    if (customConfig.menu?.logo) {\n      this.configurations.menuLogo = customConfig.menu.logo;\n    }\n\n    if (customConfig.head?.favicon) {\n      this.configurations.head.favicon = customConfig.head.favicon;\n    }\n\n    if (customConfig.theme) {\n      const darkTheme = customConfig.theme.dark;\n      const lightTheme = customConfig.theme.light;\n\n      if (!darkTheme && !lightTheme) {\n        console.warn(\n          `[deprecated] In future versions, Strapi will stop supporting this theme customization syntax. The theme configuration accepts a light and a dark key to customize each theme separately. See https://docs.strapi.io/developer-docs/latest/development/admin-customization.html#theme-extension.`.trim()\n        );\n        merge(this.configurations.themes.light, customConfig.theme);\n      }\n\n      if (lightTheme) merge(this.configurations.themes.light, lightTheme);\n\n      if (darkTheme) merge(this.configurations.themes.dark, darkTheme);\n    }\n\n    if (customConfig.notifications?.releases !== undefined) {\n      this.configurations.notifications.releases = customConfig.notifications.releases;\n    }\n\n    if (customConfig.tutorials !== undefined) {\n      this.configurations.tutorials = customConfig.tutorials;\n    }\n  };\n\n  createHook = (name: string) => {\n    this.hooksDict[name] = createHook();\n  };\n\n  getAdminInjectedComponents = (\n    moduleName: string,\n    containerName: string,\n    blockName: string\n  ): InjectionZoneComponent[] => {\n    try {\n      // @ts-expect-error – we have a catch block so if you don't pass it correctly we still return an array.\n      return this.admin.injectionZones[moduleName][containerName][blockName] || [];\n    } catch (err) {\n      console.error('Cannot get injected component', err);\n\n      return [];\n    }\n  };\n\n  getPlugin = (pluginId: PluginConfig['id']) => this.plugins[pluginId];\n\n  async register(customRegister?: unknown) {\n    this.widgets.register([\n      {\n        icon: User,\n        title: {\n          id: 'widget.profile.title',\n          defaultMessage: 'Profile',\n        },\n        component: async () => {\n          const { ProfileWidget } = await import('./components/Widgets');\n          return ProfileWidget;\n        },\n        pluginId: 'admin',\n        id: 'profile-info',\n        link: {\n          label: {\n            id: 'global.profile.settings',\n            defaultMessage: 'Profile settings',\n          },\n          href: '/me',\n        },\n      },\n    ]);\n\n    Object.keys(this.appPlugins).forEach((plugin) => {\n      this.appPlugins[plugin].register(this);\n    });\n\n    if (isFunction(customRegister)) {\n      customRegister(this);\n    }\n  }\n\n  async loadAdminTrads() {\n    const adminLocales = await Promise.all(\n      this.configurations.locales.map(async (locale) => {\n        try {\n          const { default: data } = await import(`./translations/${locale}.js`);\n\n          return { data, locale };\n        } catch {\n          try {\n            const { default: data } = await import(`./translations/${locale}.json`);\n            return { data, locale };\n          } catch {\n            return { data: null, locale };\n          }\n        }\n      })\n    );\n\n    return adminLocales.reduce<{ [locale: string]: Record<string, string> }>((acc, current) => {\n      if (current.data) {\n        acc[current.locale] = current.data;\n      }\n\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Load the application's translations and merged the custom translations\n   * with the default ones.\n   */\n  async loadTrads(customTranslations: Record<string, Record<string, string>> = {}) {\n    const adminTranslations = await this.loadAdminTrads();\n\n    const arrayOfPromises = Object.keys(this.appPlugins)\n      .map((plugin) => {\n        const registerTrads = this.appPlugins[plugin].registerTrads;\n\n        if (registerTrads) {\n          return registerTrads({ locales: this.configurations.locales });\n        }\n\n        return null;\n      })\n      .filter((a) => a);\n\n    const pluginsTrads = (await Promise.all(arrayOfPromises)) as Array<Translation[]>;\n    const mergedTrads = pluginsTrads.reduce<{ [locale: string]: Translation['data'] }>(\n      (acc, currentPluginTrads) => {\n        const pluginTrads = currentPluginTrads.reduce<{ [locale: string]: Translation['data'] }>(\n          (acc1, current) => {\n            acc1[current.locale] = current.data;\n\n            return acc1;\n          },\n          {}\n        );\n\n        Object.keys(pluginTrads).forEach((locale) => {\n          acc[locale] = { ...acc[locale], ...pluginTrads[locale] };\n        });\n\n        return acc;\n      },\n      {}\n    );\n\n    const translations = this.configurations.locales.reduce<{\n      [locale: string]: Translation['data'];\n    }>((acc, current) => {\n      acc[current] = {\n        ...adminTranslations[current],\n        ...(mergedTrads[current] || {}),\n        ...(customTranslations[current] ?? {}),\n      };\n\n      return acc;\n    }, {});\n\n    this.configurations.translations = translations;\n\n    return Promise.resolve();\n  }\n\n  registerHook = (name: string, fn: Handler) => {\n    invariant(\n      this.hooksDict[name],\n      `The hook ${name} is not defined. You are trying to register a hook that does not exist in the application.`\n    );\n    this.hooksDict[name].register(fn);\n  };\n\n  registerPlugin = (pluginConf: PluginConfig) => {\n    const plugin = new Plugin(pluginConf);\n\n    this.plugins[plugin.pluginId] = plugin;\n  };\n\n  runHookSeries = (name: string, asynchronous = false) =>\n    asynchronous ? this.hooksDict[name].runSeriesAsync() : this.hooksDict[name].runSeries();\n\n  runHookWaterfall = <T,>(name: string, initialValue: T, store?: Store) => {\n    return this.hooksDict[name].runWaterfall(initialValue, store);\n  };\n\n  runHookParallel = (name: string) => this.hooksDict[name].runParallel();\n\n  render() {\n    const localeNames = pick(languageNativeNames, this.configurations.locales || []);\n    const locale = (localStorage.getItem(LANGUAGE_LOCAL_STORAGE_KEY) ||\n      'en') as keyof typeof localeNames;\n\n    this.store = configureStore(\n      {\n        admin_app: {\n          permissions: merge({}, ADMIN_PERMISSIONS_CE, ADMIN_PERMISSIONS_EE),\n          theme: {\n            availableThemes: [],\n            currentTheme: (localStorage.getItem(THEME_LOCAL_STORAGE_KEY) || 'system') as ThemeName,\n          },\n          language: {\n            locale: localeNames[locale] ? locale : 'en',\n            localeNames,\n          },\n          token: getStoredToken(),\n        },\n      },\n      this.middlewares,\n      this.reducers\n    ) as Store;\n\n    const router = this.router.createRouter(this, {\n      basename: getBasename(),\n    });\n\n    return <RouterProvider router={router} />;\n  }\n}\n\nexport { StrapiApp };\nexport type { StrapiAppPlugin, StrapiAppConstructorArgs, InjectionZoneComponent };\n"],"names":["INJECT_COLUMN_IN_TABLE","MUTATE_COLLECTION_TYPES_LINKS","MUTATE_EDIT_VIEW_LAYOUT","MUTATE_SINGLE_TYPES_LINKS","HOOKS","StrapiApp","bootstrap","customBootstrap","Object","keys","appPlugins","forEach","plugin","addSettingsLink","addSettingsLinks","getPlugin","registerHook","isFunction","addComponents","addFields","addMenuLink","addReducers","register","customRegister","widgets","icon","User","title","id","defaultMessage","component","ProfileWidget","pluginId","link","label","href","loadAdminTrads","adminLocales","Promise","all","configurations","locales","map","locale","default","data","reduce","acc","current","loadTrads","customTranslations","adminTranslations","arrayOfPromises","registerTrads","filter","a","pluginsTrads","mergedTrads","currentPluginTrads","pluginTrads","acc1","translations","resolve","render","localeNames","pick","languageNativeNames","localStorage","getItem","LANGUAGE_LOCAL_STORAGE_KEY","store","configureStore","admin_app","permissions","merge","ADMIN_PERMISSIONS_CE","ADMIN_PERMISSIONS_EE","theme","availableThemes","currentTheme","THEME_LOCAL_STORAGE_KEY","language","token","getStoredToken","middlewares","reducers","router","createRouter","basename","getBasename","_jsx","RouterProvider","constructor","config","plugins","hooksDict","admin","injectionZones","authLogo","Logo","head","favicon","menuLogo","notifications","releases","themes","light","lightTheme","dark","darkTheme","tutorials","rbac","RBAC","library","components","fields","customFields","CustomFields","Widgets","Array","isArray","comp","invariant","Component","name","field","type","addMiddlewares","middleware","push","addRBACMiddleware","m","use","entries","reducer","sectionId","links","createSettingSection","section","createCustomConfigurations","customConfig","loc","auth","logo","menu","console","warn","trim","undefined","createHook","getAdminInjectedComponents","moduleName","containerName","blockName","err","error","fn","registerPlugin","pluginConf","Plugin","runHookSeries","asynchronous","runSeriesAsync","runSeries","runHookWaterfall","initialValue","runWaterfall","runHookParallel","runParallel","Router","getInitialRoutes"],"mappings":"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"}