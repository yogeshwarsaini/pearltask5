{"version":3,"file":"filters.mjs","sources":["../../../../../admin/src/constants/filters.ts"],"sourcesContent":["import type { Modules } from '@strapi/types';\nimport type { MessageDescriptor } from 'react-intl';\n\n/**\n * @description designed to be parsed by formatMessage from react-intl\n * then passed to a Select component.\n */\ninterface FilterOption {\n  value: Modules.EntityService.Params.Filters.Operator.Where;\n  label: MessageDescriptor;\n}\n\n/**\n * @description these are shared by everyone\n */\nconst BASE_FILTERS = [\n  {\n    label: { id: 'components.FilterOptions.FILTER_TYPES.$eq', defaultMessage: 'is' },\n    value: '$eq',\n  },\n  {\n    label: { id: 'components.FilterOptions.FILTER_TYPES.$ne', defaultMessage: 'is not' },\n    value: '$ne',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$null',\n      defaultMessage: 'is null',\n    },\n    value: '$null',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$notNull',\n      defaultMessage: 'is not null',\n    },\n    value: '$notNull',\n  },\n] satisfies FilterOption[];\n\n/**\n * @description typically performed on attributes that are numerical incl. dates.\n */\nconst NUMERIC_FILTERS = [\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$gt',\n      defaultMessage: 'is greater than',\n    },\n    value: '$gt',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$gte',\n      defaultMessage: 'is greater than or equal to',\n    },\n    value: '$gte',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$lt',\n      defaultMessage: 'is less than',\n    },\n    value: '$lt',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$lte',\n      defaultMessage: 'is less than or equal to',\n    },\n    value: '$lte',\n  },\n] satisfies FilterOption[];\n\nconst IS_SENSITIVE_FILTERS = [\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$eqi',\n      defaultMessage: 'is (case insensitive)',\n    },\n    value: '$eqi',\n  },\n\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$nei',\n      defaultMessage: 'is not (case insensitive)',\n    },\n    value: '$nei',\n  },\n] satisfies FilterOption[];\n\n/**\n * @description typically performed on attributes that are strings for partial looking.\n */\nconst CONTAINS_FILTERS = [\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$contains',\n      defaultMessage: 'contains',\n    },\n    value: '$contains',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$containsi',\n      defaultMessage: 'contains (case insensitive)',\n    },\n    value: '$containsi',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$notContains',\n      defaultMessage: 'not contains',\n    },\n    value: '$notContains',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$notContainsi',\n      defaultMessage: 'not contains (case insensitive)',\n    },\n    value: '$notContainsi',\n  },\n] satisfies FilterOption[];\n\n/**\n * @description only used on string attributes.\n */\nconst STRING_PARSE_FILTERS = [\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$startsWith',\n      defaultMessage: 'starts with',\n    },\n    value: '$startsWith',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$startsWithi',\n      defaultMessage: 'starts with (case insensitive)',\n    },\n    value: '$startsWithi',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$endsWith',\n      defaultMessage: 'ends with',\n    },\n    value: '$endsWith',\n  },\n  {\n    label: {\n      id: 'components.FilterOptions.FILTER_TYPES.$endsWithi',\n      defaultMessage: 'ends with (case insensitive)',\n    },\n    value: '$endsWithi',\n  },\n] satisfies FilterOption[];\n\nconst FILTERS_WITH_NO_VALUE = ['$null', '$notNull'];\n\nexport {\n  BASE_FILTERS,\n  NUMERIC_FILTERS,\n  IS_SENSITIVE_FILTERS,\n  CONTAINS_FILTERS,\n  STRING_PARSE_FILTERS,\n  FILTERS_WITH_NO_VALUE,\n};\nexport type { FilterOption };\n"],"names":["BASE_FILTERS","label","id","defaultMessage","value","NUMERIC_FILTERS","IS_SENSITIVE_FILTERS","CONTAINS_FILTERS","STRING_PARSE_FILTERS","FILTERS_WITH_NO_VALUE"],"mappings":"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"}