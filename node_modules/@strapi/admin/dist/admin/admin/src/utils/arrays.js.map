{"version":3,"file":"arrays.js","sources":["../../../../../admin/src/utils/arrays.ts"],"sourcesContent":["/**\n * @internal\n * @description Mutates a value to be a union of flat values, no arrays allowed.\n */\ntype Flat<T> = T extends string ? T : T extends ArrayLike<any> ? never : T;\n\n/**\n * @internal\n */\ninterface RecursiveArray<T> extends Array<T | RecursiveArray<T>> {}\n/**\n * @internal\n */\ninterface ArrayOfRecursiveArraysOrValues<T> extends ArrayLike<T | RecursiveArray<T>> {}\n\n/**\n * @internal\n *\n * @description Flattens an array recursively.\n */\nconst flattenDeep = <T>(\n  array?: ArrayOfRecursiveArraysOrValues<T> | null | undefined\n): Array<Flat<T>> => {\n  if (Array.isArray(array)) {\n    return array.reduce(\n      (acc, value) => {\n        if (Array.isArray(value)) {\n          acc.push(...flattenDeep(value));\n        } else {\n          acc.push(value);\n        }\n\n        return acc;\n      },\n      [] as Array<Flat<T>>\n    );\n  } else {\n    return [];\n  }\n};\n\nexport { flattenDeep };\nexport type { Flat, RecursiveArray, ArrayOfRecursiveArraysOrValues };\n"],"names":["flattenDeep","array","Array","isArray","reduce","acc","value","push"],"mappings":";;AAAA;;;;;;;IAoBA,MAAMA,cAAc,CAClBC,KAAAA,GAAAA;IAEA,IAAIC,KAAAA,CAAMC,OAAO,CAACF,KAAQ,CAAA,EAAA;AACxB,QAAA,OAAOA,KAAMG,CAAAA,MAAM,CACjB,CAACC,GAAKC,EAAAA,KAAAA,GAAAA;YACJ,IAAIJ,KAAAA,CAAMC,OAAO,CAACG,KAAQ,CAAA,EAAA;gBACxBD,GAAIE,CAAAA,IAAI,IAAIP,WAAYM,CAAAA,KAAAA,CAAAA,CAAAA;aACnB,MAAA;AACLD,gBAAAA,GAAAA,CAAIE,IAAI,CAACD,KAAAA,CAAAA;AACX;YAEA,OAAOD,GAAAA;AACT,SAAA,EACA,EAAE,CAAA;KAEC,MAAA;AACL,QAAA,OAAO,EAAE;AACX;AACF;;;;"}