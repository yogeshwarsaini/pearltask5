{"version":3,"file":"Tracking.js","sources":["../../../../../admin/src/features/Tracking.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport axios, { AxiosResponse } from 'axios';\n\nimport { useInitQuery, useTelemetryPropertiesQuery } from '../services/admin';\n\nimport { useAppInfo } from './AppInfo';\nimport { useAuth } from './Auth';\n\nexport interface TelemetryProperties {\n  useTypescriptOnServer?: boolean;\n  useTypescriptOnAdmin?: boolean;\n  isHostedOnStrapiCloud?: boolean;\n  numberOfAllContentTypes?: number;\n  numberOfComponents?: number;\n  numberOfDynamicZones?: number;\n}\n\nexport interface TrackingContextValue {\n  uuid?: string | boolean;\n  telemetryProperties?: TelemetryProperties;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\nconst TrackingContext = React.createContext<TrackingContextValue>({\n  uuid: false,\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface TrackingProviderProps {\n  children: React.ReactNode;\n}\n\nconst TrackingProvider = ({ children }: TrackingProviderProps) => {\n  const token = useAuth('App', (state) => state.token);\n  const { data: initData } = useInitQuery();\n  const { uuid } = initData ?? {};\n\n  const { data } = useTelemetryPropertiesQuery(undefined, {\n    skip: !initData?.uuid || !token,\n  });\n  const value = React.useMemo(\n    () => ({\n      uuid,\n      telemetryProperties: data,\n    }),\n    [uuid, data]\n  );\n\n  return <TrackingContext.Provider value={value}>{children}</TrackingContext.Provider>;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Hook\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * We can group these events together because none have properties so there's no benefit\n * to having them as separate types.\n *\n * Meanwhile those with properties have different property shapes corresponding to the specific\n * event so understanding which properties go with which event is very helpful.\n */\ninterface EventWithoutProperties {\n  name:\n    | 'changeComponentsOrder'\n    | 'didAddComponentToDynamicZone'\n    | 'didBulkDeleteEntries'\n    | 'didNotBulkDeleteEntries'\n    | 'didChangeDisplayedFields'\n    | 'didCheckDraftRelations'\n    | 'didClickGuidedTourHomepageApiTokens'\n    | 'didClickGuidedTourHomepageContentManager'\n    | 'didClickGuidedTourHomepageContentTypeBuilder'\n    | 'didClickGuidedTourStep1CollectionType'\n    | 'didClickGuidedTourStep2ContentManager'\n    | 'didClickGuidedTourStep3ApiTokens'\n    | 'didClickonBlogSection'\n    | 'didClickonCodeExampleSection'\n    | 'didClickonReadTheDocumentationSection'\n    | 'didClickOnTryStrapiCloudSection'\n    | 'didClickonTutorialSection'\n    | 'didCreateGuidedTourCollectionType'\n    | 'didCreateGuidedTourEntry'\n    | 'didCreateNewRole'\n    | 'didCreateRole'\n    | 'didDeleteToken'\n    | 'didDuplicateRole'\n    | 'didEditEditSettings'\n    | 'didEditEmailTemplates'\n    | 'didEditFieldNameOnContentType'\n    | 'didEditListSettings'\n    | 'didEditMediaLibraryConfig'\n    | 'didEditNameOfContentType'\n    | 'didGenerateGuidedTourApiTokens'\n    | 'didGoToMarketplace'\n    | 'didLaunchGuidedtour'\n    | 'didMissMarketplacePlugin'\n    | 'didNotCreateFirstAdmin'\n    | 'didNotSaveComponent'\n    | 'didPluginLearnMore'\n    | 'didBulkPublishEntries'\n    | 'didNotBulkPublishEntries'\n    | 'didUnpublishEntry'\n    | 'didBulkUnpublishEntries'\n    | 'didNotBulkUnpublishEntries'\n    | 'didSaveComponent'\n    | 'didSaveContentType'\n    | 'didSearch'\n    | 'didSkipGuidedtour'\n    | 'didSubmitPlugin'\n    | 'didSubmitProvider'\n    | 'didUpdateConditions'\n    | 'didSelectAllMediaLibraryElements'\n    | 'didSelectContentTypeFieldSettings'\n    | 'didSelectContentTypeSettings'\n    | 'didEditAuthenticationProvider'\n    | 'didRestoreHistoryVersion'\n    | 'hasClickedCTBAddFieldBanner'\n    | 'removeComponentFromDynamicZone'\n    | 'willAddMoreFieldToContentType'\n    | 'willBulkDeleteEntries'\n    | 'willBulkPublishEntries'\n    | 'willBulkUnpublishEntries'\n    | 'willChangeNumberOfEntriesPerPage'\n    | 'willCheckDraftRelations'\n    | 'willCreateComponent'\n    | 'willCreateComponentFromAttributesModal'\n    | 'willCreateContentType'\n    | 'willCreateFirstAdmin'\n    | 'willCreateNewRole'\n    | 'willCreateRole'\n    | 'willCreateSingleType'\n    | 'willCreateStage'\n    | 'willCreateWorkflow'\n    | 'willDeleteEntryFromList'\n    | 'willDeleteFieldOfContentType'\n    | 'willDuplicateRole'\n    | 'willEditEditLayout'\n    | 'willEditEmailTemplates'\n    | 'willEditEntryFromButton'\n    | 'willEditEntryFromHome'\n    | 'willEditEntryFromList'\n    | 'willEditFieldOfContentType'\n    | 'willEditMediaLibraryConfig'\n    | 'willEditNameOfContentType'\n    | 'willEditNameOfSingleType'\n    | 'willEditAuthenticationProvider'\n    | 'willEditFieldNameOnContentType'\n    | 'willEditStage'\n    | 'willFilterEntries'\n    | 'willInstallPlugin'\n    | 'willUnpublishEntry'\n    | 'willSaveComponent'\n    | 'willSaveContentType'\n    | 'willSaveContentTypeLayout'\n    | 'didEditFieldNameOnContentType'\n    | 'didCreateRelease';\n  properties?: never;\n}\n\ninterface DidAccessAuthenticatedAdministrationEvent {\n  name: 'didAccessAuthenticatedAdministration';\n  properties: {\n    registeredWidgets: string[];\n    projectId: string;\n  };\n}\n\ninterface DidFilterMediaLibraryElementsEvent {\n  name: 'didFilterMediaLibraryElements';\n  properties: MediaEvents['properties'] & {\n    filter: string;\n  };\n}\n\ninterface DidSortMediaLibraryElementsEvent {\n  name: 'didSortMediaLibraryElements';\n  properties: MediaEvents['properties'] & {\n    sort: string;\n  };\n}\n\ninterface DidCropFileEvent {\n  name: 'didCropFile';\n  properties: MediaEvents['properties'] & {\n    duplicatedFile: null | boolean;\n  };\n}\n\ninterface DidSelectFile {\n  name: 'didSelectFile';\n  properties: MediaEvents['properties'] & {\n    source: 'url' | 'computer';\n  };\n}\n\ninterface DidEditMediaLibraryElementsEvent {\n  name: 'didEditMediaLibraryElements';\n  properties: MediaEvents['properties'] & {\n    type: string;\n    changeLocation: string | boolean;\n  };\n}\n\ninterface MediaEvents {\n  name:\n    | 'didSearchMediaLibraryElements'\n    | 'didReplaceMedia'\n    | 'didAddMediaLibraryFolders'\n    | 'willAddMediaLibraryAssets';\n  properties: {\n    location: string;\n  };\n}\n\ninterface DidSelectContentTypeFieldTypeEvent {\n  name: 'didSelectContentTypeFieldType';\n  properties: {\n    type?: string;\n  };\n}\n\ninterface DidChangeModeEvent {\n  name: 'didChangeMode';\n  properties: {\n    newMode: string;\n  };\n}\ninterface DidSubmitWithErrorsFirstAdminEvent {\n  name: 'didSubmitWithErrorsFirstAdmin';\n  properties: {\n    count: string;\n  };\n}\n\ninterface WillNavigateEvent {\n  name: 'willNavigate';\n  properties: {\n    from: string;\n    to: string;\n  };\n}\n\ninterface DidAccessTokenListEvent {\n  name: 'didAccessTokenList';\n  properties: {\n    tokenType: TokenEvents['properties']['tokenType'];\n    number: number;\n  };\n}\ninterface LogoEvent {\n  name: 'didChangeLogo' | 'didClickResetLogo';\n  properties: {\n    logo: 'menu' | 'auth';\n  };\n}\n\ninterface TokenEvents {\n  name:\n    | 'didCopyTokenKey'\n    | 'didAddTokenFromList'\n    | 'didEditTokenFromList'\n    | 'willAccessTokenList'\n    | 'willAddTokenFromList'\n    | 'willCreateToken'\n    | 'willDeleteToken'\n    | 'willEditToken'\n    | 'willEditTokenFromList';\n  properties: {\n    tokenType: 'api-token' | 'transfer-token';\n  };\n}\n\ninterface WillModifyTokenEvent {\n  name: 'didCreateToken' | 'didEditToken';\n  properties: {\n    tokenType: TokenEvents['properties']['tokenType'];\n    type: 'custom' | 'full-access' | 'read-only' | Array<'push' | 'pull' | 'push-pull'>;\n  };\n}\n\ninterface DeleteEntryEvents {\n  name: 'willDeleteEntry' | 'didDeleteEntry' | 'didNotDeleteEntry';\n  properties: {\n    status?: string;\n    error?: unknown;\n  };\n}\n\ninterface CreateEntryEvents {\n  name: 'willCreateEntry' | 'didCreateEntry' | 'didNotCreateEntry';\n  properties: {\n    documentId?: string;\n    status?: string;\n    error?: unknown;\n    fromPreview?: boolean;\n    fromRelationModal?: boolean;\n  };\n}\n\ninterface PublishEntryEvents {\n  name: 'willPublishEntry' | 'didPublishEntry';\n  properties: {\n    documentId?: string;\n    fromPreview?: boolean;\n    fromRelationModal?: boolean;\n  };\n}\n\ninterface UpdateEntryEvents {\n  name: 'willEditEntry' | 'didEditEntry' | 'didNotEditEntry';\n  properties: {\n    documentId?: string;\n    status?: string;\n    error?: unknown;\n    fromPreview?: boolean;\n    fromRelationModal?: boolean;\n  };\n}\n\ninterface DidFilterEntriesEvent {\n  name: 'didFilterEntries';\n  properties: {\n    useRelation: boolean;\n  };\n}\n\ninterface DidPublishRelease {\n  name: 'didPublishRelease';\n  properties: {\n    totalEntries: number;\n    totalPublishedEntries: number;\n    totalUnpublishedEntries: number;\n  };\n}\n\ninterface DidUpdateCTBSchema {\n  name: 'didUpdateCTBSchema';\n  properties: {\n    success: boolean;\n    newContentTypes: number;\n    editedContentTypes: number;\n    deletedContentTypes: number;\n    newComponents: number;\n    editedComponents: number;\n    deletedComponents: number;\n    newFields: number;\n    editedFields: number;\n    deletedFields: number;\n  };\n}\n\ntype EventsWithProperties =\n  | CreateEntryEvents\n  | PublishEntryEvents\n  | DidAccessAuthenticatedAdministrationEvent\n  | DidAccessTokenListEvent\n  | DidChangeModeEvent\n  | DidCropFileEvent\n  | DeleteEntryEvents\n  | DidEditMediaLibraryElementsEvent\n  | DidFilterMediaLibraryElementsEvent\n  | DidFilterEntriesEvent\n  | DidSelectContentTypeFieldTypeEvent\n  | DidSelectFile\n  | DidSortMediaLibraryElementsEvent\n  | DidSubmitWithErrorsFirstAdminEvent\n  | LogoEvent\n  | TokenEvents\n  | UpdateEntryEvents\n  | WillModifyTokenEvent\n  | WillNavigateEvent\n  | DidPublishRelease\n  | MediaEvents\n  | DidUpdateCTBSchema;\n\nexport type TrackingEvent = EventWithoutProperties | EventsWithProperties;\nexport interface UseTrackingReturn {\n  /**\n   * This type helps show all the available event names before you start typing,\n   * however autocomplete isn't great.\n   */\n  trackUsage<TEvent extends TrackingEvent>(\n    event: TEvent['name'],\n    properties: TEvent['properties']\n  ): Promise<null | AxiosResponse<string>>;\n  trackUsage<TEvent extends Extract<TrackingEvent, { properties?: never }>>(\n    event: TEvent['name'],\n    properties?: never\n  ): Promise<null | AxiosResponse<string>>;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trackUsage<TEvent extends Extract<TrackingEvent, { properties: object }>>(\n    event: TEvent['name'],\n    properties: TEvent['properties']\n  ): Promise<null | AxiosResponse<string>>;\n}\n\n/**\n * @description Used to send amplitude events to the Strapi Tracking hub.\n *\n * @example\n * ```tsx\n * import { useTracking } from '@strapi/strapi/admin';\n *\n * const MyComponent = () => {\n *  const { trackUsage } = useTracking();\n *\n *  const handleClick = () => {\n *   trackUsage('my-event', { myProperty: 'myValue' });\n *  }\n *\n *  return <button onClick={handleClick}>Send Event</button>\n * }\n * ```\n */\nconst useTracking = (): UseTrackingReturn => {\n  const { uuid, telemetryProperties } = React.useContext(TrackingContext);\n  const userId = useAppInfo('useTracking', (state) => state.userId);\n  const trackUsage = React.useCallback(\n    async <TEvent extends TrackingEvent>(\n      event: TEvent['name'],\n      properties?: TEvent['properties']\n    ) => {\n      try {\n        if (uuid && !window.strapi.telemetryDisabled) {\n          const res = await axios.post<string>(\n            'https://analytics.strapi.io/api/v2/track',\n            {\n              event,\n              userId,\n              eventProperties: { ...properties },\n              userProperties: {},\n              groupProperties: {\n                ...telemetryProperties,\n                projectId: uuid,\n                projectType: window.strapi.projectType,\n              },\n            },\n            {\n              headers: {\n                'Content-Type': 'application/json',\n                'X-Strapi-Event': event,\n              },\n            }\n          );\n\n          return res;\n        }\n      } catch (err) {\n        // Silence is golden\n      }\n\n      return null;\n    },\n    [telemetryProperties, userId, uuid]\n  );\n\n  return { trackUsage };\n};\n\nexport { TrackingProvider, useTracking };\n"],"names":["TrackingContext","React","createContext","uuid","TrackingProvider","children","token","useAuth","state","data","initData","useInitQuery","useTelemetryPropertiesQuery","undefined","skip","value","useMemo","telemetryProperties","_jsx","Provider","useTracking","useContext","userId","useAppInfo","trackUsage","useCallback","event","properties","window","strapi","telemetryDisabled","res","axios","post","eventProperties","userProperties","groupProperties","projectId","projectType","headers","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEkG,qGAElG,MAAMA,eAAAA,iBAAkBC,gBAAMC,CAAAA,aAAa,CAAuB;IAChEC,IAAM,EAAA;AACR,CAAA,CAAA;AAUA,MAAMC,gBAAmB,GAAA,CAAC,EAAEC,QAAQ,EAAyB,GAAA;AAC3D,IAAA,MAAMC,QAAQC,YAAQ,CAAA,KAAA,EAAO,CAACC,KAAAA,GAAUA,MAAMF,KAAK,CAAA;AACnD,IAAA,MAAM,EAAEG,IAAAA,EAAMC,QAAQ,EAAE,GAAGC,kBAAAA,EAAAA;AAC3B,IAAA,MAAM,EAAER,IAAI,EAAE,GAAGO,YAAY,EAAC;AAE9B,IAAA,MAAM,EAAED,IAAI,EAAE,GAAGG,kCAA4BC,SAAW,EAAA;QACtDC,IAAM,EAAA,CAACJ,QAAUP,EAAAA,IAAAA,IAAQ,CAACG;AAC5B,KAAA,CAAA;AACA,IAAA,MAAMS,KAAQd,GAAAA,gBAAAA,CAAMe,OAAO,CACzB,KAAO;AACLb,YAAAA,IAAAA;YACAc,mBAAqBR,EAAAA;AACvB,SAAA,CACA,EAAA;AAACN,QAAAA,IAAAA;AAAMM,QAAAA;AAAK,KAAA,CAAA;IAGd,qBAAOS,cAAA,CAAClB,gBAAgBmB,QAAQ,EAAA;QAACJ,KAAOA,EAAAA,KAAAA;AAAQV,QAAAA,QAAAA,EAAAA;;AAClD;AA4VA;;;;;;;;;;;;;;;;;AAiBC,UACKe,WAAc,GAAA,IAAA;IAClB,MAAM,EAAEjB,IAAI,EAAEc,mBAAmB,EAAE,GAAGhB,gBAAAA,CAAMoB,UAAU,CAACrB,eAAAA,CAAAA;AACvD,IAAA,MAAMsB,SAASC,kBAAW,CAAA,aAAA,EAAe,CAACf,KAAAA,GAAUA,MAAMc,MAAM,CAAA;AAChE,IAAA,MAAME,UAAavB,GAAAA,gBAAAA,CAAMwB,WAAW,CAClC,OACEC,KACAC,EAAAA,UAAAA,GAAAA;QAEA,IAAI;AACF,YAAA,IAAIxB,QAAQ,CAACyB,MAAAA,CAAOC,MAAM,CAACC,iBAAiB,EAAE;AAC5C,gBAAA,MAAMC,GAAM,GAAA,MAAMC,KAAMC,CAAAA,IAAI,CAC1B,0CACA,EAAA;AACEP,oBAAAA,KAAAA;AACAJ,oBAAAA,MAAAA;oBACAY,eAAiB,EAAA;AAAE,wBAAA,GAAGP;AAAW,qBAAA;AACjCQ,oBAAAA,cAAAA,EAAgB,EAAC;oBACjBC,eAAiB,EAAA;AACf,wBAAA,GAAGnB,mBAAmB;wBACtBoB,SAAWlC,EAAAA,IAAAA;wBACXmC,WAAaV,EAAAA,MAAAA,CAAOC,MAAM,CAACS;AAC7B;iBAEF,EAAA;oBACEC,OAAS,EAAA;wBACP,cAAgB,EAAA,kBAAA;wBAChB,gBAAkBb,EAAAA;AACpB;AACF,iBAAA,CAAA;gBAGF,OAAOK,GAAAA;AACT;AACF,SAAA,CAAE,OAAOS,GAAK,EAAA;;AAEd;QAEA,OAAO,IAAA;KAET,EAAA;AAACvB,QAAAA,mBAAAA;AAAqBK,QAAAA,MAAAA;AAAQnB,QAAAA;AAAK,KAAA,CAAA;IAGrC,OAAO;AAAEqB,QAAAA;AAAW,KAAA;AACtB;;;;;"}