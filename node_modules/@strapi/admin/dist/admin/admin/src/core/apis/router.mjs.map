{"version":3,"file":"router.mjs","sources":["../../../../../../admin/src/core/apis/router.tsx"],"sourcesContent":["/* eslint-disable check-file/filename-naming-convention */\nimport * as React from 'react';\n\nimport invariant from 'invariant';\nimport { MessageDescriptor, PrimitiveType } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { createBrowserRouter, createMemoryRouter, RouteObject } from 'react-router-dom';\n\nimport { App } from '../../App';\nimport { ErrorElement } from '../../components/ErrorElement';\nimport { LanguageProvider } from '../../components/LanguageProvider';\nimport { Theme } from '../../components/Theme';\nimport { Permission } from '../../features/Auth';\nimport { NotFoundPage } from '../../pages/NotFoundPage';\nimport { getImmutableRoutes } from '../../router';\nimport { StrapiApp } from '../../StrapiApp';\n\ntype IRouter = ReturnType<typeof createBrowserRouter> | ReturnType<typeof createMemoryRouter>;\n\ntype Reducer<Config extends object> = (prev: Config[]) => Config[];\n\ninterface MenuItem {\n  to: string;\n  icon: React.ElementType;\n  intlLabel: MessageDescriptor & { values?: Record<string, PrimitiveType> };\n  permissions: Permission[];\n  notificationsCount?: number;\n  Component?: React.LazyExoticComponent<React.ComponentType>;\n  exact?: boolean;\n  position?: number;\n  licenseOnly?: boolean;\n}\n\ninterface StrapiAppSettingLink extends Omit<MenuItem, 'icon' | 'notificationCount'> {\n  id: string;\n}\n\ninterface UnloadedSettingsLink extends Omit<StrapiAppSettingLink, 'Component'> {\n  Component?: () => Promise<{ default: React.ComponentType }>;\n}\n\ninterface StrapiAppSetting {\n  id: string;\n  intlLabel: MessageDescriptor & {\n    values?: Record<string, PrimitiveType>;\n  };\n  links: Omit<StrapiAppSettingLink, 'Component'>[];\n}\n\ninterface RouterOptions {\n  basename?: string;\n  memory?: boolean;\n}\n\nclass Router {\n  private _routes: RouteObject[] = [];\n  private router: IRouter | null = null;\n  private _menu: Omit<MenuItem, 'Component'>[] = [];\n  private _settings: Record<string, StrapiAppSetting> = {\n    global: {\n      id: 'global',\n      intlLabel: {\n        id: 'Settings.global',\n        defaultMessage: 'Global Settings',\n      },\n      links: [],\n    },\n  };\n\n  constructor(initialRoutes: RouteObject[]) {\n    this._routes = initialRoutes;\n  }\n\n  get routes() {\n    return this._routes;\n  }\n\n  get menu() {\n    return this._menu;\n  }\n\n  get settings() {\n    return this._settings;\n  }\n\n  /**\n   * @internal This method is used internally by Strapi to create the router.\n   * It should not be used by plugins, doing so will likely break the application.\n   */\n  createRouter(strapi: StrapiApp, { memory, ...opts }: RouterOptions = {}) {\n    const routes = [\n      {\n        path: '/*',\n        errorElement: (\n          <Provider store={strapi.store!}>\n            <LanguageProvider messages={strapi.configurations.translations}>\n              <Theme themes={strapi.configurations.themes}>\n                <ErrorElement />\n              </Theme>\n            </LanguageProvider>\n          </Provider>\n        ),\n        element: <App strapi={strapi} store={strapi.store!} />,\n        children: [\n          ...getImmutableRoutes(),\n          {\n            path: '/*',\n            lazy: async () => {\n              const { PrivateAdminLayout } = await import('../../layouts/AuthenticatedLayout');\n\n              return {\n                Component: PrivateAdminLayout,\n              };\n            },\n            children: [\n              ...this.routes,\n              {\n                path: '*',\n                element: <NotFoundPage />,\n              },\n            ],\n          },\n        ],\n      },\n    ];\n\n    if (memory) {\n      this.router = createMemoryRouter(routes, opts);\n    } else {\n      this.router = createBrowserRouter(routes, opts);\n    }\n\n    return this.router;\n  }\n\n  public addMenuLink = (\n    link: Omit<MenuItem, 'Component'> & {\n      Component: () => Promise<{ default: React.ComponentType }>;\n    }\n  ) => {\n    invariant(link.to, `[${link.intlLabel.defaultMessage}]: link.to should be defined`);\n    invariant(\n      typeof link.to === 'string',\n      `[${\n        link.intlLabel.defaultMessage\n      }]: Expected link.to to be a string instead received ${typeof link.to}`\n    );\n    invariant(\n      link.intlLabel?.id && link.intlLabel?.defaultMessage,\n      `[${link.intlLabel.defaultMessage}]: link.intlLabel.id & link.intlLabel.defaultMessage should be defined`\n    );\n    invariant(\n      !link.Component || (link.Component && typeof link.Component === 'function'),\n      `[${link.intlLabel.defaultMessage}]: link.Component must be a function returning a Promise that returns a default component. Please use: \\`Component: () => import(path)\\` instead.`\n    );\n\n    if (\n      !link.Component ||\n      (link.Component &&\n        typeof link.Component === 'function' &&\n        // @ts-expect-error – shh\n        link.Component[Symbol.toStringTag] === 'AsyncFunction')\n    ) {\n      console.warn(\n        `\n      [${link.intlLabel.defaultMessage}]: [deprecated] addMenuLink() was called with an async Component from the plugin \"${link.intlLabel.defaultMessage}\". This will be removed in the future. Please use: \\`Component: () => import(path)\\` ensuring you return a default export instead.\n      `.trim()\n      );\n    }\n\n    if (link.to.startsWith('/')) {\n      console.warn(\n        `[${link.intlLabel.defaultMessage}]: the \\`to\\` property of your menu link is an absolute path, it should be relative to the root of the application. This has been corrected for you but will be removed in a future version of Strapi.`\n      );\n\n      link.to = link.to.slice(1);\n    }\n\n    const { Component, ...restLink } = link;\n\n    if (Component) {\n      this._routes.push({\n        path: `${link.to}/*`,\n        lazy: async () => {\n          const mod = await Component();\n\n          if ('default' in mod) {\n            return { Component: mod.default };\n          } else {\n            return { Component: mod };\n          }\n        },\n      });\n    }\n\n    this.menu.push(restLink);\n  };\n\n  public addSettingsLink(\n    section: Pick<StrapiAppSetting, 'id' | 'intlLabel'> & { links: UnloadedSettingsLink[] },\n    links?: never\n  ): void;\n  public addSettingsLink(\n    sectionId: string | Pick<StrapiAppSetting, 'id' | 'intlLabel'>,\n    link: UnloadedSettingsLink\n  ): void;\n  public addSettingsLink(\n    sectionId: string | Pick<StrapiAppSetting, 'id' | 'intlLabel'>,\n    link: UnloadedSettingsLink[]\n  ): void;\n  public addSettingsLink(\n    section:\n      | string\n      | Pick<StrapiAppSetting, 'id' | 'intlLabel'>\n      | (Pick<StrapiAppSetting, 'id' | 'intlLabel'> & { links: UnloadedSettingsLink[] }),\n    link?: UnloadedSettingsLink | UnloadedSettingsLink[]\n  ): void {\n    if (typeof section === 'object' && 'links' in section) {\n      /**\n       * Someone has passed an entire pre-configured section object\n       */\n      invariant(section.id, 'section.id should be defined');\n      invariant(\n        section.intlLabel?.id && section.intlLabel?.defaultMessage,\n        'section.intlLabel should be defined'\n      );\n      invariant(this.settings[section.id] === undefined, 'A similar section already exists');\n      invariant(Array.isArray(section.links), 'TypeError expected links to be an array');\n\n      this.settings[section.id] = { ...section, links: [] };\n\n      section.links.forEach((link) => {\n        this.createSettingsLink(section.id, link);\n      });\n    } else if (typeof section === 'object' && link) {\n      /**\n       * we need to create the section first\n       */\n      invariant(section.id, 'section.id should be defined');\n      invariant(\n        section.intlLabel?.id && section.intlLabel?.defaultMessage,\n        'section.intlLabel should be defined'\n      );\n      invariant(this.settings[section.id] === undefined, 'A similar section already exists');\n\n      this.settings[section.id] = { ...section, links: [] };\n\n      if (Array.isArray(link)) {\n        link.forEach((l) => this.createSettingsLink(section.id, l));\n      } else {\n        this.createSettingsLink(section.id, link);\n      }\n    } else if (typeof section === 'string' && link) {\n      if (Array.isArray(link)) {\n        link.forEach((l) => this.createSettingsLink(section, l));\n      } else {\n        this.createSettingsLink(section, link);\n      }\n    } else {\n      throw new Error(\n        'Invalid arguments provided to addSettingsLink, at minimum a sectionId and link are required.'\n      );\n    }\n  }\n\n  private createSettingsLink = (sectionId: string, link: UnloadedSettingsLink) => {\n    invariant(this._settings[sectionId], 'The section does not exist');\n\n    invariant(link.id, `[${link.intlLabel.defaultMessage}]: link.id should be defined`);\n    invariant(\n      link.intlLabel?.id && link.intlLabel?.defaultMessage,\n      `[${link.intlLabel.defaultMessage}]: link.intlLabel.id & link.intlLabel.defaultMessage`\n    );\n    invariant(link.to, `[${link.intlLabel.defaultMessage}]: link.to should be defined`);\n    invariant(\n      !link.Component || (link.Component && typeof link.Component === 'function'),\n      `[${link.intlLabel.defaultMessage}]: link.Component must be a function returning a Promise. Please use: \\`Component: () => import(path)\\` instead.`\n    );\n\n    if (\n      !link.Component ||\n      (link.Component &&\n        typeof link.Component === 'function' &&\n        // @ts-expect-error – shh\n        link.Component[Symbol.toStringTag] === 'AsyncFunction')\n    ) {\n      console.warn(\n        `\n      [${link.intlLabel.defaultMessage}]: [deprecated] addSettingsLink() was called with an async Component from the plugin \"${link.intlLabel.defaultMessage}\". This will be removed in the future. Please use: \\`Component: () => import(path)\\` ensuring you return a default export instead.\n      `.trim()\n      );\n    }\n\n    if (link.to.startsWith('/')) {\n      console.warn(\n        `[${link.intlLabel.defaultMessage}]: the \\`to\\` property of your settings link is an absolute path. It should be relative to \\`/settings\\`. This has been corrected for you but will be removed in a future version of Strapi.`\n      );\n\n      link.to = link.to.slice(1);\n    }\n\n    if (link.to.split('/')[0] === 'settings') {\n      console.warn(\n        `[${link.intlLabel.defaultMessage}]: the \\`to\\` property of your settings link has \\`settings\\` as the first part of it's path. It should be relative to \\`settings\\` and therefore, not include it. This has been corrected for you but will be removed in a future version of Strapi.`\n      );\n\n      link.to = link.to.split('/').slice(1).join('/');\n    }\n\n    const { Component, ...restLink } = link;\n\n    const settingsIndex = this._routes.findIndex((route) => route.path === 'settings/*');\n\n    /**\n     * This shouldn't happen unless someone has removed the settings section completely.\n     * Print a warning if this is the case though.\n     */\n    if (!settingsIndex) {\n      console.warn(\n        'A third party plugin has removed the settings section, the settings link cannot be added.'\n      );\n      return;\n    } else if (!this._routes[settingsIndex].children) {\n      this._routes[settingsIndex].children = [];\n    }\n\n    if (Component) {\n      this._routes[settingsIndex].children!.push({\n        path: `${link.to}/*`,\n        lazy: async () => {\n          const mod = await Component();\n\n          if ('default' in mod) {\n            return { Component: mod.default };\n          } else {\n            return { Component: mod };\n          }\n        },\n      });\n    }\n\n    this._settings[sectionId].links.push(restLink);\n  };\n\n  /**\n   * @alpha\n   * @description Adds a route or an array of routes to the router.\n   * Otherwise, pass a function that receives the current routes and\n   * returns the new routes in a reducer like fashion.\n   */\n  addRoute(route: RouteObject | RouteObject[] | Reducer<RouteObject>) {\n    if (Array.isArray(route)) {\n      this._routes = [...this._routes, ...route];\n    } else if (typeof route === 'object' && route !== null) {\n      this._routes.push(route);\n    } else if (typeof route === 'function') {\n      this._routes = route(this._routes);\n    } else {\n      throw new Error(\n        `Expected the \\`route\\` passed to \\`addRoute\\` to be an array or a function, but received ${getPrintableType(\n          route\n        )}`\n      );\n    }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * getPrintableType\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * @internal\n * @description Gets the human-friendly printable type name for the given value, for instance it will yield\n * `array` instead of `object`, as the native `typeof` operator would do.\n */\nconst getPrintableType = (value: unknown): string => {\n  const nativeType = typeof value;\n\n  if (nativeType === 'object') {\n    if (value === null) return 'null';\n    if (Array.isArray(value)) return 'array';\n    if (value instanceof Object && value.constructor.name !== 'Object') {\n      return value.constructor.name;\n    }\n  }\n\n  return nativeType;\n};\n\nexport { Router };\nexport type { MenuItem, StrapiAppSettingLink, UnloadedSettingsLink, StrapiAppSetting, RouteObject };\n"],"names":["Router","routes","_routes","menu","_menu","settings","_settings","createRouter","strapi","memory","opts","path","errorElement","_jsx","Provider","store","LanguageProvider","messages","configurations","translations","Theme","themes","ErrorElement","element","App","children","getImmutableRoutes","lazy","PrivateAdminLayout","Component","NotFoundPage","router","createMemoryRouter","createBrowserRouter","addSettingsLink","section","link","invariant","id","intlLabel","defaultMessage","undefined","Array","isArray","links","forEach","createSettingsLink","l","Error","addRoute","route","push","getPrintableType","constructor","initialRoutes","global","addMenuLink","to","Symbol","toStringTag","console","warn","trim","startsWith","slice","restLink","mod","default","sectionId","split","join","settingsIndex","findIndex","value","nativeType","Object","name"],"mappings":"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"}