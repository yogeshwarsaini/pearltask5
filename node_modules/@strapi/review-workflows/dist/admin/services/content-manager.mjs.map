{"version":3,"file":"content-manager.mjs","sources":["../../../admin/src/services/content-manager.ts"],"sourcesContent":["import * as Homepage from '../../../shared/contracts/homepage';\n\n/* eslint-disable check-file/filename-naming-convention */\nimport { reviewWorkflowsApi } from './api';\n\nimport type {\n  GetStages,\n  UpdateStage,\n  UpdateAssignee,\n} from '../../../shared/contracts/review-workflows';\nimport type { Contracts } from '@strapi/content-manager/_internal/shared';\n\ntype ContentType = Contracts.ContentTypes.ContentType;\ninterface ContentTypes {\n  collectionType: ContentType[];\n  singleType: ContentType[];\n}\n\nconst SINGLE_TYPES = 'single-types';\n\nconst contentManagerApi = reviewWorkflowsApi\n  .enhanceEndpoints({\n    addTagTypes: ['RecentlyAssignedList', 'RecentDocumentList'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getStages: builder.query<\n        {\n          stages: NonNullable<GetStages.Response['data']>;\n          meta: NonNullable<GetStages.Response['meta']>;\n        },\n        GetStages.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stages`,\n          method: 'GET',\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: GetStages.Response) => {\n          return {\n            meta: res.meta ?? { workflowCount: 0 },\n            stages: res.data ?? [],\n          };\n        },\n        providesTags: ['ReviewWorkflowStages'],\n      }),\n      updateStage: builder.mutation<\n        UpdateStage.Response['data'],\n        UpdateStage.Request['body'] & UpdateStage.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params, ...data }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stage`,\n          method: 'PUT',\n          data,\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: UpdateStage.Response) => res.data,\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\n          return [\n            {\n              type: 'Document',\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\n            },\n            { type: 'Document', id: `${model}_LIST` },\n            'ReviewWorkflowStages',\n          ];\n        },\n      }),\n      updateAssignee: builder.mutation<\n        UpdateAssignee.Response['data'],\n        UpdateAssignee.Request['body'] & UpdateAssignee.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params, ...data }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/assignee`,\n          method: 'PUT',\n          data,\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: UpdateAssignee.Response) => res.data,\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\n          return [\n            {\n              type: 'Document',\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\n            },\n            { type: 'Document', id: `${model}_LIST` },\n            'RecentlyAssignedList',\n          ];\n        },\n      }),\n      getContentTypes: builder.query<ContentTypes, void>({\n        query: () => ({\n          url: `/content-manager/content-types`,\n          method: 'GET',\n        }),\n        transformResponse: (res: { data: Contracts.ContentTypes.ContentType[] }) => {\n          return res.data.reduce<ContentTypes>(\n            (acc, curr) => {\n              if (curr.isDisplayed) {\n                acc[curr.kind].push(curr);\n              }\n              return acc;\n            },\n            {\n              collectionType: [],\n              singleType: [],\n            }\n          );\n        },\n      }),\n      getRecentlyAssignedDocuments: builder.query<\n        Homepage.GetRecentlyAssignedDocuments.Response['data'],\n        void\n      >({\n        query: () => '/review-workflows/homepage/recently-assigned-documents',\n        transformResponse: (response: Homepage.GetRecentlyAssignedDocuments.Response) =>\n          response.data,\n        providesTags: (_, _err) => ['RecentlyAssignedList', 'RecentDocumentList'],\n      }),\n    }),\n    overrideExisting: true,\n  });\n\nconst {\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n  useGetContentTypesQuery,\n  useGetRecentlyAssignedDocumentsQuery,\n} = contentManagerApi;\n\nexport {\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n  useGetContentTypesQuery,\n  useGetRecentlyAssignedDocumentsQuery,\n};\nexport type { ContentTypes, ContentType };\n"],"names":["SINGLE_TYPES","contentManagerApi","reviewWorkflowsApi","enhanceEndpoints","addTagTypes","injectEndpoints","endpoints","builder","getStages","query","model","slug","id","params","url","method","config","transformResponse","res","meta","workflowCount","stages","data","providesTags","updateStage","mutation","invalidatesTags","_result","_error","type","updateAssignee","getContentTypes","reduce","acc","curr","isDisplayed","kind","push","collectionType","singleType","getRecentlyAssignedDocuments","response","_","_err","overrideExisting","useGetStagesQuery","useUpdateStageMutation","useUpdateAssigneeMutation","useGetContentTypesQuery","useGetRecentlyAssignedDocumentsQuery"],"mappings":"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"}