{"version":3,"file":"index.mjs","sources":["../../../../admin/src/routes/settings/index.tsx"],"sourcesContent":["/* eslint-disable check-file/no-index */\n/* eslint-disable check-file/filename-naming-convention */\nimport * as React from 'react';\n\nimport { Page, useTracking, ConfirmDialog, useRBAC, Table } from '@strapi/admin/strapi-admin';\nimport { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\nimport { Flex, IconButton, TFooter, Typography, LinkButton, Dialog } from '@strapi/design-system';\nimport { Pencil, Plus, Trash } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\n\nimport { LimitsModal } from '../../components/LimitsModal';\nimport { CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME } from '../../constants';\nimport { useTypedSelector } from '../../modules/hooks';\nimport { ContentType, useGetContentTypesQuery } from '../../services/content-manager';\n\nimport * as Layout from './components/Layout';\nimport { useReviewWorkflows } from './hooks/useReviewWorkflows';\n\nexport const ReviewWorkflowsListView = () => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const { trackUsage } = useTracking();\n  const [workflowToDelete, setWorkflowToDelete] = React.useState<string | null>(null);\n  const [showLimitModal, setShowLimitModal] = React.useState<boolean>(false);\n  const { data, isLoading: isLoadingModels } = useGetContentTypesQuery();\n  const { meta, workflows, isLoading, delete: deleteAction } = useReviewWorkflows();\n  const { getFeature, isLoading: isLicenseLoading } = useLicenseLimits();\n  const permissions = useTypedSelector(\n    (state) => state.admin_app.permissions.settings?.['review-workflows']\n  );\n  const {\n    allowedActions: { canCreate, canRead, canUpdate, canDelete },\n  } = useRBAC(permissions);\n\n  const limits = getFeature('review-workflows');\n  const numberOfWorkflows = limits?.[CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME] as string;\n\n  const handleDeleteWorkflow = (workflowId: string) => {\n    setWorkflowToDelete(workflowId);\n  };\n\n  const toggleConfirmDeleteDialog = () => {\n    setWorkflowToDelete(null);\n  };\n\n  const handleConfirmDeleteDialog = async () => {\n    if (!workflowToDelete) return;\n\n    await deleteAction(workflowToDelete);\n\n    setWorkflowToDelete(null);\n  };\n\n  const handleCreateClick: React.MouseEventHandler<HTMLAnchorElement> &\n    ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) = (event) => {\n    event.preventDefault();\n    /**\n     * If the current license has a workflow limit:\n     * check if the total count of workflows exceeds that limit. If so,\n     * prevent the navigation and show the limits overlay.\n     *\n     * If the current license does not have a limit (e.g. offline license):\n     * allow the user to navigate to the create-view. In case they exceed the\n     * current hard-limit of 200 they will see an error thrown by the API.\n     */\n\n    if (numberOfWorkflows && meta && meta?.workflowCount >= parseInt(numberOfWorkflows, 10)) {\n      event.preventDefault();\n      setShowLimitModal(true);\n    } else {\n      navigate('create');\n      trackUsage('willCreateWorkflow');\n    }\n  };\n\n  /**\n   * If the current license has a limit:\n   * check if the total count of workflows or stages exceeds that limit and display\n   * the limits modal on page load. It can be closed by the user, but the\n   * API will throw an error in case they try to create a new workflow or update the\n   * stages.\n   *\n   * If the current license does not have a limit (e.g. offline license):\n   * do nothing (for now). In case they are trying to create the 201st workflow/ stage\n   * the API will throw an error.\n   *\n   */\n  React.useEffect(() => {\n    if (!isLoading && !isLicenseLoading) {\n      if (numberOfWorkflows && meta && meta?.workflowCount > parseInt(numberOfWorkflows, 10)) {\n        setShowLimitModal(true);\n      }\n    }\n  }, [isLicenseLoading, isLoading, meta, meta?.workflowCount, numberOfWorkflows]);\n\n  const headers = [\n    {\n      label: formatMessage({\n        id: 'Settings.review-workflows.list.page.list.column.name.title',\n        defaultMessage: 'Name',\n      }),\n      name: 'name',\n    },\n    {\n      label: formatMessage({\n        id: 'Settings.review-workflows.list.page.list.column.stages.title',\n        defaultMessage: 'Stages',\n      }),\n      name: 'stages',\n    },\n    {\n      label: formatMessage({\n        id: 'Settings.review-workflows.list.page.list.column.contentTypes.title',\n        defaultMessage: 'Content Types',\n      }),\n      name: 'content-types',\n    },\n  ];\n\n  if (isLoading || isLoadingModels) {\n    return <Page.Loading />;\n  }\n\n  const contentTypes = Object.values(data ?? {}).reduce<ContentType[]>((acc, curr) => {\n    acc.push(...curr);\n    return acc;\n  }, []);\n\n  return (\n    <>\n      <Layout.Header\n        primaryAction={\n          canCreate ? (\n            <LinkButton\n              startIcon={<Plus />}\n              size=\"S\"\n              tag={NavLink}\n              to=\"create\"\n              onClick={handleCreateClick}\n            >\n              {formatMessage({\n                id: 'Settings.review-workflows.list.page.create',\n                defaultMessage: 'Create new workflow',\n              })}\n            </LinkButton>\n          ) : null\n        }\n        subtitle={formatMessage({\n          id: 'Settings.review-workflows.list.page.subtitle',\n          defaultMessage: 'Manage your content review process',\n        })}\n        title={formatMessage({\n          id: 'Settings.review-workflows.list.page.title',\n          defaultMessage: 'Review Workflows',\n        })}\n      />\n\n      <Layout.Root>\n        <Table.Root\n          isLoading={isLoading}\n          rows={workflows}\n          footer={\n            canCreate ? (\n              <TFooter cursor=\"pointer\" icon={<Plus />} onClick={handleCreateClick}>\n                {formatMessage({\n                  id: 'Settings.review-workflows.list.page.create',\n                  defaultMessage: 'Create new workflow',\n                })}\n              </TFooter>\n            ) : null\n          }\n          headers={headers}\n        >\n          <Table.Content>\n            <Table.Head>\n              {headers.map((head) => (\n                <Table.HeaderCell key={head.name} {...head} />\n              ))}\n            </Table.Head>\n\n            <Table.Body>\n              {workflows.map((workflow) => (\n                <Table.Row\n                  onClick={() => {\n                    navigate(`${workflow.id}`);\n                  }}\n                  key={workflow.id}\n                >\n                  <Table.Cell width=\"25rem\">\n                    <Typography textColor=\"neutral800\" fontWeight=\"bold\" ellipsis>\n                      {workflow.name}\n                    </Typography>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Typography textColor=\"neutral800\">{workflow.stages.length}</Typography>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Typography textColor=\"neutral800\">\n                      {workflow.contentTypes\n                        .map((uid: string) => {\n                          const contentType = contentTypes.find(\n                            (contentType) => contentType.uid === uid\n                          );\n\n                          return contentType?.info.displayName ?? '';\n                        })\n                        .join(', ')}\n                    </Typography>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Flex alignItems=\"center\" justifyContent=\"end\">\n                      {canRead || canUpdate ? (\n                        <IconButton\n                          tag={Link}\n                          to={workflow.id.toString()}\n                          label={formatMessage(\n                            {\n                              id: 'Settings.review-workflows.list.page.list.column.actions.edit.label',\n                              defaultMessage: 'Edit {name}',\n                            },\n                            { name: workflow.name }\n                          )}\n                          variant=\"ghost\"\n                        >\n                          <Pencil />\n                        </IconButton>\n                      ) : null}\n                      {workflows.length > 1 && canDelete ? (\n                        <IconButton\n                          withTooltip={false}\n                          label={formatMessage(\n                            {\n                              id: 'Settings.review-workflows.list.page.list.column.actions.delete.label',\n                              defaultMessage: 'Delete {name}',\n                            },\n                            { name: 'Default workflow' }\n                          )}\n                          variant=\"ghost\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDeleteWorkflow(String(workflow.id));\n                          }}\n                        >\n                          <Trash />\n                        </IconButton>\n                      ) : null}\n                    </Flex>\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table.Content>\n        </Table.Root>\n\n        <Dialog.Root open={!!workflowToDelete} onOpenChange={toggleConfirmDeleteDialog}>\n          <ConfirmDialog onConfirm={handleConfirmDeleteDialog}>\n            {formatMessage({\n              id: 'Settings.review-workflows.list.page.delete.confirm.body',\n              defaultMessage:\n                'If you remove this worfklow, all stage-related information will be removed for this content-type. Are you sure you want to remove it?',\n            })}\n          </ConfirmDialog>\n        </Dialog.Root>\n\n        <LimitsModal.Root open={showLimitModal} onOpenChange={() => setShowLimitModal(false)}>\n          <LimitsModal.Title>\n            {formatMessage({\n              id: 'Settings.review-workflows.list.page.workflows.limit.title',\n              defaultMessage: 'You’ve reached the limit of workflows in your plan',\n            })}\n          </LimitsModal.Title>\n\n          <LimitsModal.Body>\n            {formatMessage({\n              id: 'Settings.review-workflows.list.page.workflows.limit.body',\n              defaultMessage: 'Delete a workflow or contact Sales to enable more workflows.',\n            })}\n          </LimitsModal.Body>\n        </LimitsModal.Root>\n      </Layout.Root>\n    </>\n  );\n};\n\nconst ProtectedListPage = () => {\n  const permissions = useTypedSelector(\n    (state) => state.admin_app.permissions.settings?.['review-workflows']?.main\n  );\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <ReviewWorkflowsListView />\n    </Page.Protect>\n  );\n};\n\nexport { ProtectedListPage };\n"],"names":["ReviewWorkflowsListView","formatMessage","useIntl","navigate","useNavigate","trackUsage","useTracking","workflowToDelete","setWorkflowToDelete","React","useState","showLimitModal","setShowLimitModal","data","isLoading","isLoadingModels","useGetContentTypesQuery","meta","workflows","delete","deleteAction","useReviewWorkflows","getFeature","isLicenseLoading","useLicenseLimits","permissions","useTypedSelector","state","admin_app","settings","allowedActions","canCreate","canRead","canUpdate","canDelete","useRBAC","limits","numberOfWorkflows","CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME","handleDeleteWorkflow","workflowId","toggleConfirmDeleteDialog","handleConfirmDeleteDialog","handleCreateClick","event","preventDefault","workflowCount","parseInt","useEffect","headers","label","id","defaultMessage","name","_jsx","Page","Loading","contentTypes","Object","values","reduce","acc","curr","push","_jsxs","_Fragment","Layout","primaryAction","LinkButton","startIcon","Plus","size","tag","NavLink","to","onClick","subtitle","title","Table","Root","rows","footer","TFooter","cursor","icon","Content","Head","map","head","HeaderCell","Body","workflow","Row","Cell","width","Typography","textColor","fontWeight","ellipsis","stages","length","uid","contentType","find","info","displayName","join","Flex","alignItems","justifyContent","IconButton","Link","toString","variant","Pencil","withTooltip","e","stopPropagation","String","Trash","Dialog","open","onOpenChange","ConfirmDialog","onConfirm","LimitsModal","Title","ProtectedListPage","main","Protect"],"mappings":"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"}