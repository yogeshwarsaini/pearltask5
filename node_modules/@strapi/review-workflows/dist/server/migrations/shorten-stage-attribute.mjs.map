{"version":3,"file":"shorten-stage-attribute.mjs","sources":["../../../server/src/migrations/shorten-stage-attribute.ts"],"sourcesContent":["import semver from 'semver';\nimport { getOr } from 'lodash/fp';\nimport { async } from '@strapi/utils';\nimport { STAGE_MODEL_UID } from '../constants/workflows';\n\nfunction checkVersionThreshold(\n  startVersion: string,\n  currentVersion: string,\n  thresholdVersion: string\n) {\n  return semver.gte(currentVersion, thresholdVersion) && semver.lt(startVersion, thresholdVersion);\n}\n\n/**\n * Shorten strapi stage name\n */\nasync function migrateStageAttribute({ oldContentTypes, contentTypes }: any) {\n  const getRWVersion = getOr('0.0.0', `${STAGE_MODEL_UID}.options.version`);\n  const oldRWVersion = getRWVersion(oldContentTypes);\n  const currentRWVersion = getRWVersion(contentTypes);\n\n  const migrationNeeded = checkVersionThreshold(oldRWVersion, currentRWVersion, '1.1.0');\n\n  // TODO: Find tables with something else than `findTables` function\n  // if (migrationNeeded) {\n  //   const oldAttributeTableName = 'strapi_review_workflows_stage';\n  //   const newAttributeTableName = 'strapi_stage';\n  //   // const tables = await findTables({ strapi }, new RegExp(oldAttributeTableName));\n\n  //   await async.map(tables, async (tableName: string) => {\n  //     const newTableName = tableName.replace(oldAttributeTableName, newAttributeTableName);\n  //     const alreadyHasNextTable = await strapi.db.connection.schema.hasTable(newTableName);\n\n  //     // The table can be already created but empty. In order to rename the old one, we need to drop the previously created empty one.\n  //     if (alreadyHasNextTable) {\n  //       const dataInTable = await strapi.db.connection(newTableName).select().limit(1);\n  //       if (!dataInTable.length) {\n  //         await strapi.db.connection.schema.dropTable(newTableName);\n  //       }\n  //     }\n\n  //     try {\n  //       await strapi.db.connection.schema.renameTable(tableName, newTableName);\n  //     } catch (e: any) {\n  //       strapi.log.warn(\n  //         `An error occurred during the migration of ${tableName} table to ${newTableName}.\\nIf ${newTableName} already exists, migration can't be done automatically.`\n  //       );\n  //       strapi.log.warn(e.message);\n  //     }\n  //   });\n  // }\n}\n\nexport default migrateStageAttribute;\n"],"names":["checkVersionThreshold","startVersion","currentVersion","thresholdVersion","semver","gte","lt","migrateStageAttribute","oldContentTypes","contentTypes","getRWVersion","getOr","STAGE_MODEL_UID","oldRWVersion","currentRWVersion"],"mappings":";;;;AAKA,SAASA,qBACPC,CAAAA,YAAoB,EACpBC,cAAsB,EACtBC,gBAAwB,EAAA;IAExB,OAAOC,MAAAA,CAAOC,GAAG,CAACH,cAAAA,EAAgBC,qBAAqBC,MAAOE,CAAAA,EAAE,CAACL,YAAcE,EAAAA,gBAAAA,CAAAA;AACjF;AAEA;;AAEC,IACD,eAAeI,qBAAsB,CAAA,EAAEC,eAAe,EAAEC,YAAY,EAAO,EAAA;AACzE,IAAA,MAAMC,eAAeC,KAAM,CAAA,OAAA,EAAS,CAAC,EAAEC,eAAAA,CAAgB,gBAAgB,CAAC,CAAA;AACxE,IAAA,MAAMC,eAAeH,YAAaF,CAAAA,eAAAA,CAAAA;AAClC,IAAA,MAAMM,mBAAmBJ,YAAaD,CAAAA,YAAAA,CAAAA;IAEdT,qBAAsBa,CAAAA,YAAAA,EAAcC,gBAAkB,EAAA,OAAA;AAE9E;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;;;"}