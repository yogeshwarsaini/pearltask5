{"version":3,"file":"set-workflow-default-name.js","sources":["../../../server/src/migrations/set-workflow-default-name.ts"],"sourcesContent":["import { WORKFLOW_MODEL_UID } from '../constants/workflows';\nimport defaultWorkflow from '../constants/default-workflow.json';\n\n/**\n * Multiple workflows introduced the ability to name a workflow.\n * This migration adds the default workflow name if the name attribute was added.\n */\nasync function migrateReviewWorkflowName({ oldContentTypes, contentTypes }: any) {\n  // Look for RW name attribute\n  const hadName = !!oldContentTypes?.[WORKFLOW_MODEL_UID]?.attributes?.name;\n  const hasName = !!contentTypes?.[WORKFLOW_MODEL_UID]?.attributes?.name;\n\n  // Add the default workflow name if name attribute was added\n  if (!hadName && hasName) {\n    await strapi.db.query(WORKFLOW_MODEL_UID).updateMany({\n      where: {\n        name: { $null: true },\n      },\n      data: {\n        name: defaultWorkflow.name,\n      },\n    });\n  }\n}\n\nexport default migrateReviewWorkflowName;\n"],"names":["migrateReviewWorkflowName","oldContentTypes","contentTypes","hadName","WORKFLOW_MODEL_UID","attributes","name","hasName","strapi","db","query","updateMany","where","$null","data","defaultWorkflow"],"mappings":";;;;;AAGA;;;AAGC,IACD,eAAeA,yBAA0B,CAAA,EAAEC,eAAe,EAAEC,YAAY,EAAO,EAAA;;AAE7E,IAAA,MAAMC,UAAU,CAAC,CAACF,kBAAkBG,4BAAAA,CAAmB,EAAEC,UAAYC,EAAAA,IAAAA;AACrE,IAAA,MAAMC,UAAU,CAAC,CAACL,eAAeE,4BAAAA,CAAmB,EAAEC,UAAYC,EAAAA,IAAAA;;IAGlE,IAAI,CAACH,WAAWI,OAAS,EAAA;AACvB,QAAA,MAAMC,OAAOC,EAAE,CAACC,KAAK,CAACN,4BAAAA,CAAAA,CAAoBO,UAAU,CAAC;YACnDC,KAAO,EAAA;gBACLN,IAAM,EAAA;oBAAEO,KAAO,EAAA;AAAK;AACtB,aAAA;YACAC,IAAM,EAAA;AACJR,gBAAAA,IAAAA,EAAMS,wBAAgBT;AACxB;AACF,SAAA,CAAA;AACF;AACF;;;;"}