{"version":3,"file":"boolean.mjs","sources":["../../src/fields/boolean.ts"],"sourcesContent":["import { toString } from 'lodash/fp';\nimport Field from './field';\n\nfunction isStringOrNumber(value: unknown): value is string | number {\n  return typeof value === 'string' || typeof value === 'number';\n}\n\nexport default class BooleanField extends Field {\n  toDB(value: unknown) {\n    if (typeof value === 'boolean') {\n      return value;\n    }\n\n    if (isStringOrNumber(value) && ['true', 't', '1', 1].includes(value)) {\n      return true;\n    }\n\n    if (isStringOrNumber(value) && ['false', 'f', '0', 0].includes(value)) {\n      return false;\n    }\n\n    return Boolean(value);\n  }\n\n  fromDB(value: unknown) {\n    if (typeof value === 'boolean') {\n      return value;\n    }\n\n    const strVal = toString(value);\n\n    if (strVal === '1') {\n      return true;\n    }\n    if (strVal === '0') {\n      return false;\n    }\n    return null;\n  }\n}\n"],"names":["isStringOrNumber","value","BooleanField","Field","toDB","includes","Boolean","fromDB","strVal","toString"],"mappings":";;;AAGA,SAASA,iBAAiBC,KAAc,EAAA;AACtC,IAAA,OAAO,OAAOA,KAAAA,KAAU,QAAY,IAAA,OAAOA,KAAU,KAAA,QAAA;AACvD;AAEe,MAAMC,YAAqBC,SAAAA,KAAAA,CAAAA;AACxCC,IAAAA,IAAAA,CAAKH,KAAc,EAAE;QACnB,IAAI,OAAOA,UAAU,SAAW,EAAA;YAC9B,OAAOA,KAAAA;AACT;AAEA,QAAA,IAAID,iBAAiBC,KAAU,CAAA,IAAA;AAAC,YAAA,MAAA;AAAQ,YAAA,GAAA;AAAK,YAAA,GAAA;AAAK,YAAA;SAAE,CAACI,QAAQ,CAACJ,KAAQ,CAAA,EAAA;YACpE,OAAO,IAAA;AACT;AAEA,QAAA,IAAID,iBAAiBC,KAAU,CAAA,IAAA;AAAC,YAAA,OAAA;AAAS,YAAA,GAAA;AAAK,YAAA,GAAA;AAAK,YAAA;SAAE,CAACI,QAAQ,CAACJ,KAAQ,CAAA,EAAA;YACrE,OAAO,KAAA;AACT;AAEA,QAAA,OAAOK,OAAQL,CAAAA,KAAAA,CAAAA;AACjB;AAEAM,IAAAA,MAAAA,CAAON,KAAc,EAAE;QACrB,IAAI,OAAOA,UAAU,SAAW,EAAA;YAC9B,OAAOA,KAAAA;AACT;AAEA,QAAA,MAAMO,SAASC,QAASR,CAAAA,KAAAA,CAAAA;AAExB,QAAA,IAAIO,WAAW,GAAK,EAAA;YAClB,OAAO,IAAA;AACT;AACA,QAAA,IAAIA,WAAW,GAAK,EAAA;YAClB,OAAO,KAAA;AACT;QACA,OAAO,IAAA;AACT;AACF;;;;"}