{"version":3,"file":"index.mjs","sources":["../../src/fields/index.ts"],"sourcesContent":["import _ from 'lodash/fp';\n\nimport Field from './field';\nimport StringField from './string';\nimport JSONField from './json';\nimport BigIntegerField from './biginteger';\nimport NumberField from './number';\nimport DateField from './date';\nimport TimeField from './time';\nimport DatetimeField from './datetime';\nimport TimestampField from './timestamp';\nimport BooleanField from './boolean';\n\nimport type { Attribute } from '../types';\n\nconst typeToFieldMap: Record<string, typeof Field> = {\n  increments: Field,\n  password: StringField,\n  email: StringField,\n  string: StringField,\n  uid: StringField,\n  richtext: StringField,\n  text: StringField,\n  enumeration: StringField,\n  json: JSONField,\n  biginteger: BigIntegerField,\n  integer: NumberField,\n  float: NumberField,\n  decimal: NumberField,\n  date: DateField,\n  time: TimeField,\n  datetime: DatetimeField,\n  timestamp: TimestampField,\n  boolean: BooleanField,\n  blocks: JSONField,\n};\n\nexport const createField = (attribute: Attribute): Field => {\n  const { type } = attribute;\n\n  if (_.has(type, typeToFieldMap)) {\n    return new typeToFieldMap[type]({});\n  }\n\n  throw new Error(`Undefined field for type ${type}`);\n};\n"],"names":["typeToFieldMap","increments","Field","password","StringField","email","string","uid","richtext","text","enumeration","json","JSONField","biginteger","BigIntegerField","integer","NumberField","float","decimal","date","DateField","time","TimeField","datetime","DatetimeField","timestamp","TimestampField","boolean","BooleanField","blocks","createField","attribute","type","_","has","Error"],"mappings":";;;;;;;;;;;;AAeA,MAAMA,cAA+C,GAAA;IACnDC,UAAYC,EAAAA,KAAAA;IACZC,QAAUC,EAAAA,WAAAA;IACVC,KAAOD,EAAAA,WAAAA;IACPE,MAAQF,EAAAA,WAAAA;IACRG,GAAKH,EAAAA,WAAAA;IACLI,QAAUJ,EAAAA,WAAAA;IACVK,IAAML,EAAAA,WAAAA;IACNM,WAAaN,EAAAA,WAAAA;IACbO,IAAMC,EAAAA,SAAAA;IACNC,UAAYC,EAAAA,eAAAA;IACZC,OAASC,EAAAA,WAAAA;IACTC,KAAOD,EAAAA,WAAAA;IACPE,OAASF,EAAAA,WAAAA;IACTG,IAAMC,EAAAA,SAAAA;IACNC,IAAMC,EAAAA,SAAAA;IACNC,QAAUC,EAAAA,aAAAA;IACVC,SAAWC,EAAAA,cAAAA;IACXC,OAASC,EAAAA,YAAAA;IACTC,MAAQjB,EAAAA;AACV,CAAA;AAEO,MAAMkB,cAAc,CAACC,SAAAA,GAAAA;IAC1B,MAAM,EAAEC,IAAI,EAAE,GAAGD,SAAAA;AAEjB,IAAA,IAAIE,CAAEC,CAAAA,GAAG,CAACF,IAAAA,EAAMhC,cAAiB,CAAA,EAAA;AAC/B,QAAA,OAAO,IAAIA,cAAc,CAACgC,IAAAA,CAAK,CAAC,EAAC,CAAA;AACnC;AAEA,IAAA,MAAM,IAAIG,KAAM,CAAA,CAAC,yBAAyB,EAAEH,KAAK,CAAC,CAAA;AACpD;;;;"}