{"version":3,"file":"number.js","sources":["../../src/fields/number.ts"],"sourcesContent":["import { toNumber } from 'lodash/fp';\nimport Field from './field';\n\nexport default class NumberField extends Field {\n  toDB(value: unknown) {\n    const numberValue = toNumber(value);\n\n    if (Number.isNaN(numberValue)) {\n      throw new Error(`Expected a valid Number, got ${value}`);\n    }\n\n    return numberValue;\n  }\n\n  fromDB(value: unknown) {\n    return toNumber(value);\n  }\n}\n"],"names":["NumberField","Field","toDB","value","numberValue","toNumber","Number","isNaN","Error","fromDB"],"mappings":";;;;;AAGe,MAAMA,WAAoBC,SAAAA,KAAAA,CAAAA;AACvCC,IAAAA,IAAAA,CAAKC,KAAc,EAAE;AACnB,QAAA,MAAMC,cAAcC,UAASF,CAAAA,KAAAA,CAAAA;QAE7B,IAAIG,MAAAA,CAAOC,KAAK,CAACH,WAAc,CAAA,EAAA;AAC7B,YAAA,MAAM,IAAII,KAAM,CAAA,CAAC,6BAA6B,EAAEL,MAAM,CAAC,CAAA;AACzD;QAEA,OAAOC,WAAAA;AACT;AAEAK,IAAAA,MAAAA,CAAON,KAAc,EAAE;AACrB,QAAA,OAAOE,UAASF,CAAAA,KAAAA,CAAAA;AAClB;AACF;;;;"}