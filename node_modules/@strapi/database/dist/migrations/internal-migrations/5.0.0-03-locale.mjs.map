{"version":3,"file":"5.0.0-03-locale.mjs","sources":["../../../src/migrations/internal-migrations/5.0.0-03-locale.ts"],"sourcesContent":["import type { Knex } from 'knex';\n\nimport type { Migration } from '../common';\n\n/**\n * In v4, content types with disabled i18n did not have any locale column.\n * In v5, we need to add a `locale` column to all content types.\n * Other downstream migrations will make use of this column.\n *\n * This function creates the `locale` column if it doesn't exist.\n */\nconst createLocaleColumn = async (db: Knex, tableName: string) => {\n  await db.schema.alterTable(tableName, (table) => {\n    table.string('locale');\n  });\n};\n\nexport const createdLocale: Migration = {\n  name: '5.0.0-03-created-locale',\n  async up(knex, db) {\n    for (const meta of db.metadata.values()) {\n      const hasTable = await knex.schema.hasTable(meta.tableName);\n\n      if (!hasTable) {\n        continue;\n      }\n\n      // Ignore non-content types\n      const uid = meta.uid;\n      const model = strapi.getModel(uid);\n      if (!model) {\n        continue;\n      }\n\n      // Create locale column if it doesn't exist\n      const hasLocaleColumn = await knex.schema.hasColumn(meta.tableName, 'locale');\n\n      if (meta.attributes.locale && !hasLocaleColumn) {\n        await createLocaleColumn(knex, meta.tableName);\n      }\n    }\n  },\n  async down() {\n    throw new Error('not implemented');\n  },\n};\n"],"names":["createLocaleColumn","db","tableName","schema","alterTable","table","string","createdLocale","name","up","knex","meta","metadata","values","hasTable","uid","model","strapi","getModel","hasLocaleColumn","hasColumn","attributes","locale","down","Error"],"mappings":"AAIA;;;;;;IAOA,MAAMA,kBAAqB,GAAA,OAAOC,EAAUC,EAAAA,SAAAA,GAAAA;AAC1C,IAAA,MAAMD,GAAGE,MAAM,CAACC,UAAU,CAACF,WAAW,CAACG,KAAAA,GAAAA;AACrCA,QAAAA,KAAAA,CAAMC,MAAM,CAAC,QAAA,CAAA;AACf,KAAA,CAAA;AACF,CAAA;MAEaC,aAA2B,GAAA;IACtCC,IAAM,EAAA,yBAAA;IACN,MAAMC,EAAAA,CAAAA,CAAGC,IAAI,EAAET,EAAE,EAAA;AACf,QAAA,KAAK,MAAMU,IAAQV,IAAAA,EAAAA,CAAGW,QAAQ,CAACC,MAAM,EAAI,CAAA;YACvC,MAAMC,QAAAA,GAAW,MAAMJ,IAAKP,CAAAA,MAAM,CAACW,QAAQ,CAACH,KAAKT,SAAS,CAAA;AAE1D,YAAA,IAAI,CAACY,QAAU,EAAA;AACb,gBAAA;AACF;;YAGA,MAAMC,GAAAA,GAAMJ,KAAKI,GAAG;YACpB,MAAMC,KAAAA,GAAQC,MAAOC,CAAAA,QAAQ,CAACH,GAAAA,CAAAA;AAC9B,YAAA,IAAI,CAACC,KAAO,EAAA;AACV,gBAAA;AACF;;YAGA,MAAMG,eAAAA,GAAkB,MAAMT,IAAKP,CAAAA,MAAM,CAACiB,SAAS,CAACT,IAAKT,CAAAA,SAAS,EAAE,QAAA,CAAA;AAEpE,YAAA,IAAIS,KAAKU,UAAU,CAACC,MAAM,IAAI,CAACH,eAAiB,EAAA;gBAC9C,MAAMnB,kBAAAA,CAAmBU,IAAMC,EAAAA,IAAAA,CAAKT,SAAS,CAAA;AAC/C;AACF;AACF,KAAA;IACA,MAAMqB,IAAAA,CAAAA,GAAAA;AACJ,QAAA,MAAM,IAAIC,KAAM,CAAA,iBAAA,CAAA;AAClB;AACF;;;;"}