{"version":3,"file":"component.js","sources":["../../../../server/src/controllers/validation/component.ts"],"sourcesContent":["import _ from 'lodash';\nimport { yup, validateYupSchema } from '@strapi/utils';\n\nimport type { Struct } from '@strapi/types';\nimport { modelTypes, DEFAULT_TYPES } from '../../services/constants';\nimport { isValidCategoryName, isValidIcon } from './common';\nimport { createSchema } from './model-schema';\nimport { removeEmptyDefaults } from './data-transform';\n\nexport const VALID_RELATIONS = ['oneToOne', 'oneToMany'];\nexport const VALID_TYPES = [...DEFAULT_TYPES, 'component', 'customField'];\n\nexport const componentSchema = createSchema(VALID_TYPES, VALID_RELATIONS, {\n  modelType: modelTypes.COMPONENT,\n})\n  .shape({\n    displayName: yup.string().min(1).required('displayName.required'),\n    icon: yup.string().nullable().test(isValidIcon),\n    category: yup.string().nullable().test(isValidCategoryName).required('category.required'),\n  })\n  .required()\n  .noUnknown();\n\nexport const nestedComponentSchema = yup.array().of(\n  componentSchema\n    .shape({\n      uid: yup.string(),\n      tmpUID: yup.string(),\n    })\n    .test({\n      name: 'mustHaveUIDOrTmpUID',\n      message: 'Component must have a uid or a tmpUID',\n      test(attr: unknown) {\n        if (_.has(attr, 'uid') && _.has(attr, 'tmpUID')) return false;\n        if (!_.has(attr, 'uid') && !_.has(attr, 'tmpUID')) return false;\n        return true;\n      },\n    })\n    .required()\n    .noUnknown()\n);\n\nexport const componentInputSchema = yup\n  .object({\n    component: componentSchema,\n    components: nestedComponentSchema,\n  })\n  .noUnknown();\n\nexport const validateComponentInput = validateYupSchema(componentInputSchema);\n\nconst updateComponentInputSchema = yup\n  .object({\n    component: componentSchema,\n    components: nestedComponentSchema,\n  })\n  .noUnknown();\n\nexport const validateUpdateComponentInput = (data: {\n  component?: Struct.ComponentSchema;\n  components?: Struct.ComponentSchema[];\n}) => {\n  if (_.has(data, 'component') && data.component) {\n    removeEmptyDefaults(data.component);\n  }\n\n  if (_.has(data, 'components') && Array.isArray(data.components)) {\n    data.components.forEach((data) => {\n      if (_.has(data, 'uid')) {\n        removeEmptyDefaults(data);\n      }\n    });\n  }\n\n  return validateYupSchema(updateComponentInputSchema)(data);\n};\n"],"names":["VALID_RELATIONS","VALID_TYPES","DEFAULT_TYPES","componentSchema","createSchema","modelType","modelTypes","COMPONENT","shape","displayName","yup","string","min","required","icon","nullable","test","isValidIcon","category","isValidCategoryName","noUnknown","nestedComponentSchema","array","of","uid","tmpUID","name","message","attr","_","has","componentInputSchema","object","component","components","validateComponentInput","validateYupSchema","updateComponentInputSchema","validateUpdateComponentInput","data","removeEmptyDefaults","Array","isArray","forEach"],"mappings":";;;;;;;;;MASaA,eAAkB,GAAA;AAAC,IAAA,UAAA;AAAY,IAAA;;MAC/BC,WAAc,GAAA;AAAIC,IAAAA,GAAAA,uBAAAA;AAAe,IAAA,WAAA;AAAa,IAAA;;AAE9CC,MAAAA,eAAAA,GAAkBC,wBAAaH,CAAAA,WAAAA,EAAaD,eAAiB,EAAA;AACxEK,IAAAA,SAAAA,EAAWC,qBAAWC;AACxB,CAAA,CAAA,CACGC,KAAK,CAAC;AACLC,IAAAA,WAAAA,EAAaC,UAAIC,MAAM,EAAA,CAAGC,GAAG,CAAC,CAAA,CAAA,CAAGC,QAAQ,CAAC,sBAAA,CAAA;AAC1CC,IAAAA,IAAAA,EAAMJ,UAAIC,MAAM,EAAA,CAAGI,QAAQ,EAAA,CAAGC,IAAI,CAACC,kBAAAA,CAAAA;IACnCC,QAAUR,EAAAA,SAAAA,CAAIC,MAAM,EAAGI,CAAAA,QAAQ,GAAGC,IAAI,CAACG,0BAAqBN,CAAAA,CAAAA,QAAQ,CAAC,mBAAA;AACvE,CACCA,CAAAA,CAAAA,QAAQ,EACRO,CAAAA,SAAS;AAEL,MAAMC,wBAAwBX,SAAIY,CAAAA,KAAK,GAAGC,EAAE,CACjDpB,eACGK,CAAAA,KAAK,CAAC;AACLgB,IAAAA,GAAAA,EAAKd,UAAIC,MAAM,EAAA;AACfc,IAAAA,MAAAA,EAAQf,UAAIC,MAAM;AACpB,CAAA,CAAA,CACCK,IAAI,CAAC;IACJU,IAAM,EAAA,qBAAA;IACNC,OAAS,EAAA,uCAAA;AACTX,IAAAA,IAAAA,CAAAA,CAAKY,IAAa,EAAA;QAChB,IAAIC,CAAAA,CAAEC,GAAG,CAACF,IAAM,EAAA,KAAA,CAAA,IAAUC,EAAEC,GAAG,CAACF,IAAM,EAAA,QAAA,CAAA,EAAW,OAAO,KAAA;AACxD,QAAA,IAAI,CAACC,CAAAA,CAAEC,GAAG,CAACF,IAAM,EAAA,KAAA,CAAA,IAAU,CAACC,CAAAA,CAAEC,GAAG,CAACF,IAAM,EAAA,QAAA,CAAA,EAAW,OAAO,KAAA;QAC1D,OAAO,IAAA;AACT;AACF,CACCf,CAAAA,CAAAA,QAAQ,EACRO,CAAAA,SAAS,EACZ;AAEWW,MAAAA,oBAAAA,GAAuBrB,SACjCsB,CAAAA,MAAM,CAAC;IACNC,SAAW9B,EAAAA,eAAAA;IACX+B,UAAYb,EAAAA;AACd,CAAA,CAAA,CACCD,SAAS;AAEL,MAAMe,sBAAyBC,GAAAA,uBAAAA,CAAkBL,oBAAsB;AAE9E,MAAMM,0BAAAA,GAA6B3B,SAChCsB,CAAAA,MAAM,CAAC;IACNC,SAAW9B,EAAAA,eAAAA;IACX+B,UAAYb,EAAAA;AACd,CAAA,CAAA,CACCD,SAAS,EAAA;AAEL,MAAMkB,+BAA+B,CAACC,IAAAA,GAAAA;AAI3C,IAAA,IAAIV,EAAEC,GAAG,CAACS,MAAM,WAAgBA,CAAAA,IAAAA,IAAAA,CAAKN,SAAS,EAAE;AAC9CO,QAAAA,iCAAAA,CAAoBD,KAAKN,SAAS,CAAA;AACpC;IAEA,IAAIJ,CAAAA,CAAEC,GAAG,CAACS,IAAM,EAAA,YAAA,CAAA,IAAiBE,MAAMC,OAAO,CAACH,IAAKL,CAAAA,UAAU,CAAG,EAAA;AAC/DK,QAAAA,IAAAA,CAAKL,UAAU,CAACS,OAAO,CAAC,CAACJ,IAAAA,GAAAA;AACvB,YAAA,IAAIV,CAAEC,CAAAA,GAAG,CAACS,IAAAA,EAAM,KAAQ,CAAA,EAAA;gBACtBC,iCAAoBD,CAAAA,IAAAA,CAAAA;AACtB;AACF,SAAA,CAAA;AACF;AAEA,IAAA,OAAOH,wBAAkBC,0BAA4BE,CAAAA,CAAAA,IAAAA,CAAAA;AACvD;;;;;;;;;;"}