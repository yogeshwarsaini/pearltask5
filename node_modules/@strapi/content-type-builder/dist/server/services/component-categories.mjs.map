{"version":3,"file":"component-categories.mjs","sources":["../../../server/src/services/component-categories.ts"],"sourcesContent":["import { join } from 'path';\nimport { strings, errors } from '@strapi/utils';\nimport type { Struct } from '@strapi/types';\nimport createBuilder from './schema-builder';\n\ntype Infos = {\n  name: string;\n};\n\ninterface WorkingComponent extends Struct.ComponentSchema {\n  setUID: (uid: string) => WorkingComponent;\n  setDir: (dir: string) => WorkingComponent;\n  updateComponent: (oldUID: string, newUID: string) => void;\n}\n\n/**\n * Edit a category name and move components to the write folder\n */\nexport const editCategory = async (name: string, infos: Infos) => {\n  const newName = strings.nameToSlug(infos.name);\n\n  // don't do anything the name doesn't change\n  if (name === newName) return;\n\n  if (!categoryExists(name)) {\n    throw new errors.ApplicationError('category not found');\n  }\n\n  if (categoryExists(newName)) {\n    throw new errors.ApplicationError('Name already taken');\n  }\n\n  const builder = createBuilder();\n\n  builder.components.forEach((component: WorkingComponent) => {\n    const oldUID = component.uid;\n    const newUID = `${newName}.${component.modelName}`;\n\n    // only edit the components in this specific category\n    if (component.category !== name) return;\n\n    component.setUID(newUID).setDir(join(strapi.dirs.app.components, newName));\n\n    builder.components.forEach((compo: WorkingComponent) => {\n      compo.updateComponent(oldUID, newUID);\n    });\n\n    builder.contentTypes.forEach((ct: WorkingComponent) => {\n      ct.updateComponent(oldUID, newUID);\n    });\n  });\n\n  await builder.writeFiles();\n\n  return newName;\n};\n\n/**\n * Deletes a category and its components\n */\nexport const deleteCategory = async (name: string) => {\n  if (!categoryExists(name)) {\n    throw new errors.ApplicationError('category not found');\n  }\n\n  const builder = createBuilder();\n\n  builder.components.forEach((component) => {\n    if (component.category === name) {\n      builder.deleteComponent(component.uid);\n    }\n  });\n\n  await builder.writeFiles();\n};\n\n/**\n * Checks if a category exists\n */\nconst categoryExists = (name: string) => {\n  const matchingIndex = Object.values(strapi.components).findIndex(\n    (component) => component.category === name\n  );\n\n  return matchingIndex > -1;\n};\n"],"names":["editCategory","name","infos","newName","strings","nameToSlug","categoryExists","errors","ApplicationError","builder","createBuilder","components","forEach","component","oldUID","uid","newUID","modelName","category","setUID","setDir","join","strapi","dirs","app","compo","updateComponent","contentTypes","ct","writeFiles","deleteCategory","deleteComponent","matchingIndex","Object","values","findIndex"],"mappings":";;;;AAeA;;AAEC,IACM,MAAMA,YAAe,GAAA,OAAOC,IAAcC,EAAAA,KAAAA,GAAAA;AAC/C,IAAA,MAAMC,OAAUC,GAAAA,OAAAA,CAAQC,UAAU,CAACH,MAAMD,IAAI,CAAA;;AAG7C,IAAA,IAAIA,SAASE,OAAS,EAAA;IAEtB,IAAI,CAACG,eAAeL,IAAO,CAAA,EAAA;QACzB,MAAM,IAAIM,MAAOC,CAAAA,gBAAgB,CAAC,oBAAA,CAAA;AACpC;AAEA,IAAA,IAAIF,eAAeH,OAAU,CAAA,EAAA;QAC3B,MAAM,IAAII,MAAOC,CAAAA,gBAAgB,CAAC,oBAAA,CAAA;AACpC;AAEA,IAAA,MAAMC,OAAUC,GAAAA,aAAAA,EAAAA;AAEhBD,IAAAA,OAAAA,CAAQE,UAAU,CAACC,OAAO,CAAC,CAACC,SAAAA,GAAAA;QAC1B,MAAMC,MAAAA,GAASD,UAAUE,GAAG;QAC5B,MAAMC,MAAAA,GAAS,CAAC,EAAEb,OAAAA,CAAQ,CAAC,EAAEU,SAAAA,CAAUI,SAAS,CAAC,CAAC;;QAGlD,IAAIJ,SAAAA,CAAUK,QAAQ,KAAKjB,IAAM,EAAA;AAEjCY,QAAAA,SAAAA,CAAUM,MAAM,CAACH,MAAQI,CAAAA,CAAAA,MAAM,CAACC,IAAAA,CAAKC,MAAOC,CAAAA,IAAI,CAACC,GAAG,CAACb,UAAU,EAAER,OAAAA,CAAAA,CAAAA;AAEjEM,QAAAA,OAAAA,CAAQE,UAAU,CAACC,OAAO,CAAC,CAACa,KAAAA,GAAAA;YAC1BA,KAAMC,CAAAA,eAAe,CAACZ,MAAQE,EAAAA,MAAAA,CAAAA;AAChC,SAAA,CAAA;AAEAP,QAAAA,OAAAA,CAAQkB,YAAY,CAACf,OAAO,CAAC,CAACgB,EAAAA,GAAAA;YAC5BA,EAAGF,CAAAA,eAAe,CAACZ,MAAQE,EAAAA,MAAAA,CAAAA;AAC7B,SAAA,CAAA;AACF,KAAA,CAAA;AAEA,IAAA,MAAMP,QAAQoB,UAAU,EAAA;IAExB,OAAO1B,OAAAA;AACT;AAEA;;IAGa2B,MAAAA,cAAAA,GAAiB,OAAO7B,IAAAA,GAAAA;IACnC,IAAI,CAACK,eAAeL,IAAO,CAAA,EAAA;QACzB,MAAM,IAAIM,MAAOC,CAAAA,gBAAgB,CAAC,oBAAA,CAAA;AACpC;AAEA,IAAA,MAAMC,OAAUC,GAAAA,aAAAA,EAAAA;AAEhBD,IAAAA,OAAAA,CAAQE,UAAU,CAACC,OAAO,CAAC,CAACC,SAAAA,GAAAA;QAC1B,IAAIA,SAAAA,CAAUK,QAAQ,KAAKjB,IAAM,EAAA;YAC/BQ,OAAQsB,CAAAA,eAAe,CAAClB,SAAAA,CAAUE,GAAG,CAAA;AACvC;AACF,KAAA,CAAA;AAEA,IAAA,MAAMN,QAAQoB,UAAU,EAAA;AAC1B;AAEA;;IAGA,MAAMvB,iBAAiB,CAACL,IAAAA,GAAAA;AACtB,IAAA,MAAM+B,aAAgBC,GAAAA,MAAAA,CAAOC,MAAM,CAACZ,MAAOX,CAAAA,UAAU,CAAEwB,CAAAA,SAAS,CAC9D,CAACtB,SAAcA,GAAAA,SAAAA,CAAUK,QAAQ,KAAKjB,IAAAA,CAAAA;AAGxC,IAAA,OAAO+B,gBAAgB,CAAC,CAAA;AAC1B,CAAA;;;;"}