{"version":3,"file":"FormModalNavigationProvider.mjs","sources":["../../../../admin/src/components/FormModalNavigation/FormModalNavigationProvider.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\n\nimport { FormModalNavigationContext } from './FormModalNavigationContext';\n\nimport type { Internal, Struct } from '@strapi/types';\n\ntype FormModalNavigationProviderProps = {\n  children: React.ReactNode;\n};\n\nexport type Tab = 'basic' | 'advanced';\n\nexport type ModalType =\n  | 'chooseAttribute'\n  | 'edit'\n  | 'attribute'\n  | 'customField'\n  | 'addComponentToDynamicZone'\n  | 'contentType'\n  | 'component';\n\nexport type State = Record<string, any>;\n\nexport const INITIAL_STATE_DATA: State = {\n  actionType: null,\n  attributeName: null,\n  attributeType: null,\n  dynamicZoneTarget: null,\n  forTarget: null,\n  modalType: null,\n  isOpen: true,\n  showBackLink: false,\n  kind: null,\n  step: null,\n  targetUid: null,\n  customFieldUid: null,\n  activeTab: 'basic',\n};\n\nexport type SelectCustomFieldPayload = {\n  attributeType: string;\n  customFieldUid: string;\n};\n\nexport type SelectFieldPayload = {\n  attributeType: string;\n  step: string | null;\n};\n\nexport type OpenModalAddComponentsToDZPayload = {\n  dynamicZoneTarget?: string;\n  targetUid: Internal.UID.Schema;\n};\n\nexport type OpenModalAddFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid?: Internal.UID.Schema;\n};\n\nexport type OpenModalEditCustomFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  attributeName: string;\n  attributeType: string;\n  customFieldUid: string;\n};\n\nexport type OpenModalEditFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  attributeName: string;\n  attributeType: string;\n  step: string | null;\n};\n\nexport type OpenModalEditSchemaPayload = {\n  modalType: ModalType;\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  kind?: string;\n};\n\nexport type NavigateToChooseAttributeModalPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n};\n\nexport type NavigateToAddCompoToDZModalPayload = {\n  dynamicZoneTarget: string;\n};\n\nexport const FormModalNavigationProvider = ({ children }: FormModalNavigationProviderProps) => {\n  const [state, setFormModalNavigationState] = useState(INITIAL_STATE_DATA);\n  const { trackUsage } = useTracking();\n\n  const onClickSelectCustomField = useCallback(\n    ({ attributeType, customFieldUid }: SelectCustomFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        actionType: 'create',\n        modalType: 'customField',\n        attributeType,\n        customFieldUid,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onClickSelectField = useCallback(\n    ({ attributeType, step }: SelectFieldPayload) => {\n      if (state.forTarget === 'contentType') {\n        trackUsage('didSelectContentTypeFieldType', { type: attributeType });\n      }\n\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        actionType: 'create',\n        modalType: 'attribute',\n        step,\n        attributeType,\n        showBackLink: true,\n        activeTab: 'basic',\n      }));\n    },\n    [state.forTarget, trackUsage]\n  );\n\n  const onOpenModalAddComponentsToDZ = useCallback(\n    ({ dynamicZoneTarget, targetUid }: OpenModalAddComponentsToDZPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        dynamicZoneTarget,\n        targetUid,\n        modalType: 'addComponentToDynamicZone',\n        forTarget: 'contentType',\n        step: '1',\n        actionType: 'edit',\n        isOpen: true,\n      }));\n    },\n    []\n  );\n\n  const onOpenModalAddField = useCallback(({ forTarget, targetUid }: OpenModalAddFieldPayload) => {\n    setFormModalNavigationState((prevState: State) => ({\n      ...prevState,\n      actionType: 'create',\n      forTarget,\n      targetUid,\n      modalType: 'chooseAttribute',\n      isOpen: true,\n      showBackLink: false,\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onOpenModalCreateSchema = useCallback((nextState: State) => {\n    setFormModalNavigationState((prevState) => ({\n      ...prevState,\n      ...nextState,\n      isOpen: true,\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onOpenModalEditCustomField = useCallback(\n    ({\n      forTarget,\n      targetUid,\n      attributeName,\n      attributeType,\n      customFieldUid,\n    }: OpenModalEditCustomFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType: 'customField',\n        customFieldUid,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        isOpen: true,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onOpenModalEditField = useCallback(\n    ({ forTarget, targetUid, attributeName, attributeType, step }: OpenModalEditFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType: 'attribute',\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        step,\n        isOpen: true,\n      }));\n    },\n    []\n  );\n\n  const onOpenModalEditSchema = useCallback(\n    ({ modalType, forTarget, targetUid, kind }: OpenModalEditSchemaPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        kind,\n        isOpen: true,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onCloseModal = useCallback(() => {\n    setFormModalNavigationState(INITIAL_STATE_DATA);\n  }, []);\n\n  const onNavigateToChooseAttributeModal = useCallback(\n    ({ forTarget, targetUid }: NavigateToChooseAttributeModalPayload) => {\n      setFormModalNavigationState((prev: State) => ({\n        ...prev,\n        forTarget,\n        targetUid,\n        modalType: 'chooseAttribute',\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onNavigateToCreateComponentStep2 = useCallback(() => {\n    setFormModalNavigationState((prev: State) => ({\n      ...prev,\n      attributeType: 'component',\n      modalType: 'attribute',\n      step: '2',\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onNavigateToAddCompoToDZModal = useCallback(\n    ({ dynamicZoneTarget }: NavigateToAddCompoToDZModalPayload) => {\n      setFormModalNavigationState((prev: State) => ({\n        ...prev,\n        dynamicZoneTarget,\n        modalType: 'addComponentToDynamicZone',\n        actionType: 'create',\n        step: '1',\n        attributeType: null,\n        attributeName: null,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const setActiveTab = useCallback((value: Tab) => {\n    setFormModalNavigationState((prev: State) => ({\n      ...prev,\n      activeTab: value,\n    }));\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      ...state,\n      onClickSelectField,\n      onClickSelectCustomField,\n      onCloseModal,\n      onNavigateToChooseAttributeModal,\n      onNavigateToAddCompoToDZModal,\n      onOpenModalAddComponentsToDZ,\n      onNavigateToCreateComponentStep2,\n      onOpenModalAddField,\n      onOpenModalCreateSchema,\n      onOpenModalEditField,\n      onOpenModalEditCustomField,\n      onOpenModalEditSchema,\n      setFormModalNavigationState,\n      setActiveTab,\n    }),\n    [\n      state,\n      onClickSelectField,\n      onClickSelectCustomField,\n      onCloseModal,\n      onNavigateToChooseAttributeModal,\n      onNavigateToAddCompoToDZModal,\n      onOpenModalAddComponentsToDZ,\n      onNavigateToCreateComponentStep2,\n      onOpenModalAddField,\n      onOpenModalCreateSchema,\n      onOpenModalEditField,\n      onOpenModalEditCustomField,\n      onOpenModalEditSchema,\n      setActiveTab,\n    ]\n  );\n\n  return (\n    <FormModalNavigationContext.Provider value={contextValue}>\n      {children}\n    </FormModalNavigationContext.Provider>\n  );\n};\n"],"names":["INITIAL_STATE_DATA","actionType","attributeName","attributeType","dynamicZoneTarget","forTarget","modalType","isOpen","showBackLink","kind","step","targetUid","customFieldUid","activeTab","FormModalNavigationProvider","children","state","setFormModalNavigationState","useState","trackUsage","useTracking","onClickSelectCustomField","useCallback","prevState","onClickSelectField","type","onOpenModalAddComponentsToDZ","onOpenModalAddField","onOpenModalCreateSchema","nextState","onOpenModalEditCustomField","onOpenModalEditField","onOpenModalEditSchema","onCloseModal","onNavigateToChooseAttributeModal","prev","onNavigateToCreateComponentStep2","onNavigateToAddCompoToDZModal","setActiveTab","value","contextValue","useMemo","_jsx","FormModalNavigationContext","Provider"],"mappings":"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"}