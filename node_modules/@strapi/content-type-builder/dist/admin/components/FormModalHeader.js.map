{"version":3,"file":"FormModalHeader.js","sources":["../../../admin/src/components/FormModalHeader.tsx"],"sourcesContent":["/**\n *\n * FormModalHeader\n *\n */\nimport { Box, Flex, Breadcrumbs, Crumb, Link, Modal } from '@strapi/design-system';\nimport { ArrowLeft } from '@strapi/icons';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\nimport { AttributeIcon, IconByType } from './AttributeIcon';\nimport { useDataManager } from './DataManager/useDataManager';\nimport { useFormModalNavigation } from './FormModalNavigation/useFormModalNavigation';\n\nimport type { Internal } from '@strapi/types';\n\ninterface Header {\n  label: string;\n  info?: { category: string; name: string };\n}\n\ntype BaseProps = {\n  actionType?: string | null;\n  attributeName: string;\n  attributeType: IconByType;\n  contentTypeKind: IconByType;\n  dynamicZoneTarget: string;\n  modalType: string | null;\n  customFieldUid?: string | null;\n  showBackLink?: boolean;\n};\n\ntype FormModalHeaderProps = BaseProps &\n  (\n    | { forTarget: 'component'; targetUid: Internal.UID.Component }\n    | { forTarget: 'contentType'; targetUid: Internal.UID.ContentType }\n  );\n\nexport const FormModalHeader = ({\n  actionType = null,\n  attributeName,\n  attributeType,\n  contentTypeKind,\n  dynamicZoneTarget,\n  forTarget,\n  modalType = null,\n  targetUid,\n  customFieldUid = null,\n  showBackLink = false,\n}: FormModalHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const { components, contentTypes } = useDataManager();\n  const { onOpenModalAddField } = useFormModalNavigation();\n\n  let icon: IconByType = 'component';\n  let headers: Header[] = [];\n\n  const type = forTarget === 'component' ? components[targetUid] : contentTypes[targetUid];\n\n  const displayName = type?.info.displayName;\n\n  if (modalType === 'contentType') {\n    icon = contentTypeKind;\n  }\n\n  if (['component'].includes(modalType || '')) {\n    icon = 'component';\n  }\n\n  const isCreatingMainSchema = ['component', 'contentType'].includes(modalType || '');\n\n  if (isCreatingMainSchema) {\n    let headerId = getTrad(`modalForm.component.header-${actionType}`);\n\n    if (modalType === 'contentType') {\n      headerId = getTrad(`modalForm.${contentTypeKind}.header-create`);\n    }\n\n    if (actionType === 'edit') {\n      headerId = getTrad(`modalForm.header-edit`);\n    }\n\n    return (\n      <Modal.Header>\n        <Flex>\n          <Box>\n            <AttributeIcon type={icon} />\n          </Box>\n          <Box paddingLeft={3}>\n            <Modal.Title>{formatMessage({ id: headerId }, { name: displayName })}</Modal.Title>\n          </Box>\n        </Flex>\n      </Modal.Header>\n    );\n  }\n\n  headers = [\n    {\n      label: displayName,\n      info: {\n        category: ('category' in type && type?.category) || '',\n        name: type?.info?.displayName,\n      },\n    },\n  ];\n\n  if (modalType === 'chooseAttribute') {\n    icon = forTarget === 'component' ? 'component' : 'kind' in type ? type.kind : '';\n  }\n\n  if (modalType === 'addComponentToDynamicZone') {\n    icon = 'dynamiczone';\n    headers.push({ label: dynamicZoneTarget });\n  }\n\n  if (modalType === 'attribute' || modalType === 'customField') {\n    icon = attributeType;\n    headers.push({ label: attributeName });\n  }\n\n  return (\n    <Modal.Header>\n      <Flex gap={3}>\n        {showBackLink && (\n          // This is a workaround and should use the LinkButton with a variant that currently doesn't exist\n          <Link\n            aria-label={formatMessage({\n              id: getTrad('modalForm.header.back'),\n              defaultMessage: 'Back',\n            })}\n            startIcon={<ArrowLeft />}\n            onClick={() => onOpenModalAddField({ forTarget, targetUid })}\n            href=\"#back\"\n            isExternal={false}\n          />\n        )}\n        <AttributeIcon type={icon} customField={customFieldUid} />\n\n        <Breadcrumbs label={headers.map(({ label }) => label).join(',')}>\n          {headers.map(({ label, info }, index, arr) => {\n            label = upperFirst(label);\n\n            if (!label) {\n              return null;\n            }\n\n            const key = `${label}.${index}`;\n\n            if (info?.category) {\n              label = `${label} (${upperFirst(info.category)} - ${upperFirst(info.name)})`;\n            }\n\n            return (\n              <Crumb isCurrent={index === arr.length - 1} key={key}>\n                {label}\n              </Crumb>\n            );\n          })}\n        </Breadcrumbs>\n      </Flex>\n    </Modal.Header>\n  );\n};\n"],"names":["FormModalHeader","actionType","attributeName","attributeType","contentTypeKind","dynamicZoneTarget","forTarget","modalType","targetUid","customFieldUid","showBackLink","formatMessage","useIntl","components","contentTypes","useDataManager","onOpenModalAddField","useFormModalNavigation","icon","headers","type","displayName","info","includes","isCreatingMainSchema","headerId","getTrad","_jsx","Modal","Header","_jsxs","Flex","Box","AttributeIcon","paddingLeft","Title","id","name","label","category","kind","push","gap","Link","aria-label","defaultMessage","startIcon","ArrowLeft","onClick","href","isExternal","customField","Breadcrumbs","map","join","index","arr","upperFirst","key","Crumb","isCurrent","length"],"mappings":"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"}