{"version":3,"file":"AttributeOption.mjs","sources":["../../../../admin/src/components/AttributeOptions/AttributeOption.tsx"],"sourcesContent":["/**\n *\n * AttributeOption\n *\n */\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { Sparkle } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { AttributeIcon, IconByType } from '../AttributeIcon';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport { OptionBoxWrapper } from './OptionBoxWrapper';\n\nconst newAttributes: string[] = [];\n\nconst NewBadge = () => (\n  <Flex grow={1} justifyContent=\"flex-end\">\n    <Flex gap={1} hasRadius background=\"alternative100\" padding={`0.2rem 0.4rem`}>\n      <Sparkle width={`1rem`} height={`1rem`} fill=\"alternative600\" />\n      <Typography textColor=\"alternative600\" variant=\"sigma\">\n        New\n      </Typography>\n    </Flex>\n  </Flex>\n);\n\ntype AttributeOptionProps = {\n  type: IconByType;\n};\n\nexport const AttributeOption = ({ type = 'text' }: AttributeOptionProps) => {\n  const { formatMessage } = useIntl();\n\n  const { onClickSelectField } = useFormModalNavigation();\n\n  const handleClick = () => {\n    const step = type === 'component' ? '1' : null;\n\n    onClickSelectField({\n      attributeType: type,\n      step,\n    });\n  };\n\n  return (\n    <OptionBoxWrapper padding={4} tag=\"button\" hasRadius type=\"button\" onClick={handleClick}>\n      <Flex>\n        <AttributeIcon type={type} />\n        <Box paddingLeft={4} width=\"100%\">\n          <Flex justifyContent=\"space-between\">\n            <Typography fontWeight=\"bold\" textColor=\"neutral800\">\n              {formatMessage({ id: getTrad(`attribute.${type}`), defaultMessage: type })}\n            </Typography>\n            {newAttributes.includes(type) && <NewBadge />}\n          </Flex>\n          <Flex>\n            <Typography variant=\"pi\" textColor=\"neutral600\">\n              {formatMessage({\n                id: getTrad(`attribute.${type}.description`),\n                defaultMessage: 'A type for modeling data',\n              })}\n            </Typography>\n          </Flex>\n        </Box>\n      </Flex>\n    </OptionBoxWrapper>\n  );\n};\n"],"names":["newAttributes","NewBadge","_jsx","Flex","grow","justifyContent","_jsxs","gap","hasRadius","background","padding","Sparkle","width","height","fill","Typography","textColor","variant","AttributeOption","type","formatMessage","useIntl","onClickSelectField","useFormModalNavigation","handleClick","step","attributeType","OptionBoxWrapper","tag","onClick","AttributeIcon","Box","paddingLeft","fontWeight","id","getTrad","defaultMessage","includes"],"mappings":";;;;;;;;;AAgBA,MAAMA,gBAA0B,EAAE;AAElC,MAAMC,QAAAA,GAAW,kBACfC,GAACC,CAAAA,IAAAA,EAAAA;QAAKC,IAAM,EAAA,CAAA;QAAGC,cAAe,EAAA,UAAA;AAC5B,QAAA,QAAA,gBAAAC,IAACH,CAAAA,IAAAA,EAAAA;YAAKI,GAAK,EAAA,CAAA;YAAGC,SAAS,EAAA,IAAA;YAACC,UAAW,EAAA,gBAAA;YAAiBC,OAAS,EAAA,CAAC,aAAa,CAAC;;8BAC1ER,GAACS,CAAAA,OAAAA,EAAAA;oBAAQC,KAAO,EAAA,CAAC,IAAI,CAAC;oBAAEC,MAAQ,EAAA,CAAC,IAAI,CAAC;oBAAEC,IAAK,EAAA;;8BAC7CZ,GAACa,CAAAA,UAAAA,EAAAA;oBAAWC,SAAU,EAAA,gBAAA;oBAAiBC,OAAQ,EAAA,OAAA;AAAQ,oBAAA,QAAA,EAAA;;;;;MAWhDC,eAAkB,GAAA,CAAC,EAAEC,IAAAA,GAAO,MAAM,EAAwB,GAAA;IACrE,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAE1B,MAAM,EAAEC,kBAAkB,EAAE,GAAGC,sBAAAA,EAAAA;AAE/B,IAAA,MAAMC,WAAc,GAAA,IAAA;QAClB,MAAMC,IAAAA,GAAON,IAAS,KAAA,WAAA,GAAc,GAAM,GAAA,IAAA;QAE1CG,kBAAmB,CAAA;YACjBI,aAAeP,EAAAA,IAAAA;AACfM,YAAAA;AACF,SAAA,CAAA;AACF,KAAA;AAEA,IAAA,qBACEvB,GAACyB,CAAAA,gBAAAA,EAAAA;QAAiBjB,OAAS,EAAA,CAAA;QAAGkB,GAAI,EAAA,QAAA;QAASpB,SAAS,EAAA,IAAA;QAACW,IAAK,EAAA,QAAA;QAASU,OAASL,EAAAA,WAAAA;AAC1E,QAAA,QAAA,gBAAAlB,IAACH,CAAAA,IAAAA,EAAAA;;8BACCD,GAAC4B,CAAAA,aAAAA,EAAAA;oBAAcX,IAAMA,EAAAA;;8BACrBb,IAACyB,CAAAA,GAAAA,EAAAA;oBAAIC,WAAa,EAAA,CAAA;oBAAGpB,KAAM,EAAA,MAAA;;sCACzBN,IAACH,CAAAA,IAAAA,EAAAA;4BAAKE,cAAe,EAAA,eAAA;;8CACnBH,GAACa,CAAAA,UAAAA,EAAAA;oCAAWkB,UAAW,EAAA,MAAA;oCAAOjB,SAAU,EAAA,YAAA;8CACrCI,aAAc,CAAA;AAAEc,wCAAAA,EAAAA,EAAIC,OAAQ,CAAA,CAAC,UAAU,EAAEhB,KAAK,CAAC,CAAA;wCAAGiB,cAAgBjB,EAAAA;AAAK,qCAAA;;gCAEzEnB,aAAcqC,CAAAA,QAAQ,CAAClB,IAAAA,CAAAA,kBAASjB,GAACD,CAAAA,QAAAA,EAAAA,EAAAA;;;sCAEpCC,GAACC,CAAAA,IAAAA,EAAAA;AACC,4BAAA,QAAA,gBAAAD,GAACa,CAAAA,UAAAA,EAAAA;gCAAWE,OAAQ,EAAA,IAAA;gCAAKD,SAAU,EAAA,YAAA;0CAChCI,aAAc,CAAA;AACbc,oCAAAA,EAAAA,EAAIC,QAAQ,CAAC,UAAU,EAAEhB,IAAAA,CAAK,YAAY,CAAC,CAAA;oCAC3CiB,cAAgB,EAAA;AAClB,iCAAA;;;;;;;;AAOd;;;;"}