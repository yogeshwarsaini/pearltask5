{"version":3,"file":"CustomRadioGroup.js","sources":["../../../../admin/src/components/CustomRadioGroup/CustomRadioGroup.tsx"],"sourcesContent":["import { Box, Flex, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { Wrapper } from './Styles';\n\nimport type { IntlLabel } from '../../types';\n\ninterface Radio {\n  title: IntlLabel;\n  description: IntlLabel;\n  value: any;\n}\n\ninterface CustomRadioGroupProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  radios?: Radio[];\n  value?: string | boolean;\n}\n\nexport const CustomRadioGroup = ({\n  intlLabel,\n  name,\n  onChange,\n  radios = [],\n  value,\n}: CustomRadioGroupProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n      <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral800\" htmlFor={name} tag=\"label\">\n        {formatMessage(intlLabel)}\n      </Typography>\n      <Wrapper gap={4} alignItems=\"stretch\">\n        {radios.map((radio) => {\n          return (\n            <label htmlFor={radio.value.toString()} key={radio.value} className=\"container\">\n              <input\n                id={radio.value.toString()}\n                name={name}\n                className=\"option-input\"\n                checked={radio.value === value}\n                value={radio.value}\n                key={radio.value}\n                onChange={onChange}\n                type=\"radio\"\n              />\n              <Box className=\"option\" padding={4}>\n                <Flex>\n                  <Box paddingRight={4}>\n                    <span className=\"checkmark\" />\n                  </Box>\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n                    <Typography fontWeight=\"bold\">{formatMessage(radio.title)}</Typography>\n                    <Typography variant=\"pi\" textColor=\"neutral600\">\n                      {formatMessage(radio.description)}\n                    </Typography>\n                  </Flex>\n                </Flex>\n              </Box>\n            </label>\n          );\n        })}\n      </Wrapper>\n    </Flex>\n  );\n};\n"],"names":["CustomRadioGroup","intlLabel","name","onChange","radios","value","formatMessage","useIntl","_jsxs","Flex","direction","alignItems","gap","_jsx","Typography","variant","fontWeight","textColor","htmlFor","tag","Wrapper","map","radio","label","toString","className","input","id","checked","type","Box","padding","paddingRight","span","title","description"],"mappings":";;;;;;;AAqBaA,MAAAA,gBAAAA,GAAmB,CAAC,EAC/BC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,MAAAA,GAAS,EAAE,EACXC,KAAK,EACiB,GAAA;IACtB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAE1B,IAAA,qBACEC,eAACC,CAAAA,iBAAAA,EAAAA;QAAKC,SAAU,EAAA,QAAA;QAASC,UAAW,EAAA,SAAA;QAAUC,GAAK,EAAA,CAAA;;0BACjDC,cAACC,CAAAA,uBAAAA,EAAAA;gBAAWC,OAAQ,EAAA,IAAA;gBAAKC,UAAW,EAAA,MAAA;gBAAOC,SAAU,EAAA,YAAA;gBAAaC,OAAShB,EAAAA,IAAAA;gBAAMiB,GAAI,EAAA,OAAA;0BAClFb,aAAcL,CAAAA,SAAAA;;0BAEjBY,cAACO,CAAAA,cAAAA,EAAAA;gBAAQR,GAAK,EAAA,CAAA;gBAAGD,UAAW,EAAA,SAAA;0BACzBP,MAAOiB,CAAAA,GAAG,CAAC,CAACC,KAAAA,GAAAA;AACX,oBAAA,qBACEd,eAACe,CAAAA,OAAAA,EAAAA;wBAAML,OAASI,EAAAA,KAAAA,CAAMjB,KAAK,CAACmB,QAAQ,EAAA;wBAAsBC,SAAU,EAAA,WAAA;;0CAClEZ,cAACa,CAAAA,OAAAA,EAAAA;gCACCC,EAAIL,EAAAA,KAAAA,CAAMjB,KAAK,CAACmB,QAAQ,EAAA;gCACxBtB,IAAMA,EAAAA,IAAAA;gCACNuB,SAAU,EAAA,cAAA;gCACVG,OAASN,EAAAA,KAAAA,CAAMjB,KAAK,KAAKA,KAAAA;AACzBA,gCAAAA,KAAAA,EAAOiB,MAAMjB,KAAK;gCAElBF,QAAUA,EAAAA,QAAAA;gCACV0B,IAAK,EAAA;AAFAP,6BAAAA,EAAAA,KAAAA,CAAMjB,KAAK,CAAA;0CAIlBQ,cAACiB,CAAAA,gBAAAA,EAAAA;gCAAIL,SAAU,EAAA,QAAA;gCAASM,OAAS,EAAA,CAAA;AAC/B,gCAAA,QAAA,gBAAAvB,eAACC,CAAAA,iBAAAA,EAAAA;;sDACCI,cAACiB,CAAAA,gBAAAA,EAAAA;4CAAIE,YAAc,EAAA,CAAA;AACjB,4CAAA,QAAA,gBAAAnB,cAACoB,CAAAA,MAAAA,EAAAA;gDAAKR,SAAU,EAAA;;;sDAElBjB,eAACC,CAAAA,iBAAAA,EAAAA;4CAAKC,SAAU,EAAA,QAAA;4CAASC,UAAW,EAAA,SAAA;4CAAUC,GAAK,EAAA,CAAA;;8DACjDC,cAACC,CAAAA,uBAAAA,EAAAA;oDAAWE,UAAW,EAAA,MAAA;AAAQV,oDAAAA,QAAAA,EAAAA,aAAAA,CAAcgB,MAAMY,KAAK;;8DACxDrB,cAACC,CAAAA,uBAAAA,EAAAA;oDAAWC,OAAQ,EAAA,IAAA;oDAAKE,SAAU,EAAA,YAAA;AAChCX,oDAAAA,QAAAA,EAAAA,aAAAA,CAAcgB,MAAMa,WAAW;;;;;;;;AAnBGb,qBAAAA,EAAAA,KAAAA,CAAMjB,KAAK,CAAA;AA0B5D,iBAAA;;;;AAIR;;;;"}