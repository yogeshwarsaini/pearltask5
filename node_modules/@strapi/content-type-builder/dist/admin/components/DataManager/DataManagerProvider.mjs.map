{"version":3,"file":"DataManagerProvider.mjs","sources":["../../../../admin/src/components/DataManager/DataManagerProvider.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  useGuidedTour,\n  useTracking,\n  useStrapiApp,\n  useNotification,\n  useAppInfo,\n  useFetchClient,\n  useAuth,\n  adminApi,\n} from '@strapi/admin/strapi-admin';\nimport groupBy from 'lodash/groupBy';\nimport isEqual from 'lodash/isEqual';\nimport mapValues from 'lodash/mapValues';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { useAutoReloadOverlayBlocker } from '../AutoReloadOverlayBlocker';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport { DataManagerContext, type DataManagerContextValue } from './DataManagerContext';\nimport { actions, initialState, type State } from './reducer';\nimport { useServerRestartWatcher } from './useServerRestartWatcher';\nimport { sortContentType, stateToRequestData } from './utils/cleanData';\nimport { retrieveComponentsThatHaveComponents } from './utils/retrieveComponentsThatHaveComponents';\nimport { retrieveNestedComponents } from './utils/retrieveNestedComponents';\nimport { retrieveSpecificInfoFromComponents } from './utils/retrieveSpecificInfoFromComponents';\n\nimport type { ContentTypes, ContentType, Components } from '../../types';\nimport type { FormAPI } from '../../utils/formAPI';\nimport type { Internal } from '@strapi/types';\n\ninterface DataManagerProviderProps {\n  children: React.ReactNode;\n}\n\nconst selectState = (state: Record<string, unknown>) =>\n  (state['content-type-builder_dataManagerProvider'] || initialState) as State;\n\nconst DataManagerProvider = ({ children }: DataManagerProviderProps) => {\n  const dispatch = useDispatch();\n  const state = useSelector(selectState);\n\n  const {\n    components,\n    contentTypes,\n    reservedNames,\n    initialComponents,\n    initialContentTypes,\n    isLoading,\n  } = state.current;\n\n  const { toggleNotification } = useNotification();\n  const { lockAppWithAutoreload, unlockAppWithAutoreload } = useAutoReloadOverlayBlocker();\n  const { setCurrentStep, setStepState } = useGuidedTour('DataManagerProvider', (state) => state);\n  const serverRestartWatcher = useServerRestartWatcher();\n\n  const getPlugin = useStrapiApp('DataManagerProvider', (state) => state.getPlugin);\n  const plugin = getPlugin('content-type-builder');\n  const autoReload = useAppInfo('DataManagerProvider', (state) => state.autoReload);\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const refetchPermissions = useAuth('DataManagerProvider', (state) => state.refetchPermissions);\n  const { onCloseModal } = useFormModalNavigation();\n\n  const [isSaving, setIsSaving] = React.useState(false);\n\n  const isModified = React.useMemo(() => {\n    return !(isEqual(components, initialComponents) && isEqual(contentTypes, initialContentTypes));\n  }, [components, contentTypes, initialComponents, initialContentTypes]);\n\n  const fetchClient = useFetchClient();\n\n  const isInDevelopmentMode = autoReload;\n\n  const getDataRef = React.useRef<any>();\n\n  getDataRef.current = async () => {\n    try {\n      const [schemaResponse, reservedNamesResponse] = await Promise.all([\n        fetchClient.get(`/content-type-builder/schema`),\n        fetchClient.get(`/content-type-builder/reserved-names`),\n      ]);\n\n      const { components, contentTypes } = schemaResponse.data.data;\n\n      dispatch(\n        actions.init({\n          components: mapValues(components, (component) => ({\n            ...component,\n            status: 'UNCHANGED',\n          })) as Components,\n          contentTypes: mapValues(contentTypes, (contentType) => ({\n            ...contentType,\n            status: 'UNCHANGED',\n          })) as ContentTypes,\n          reservedNames: reservedNamesResponse.data,\n        })\n      );\n\n      dispatch(actions.clearHistory());\n    } catch (err) {\n      console.error({ err });\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    getDataRef.current();\n\n    return () => {\n      // Reload the plugin so the cycle is new again\n      dispatch(actions.reloadPlugin());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (!autoReload) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({ id: getTrad('notification.info.autoreaload-disable') }),\n      });\n    }\n  }, [autoReload, toggleNotification, formatMessage]);\n\n  const getAllComponentsThatHaveAComponentInTheirAttributes = (components: Components) => {\n    const composWithCompos = retrieveComponentsThatHaveComponents(components);\n\n    return composWithCompos;\n  };\n\n  const getAllNestedComponents = (components: Components) => {\n    const appNestedCompo = retrieveNestedComponents(components);\n\n    return appNestedCompo;\n  };\n\n  const updatePermissions = async () => {\n    await refetchPermissions();\n  };\n\n  const saveSchema = async () => {\n    setIsSaving(true);\n\n    const PluginForms = plugin?.apis?.forms as FormAPI;\n\n    const mutatedCTs = Object.entries(state.current.contentTypes).reduce(\n      (acc, [uid, contentType]) => {\n        acc[uid] = PluginForms.mutateContentTypeSchema(\n          contentType,\n          initialContentTypes[uid]\n        ) as ContentType;\n\n        return acc;\n      },\n      {} as ContentTypes\n    );\n\n    const { requestData, trackingEventProperties } = stateToRequestData({\n      components: state.current.components,\n      contentTypes: mutatedCTs,\n    });\n\n    const isSendingContentTypes = Object.keys(state.current.contentTypes).length > 0;\n\n    lockAppWithAutoreload();\n\n    try {\n      await fetchClient.post(`/content-type-builder/update-schema`, { data: requestData });\n\n      if (isSendingContentTypes) {\n        setStepState('contentTypeBuilder.success', true);\n        trackUsage('didCreateGuidedTourCollectionType');\n        setCurrentStep(null);\n      }\n\n      // Make sure the server has restarted\n      await serverRestartWatcher();\n      // Invalidate the guided tour meta query cache\n      // @ts-expect-error typescript is unable to infer the tag types defined on adminApi\n      dispatch(adminApi.util.invalidateTags(['GuidedTourMeta']));\n      // refetch and update initial state after the data has been saved\n      await getDataRef.current();\n      // Update the app's permissions\n      await updatePermissions();\n    } catch (err) {\n      console.error({ err });\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n\n      trackUsage('didUpdateCTBSchema', { ...trackingEventProperties, success: false });\n    } finally {\n      setIsSaving(false);\n      unlockAppWithAutoreload();\n\n      trackUsage('didUpdateCTBSchema', { ...trackingEventProperties, success: true });\n    }\n  };\n\n  const componentsThatHaveOtherComponentInTheirAttributes = React.useMemo(() => {\n    return getAllComponentsThatHaveAComponentInTheirAttributes(components);\n  }, [components]);\n\n  const nestedComponents = React.useMemo(() => {\n    return getAllNestedComponents(components);\n  }, [components]);\n\n  const allComponentsCategories = React.useMemo(() => {\n    return retrieveSpecificInfoFromComponents(components, ['category']);\n  }, [components]);\n\n  const componentsGroupedByCategory = React.useMemo(() => {\n    return groupBy(components, 'category');\n  }, [components]);\n\n  const sortedContentTypesList = React.useMemo(() => {\n    return sortContentType(contentTypes);\n  }, [contentTypes]);\n\n  const context: DataManagerContextValue = {\n    componentsThatHaveOtherComponentInTheirAttributes,\n    nestedComponents,\n    saveSchema,\n    reservedNames,\n    components,\n    contentTypes,\n    initialComponents,\n    initialContentTypes,\n    isSaving,\n    isModified,\n    isInDevelopmentMode,\n    allComponentsCategories,\n    componentsGroupedByCategory,\n    sortedContentTypesList,\n    isLoading,\n    addAttribute(payload) {\n      dispatch(actions.addAttribute(payload));\n    },\n    editAttribute(payload) {\n      dispatch(actions.editAttribute(payload));\n    },\n    addCustomFieldAttribute(payload) {\n      dispatch(actions.addCustomFieldAttribute(payload));\n    },\n    editCustomFieldAttribute(payload) {\n      dispatch(actions.editCustomFieldAttribute(payload));\n    },\n    addCreatedComponentToDynamicZone(payload) {\n      dispatch(actions.addCreatedComponentToDynamicZone(payload));\n    },\n    createSchema(payload) {\n      dispatch(actions.createSchema(payload));\n    },\n    createComponentSchema({ data, uid, componentCategory }) {\n      dispatch(actions.createComponentSchema({ data, uid, componentCategory }));\n    },\n    changeDynamicZoneComponents({ forTarget, targetUid, dynamicZoneTarget, newComponents }) {\n      dispatch(\n        actions.changeDynamicZoneComponents({\n          forTarget,\n          targetUid,\n          dynamicZoneTarget,\n          newComponents,\n        })\n      );\n    },\n    removeAttribute(payload) {\n      if (payload.forTarget === 'contentType') {\n        trackUsage('willDeleteFieldOfContentType');\n      }\n\n      dispatch(actions.removeField(payload));\n    },\n    removeComponentFromDynamicZone(payload) {\n      dispatch(actions.removeComponentFromDynamicZone(payload));\n    },\n    deleteComponent(uid: Internal.UID.Component) {\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(`popUpWarning.bodyMessage.component.delete`),\n        })\n      );\n\n      if (userConfirm) {\n        onCloseModal();\n\n        dispatch(actions.deleteComponent(uid));\n      }\n    },\n    deleteContentType(uid: Internal.UID.ContentType) {\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(`popUpWarning.bodyMessage.contentType.delete`),\n        })\n      );\n\n      if (userConfirm) {\n        onCloseModal();\n\n        dispatch(actions.deleteContentType(uid));\n      }\n    },\n\n    updateComponentSchema({ data, componentUID }) {\n      dispatch(\n        actions.updateComponentSchema({\n          data,\n          uid: componentUID,\n        })\n      );\n    },\n\n    updateComponentUid({ componentUID, newComponentUID }) {\n      dispatch(\n        actions.updateComponentUid({\n          uid: componentUID,\n          newComponentUID,\n        })\n      );\n    },\n\n    updateSchema(args) {\n      dispatch(actions.updateSchema(args));\n    },\n\n    moveAttribute(args) {\n      dispatch(actions.moveAttribute(args));\n    },\n\n    applyChange(args) {\n      dispatch(actions.applyChange(args));\n    },\n\n    history: {\n      undo() {\n        dispatch(actions.undo());\n      },\n\n      redo() {\n        dispatch(actions.redo());\n      },\n\n      discardAllChanges() {\n        dispatch(actions.discardAll());\n      },\n\n      canUndo: state.past.length > 0,\n      canRedo: state.future.length > 0,\n      canDiscardAll: isModified,\n    },\n  };\n\n  return <DataManagerContext.Provider value={context}>{children}</DataManagerContext.Provider>;\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default DataManagerProvider;\n"],"names":["selectState","state","initialState","DataManagerProvider","children","dispatch","useDispatch","useSelector","components","contentTypes","reservedNames","initialComponents","initialContentTypes","isLoading","current","toggleNotification","useNotification","lockAppWithAutoreload","unlockAppWithAutoreload","useAutoReloadOverlayBlocker","setCurrentStep","setStepState","useGuidedTour","serverRestartWatcher","useServerRestartWatcher","getPlugin","useStrapiApp","plugin","autoReload","useAppInfo","formatMessage","useIntl","trackUsage","useTracking","refetchPermissions","useAuth","onCloseModal","useFormModalNavigation","isSaving","setIsSaving","React","useState","isModified","useMemo","isEqual","fetchClient","useFetchClient","isInDevelopmentMode","getDataRef","useRef","schemaResponse","reservedNamesResponse","Promise","all","get","data","actions","init","mapValues","component","status","contentType","clearHistory","err","console","error","type","message","id","defaultMessage","useEffect","reloadPlugin","getTrad","getAllComponentsThatHaveAComponentInTheirAttributes","composWithCompos","retrieveComponentsThatHaveComponents","getAllNestedComponents","appNestedCompo","retrieveNestedComponents","updatePermissions","saveSchema","PluginForms","apis","forms","mutatedCTs","Object","entries","reduce","acc","uid","mutateContentTypeSchema","requestData","trackingEventProperties","stateToRequestData","isSendingContentTypes","keys","length","post","adminApi","util","invalidateTags","success","componentsThatHaveOtherComponentInTheirAttributes","nestedComponents","allComponentsCategories","retrieveSpecificInfoFromComponents","componentsGroupedByCategory","groupBy","sortedContentTypesList","sortContentType","context","addAttribute","payload","editAttribute","addCustomFieldAttribute","editCustomFieldAttribute","addCreatedComponentToDynamicZone","createSchema","createComponentSchema","componentCategory","changeDynamicZoneComponents","forTarget","targetUid","dynamicZoneTarget","newComponents","removeAttribute","removeField","removeComponentFromDynamicZone","deleteComponent","userConfirm","window","confirm","deleteContentType","updateComponentSchema","componentUID","updateComponentUid","newComponentUID","updateSchema","args","moveAttribute","applyChange","history","undo","redo","discardAllChanges","discardAll","canUndo","past","canRedo","future","canDiscardAll","_jsx","DataManagerContext","Provider","value"],"mappings":";;;;;;;;;;;;;;;;;;;AAsCA,MAAMA,cAAc,CAACC,KAAAA,GAClBA,KAAK,CAAC,2CAA2C,IAAIC,YAAAA;AAExD,MAAMC,mBAAsB,GAAA,CAAC,EAAEC,QAAQ,EAA4B,GAAA;AACjE,IAAA,MAAMC,QAAWC,GAAAA,WAAAA,EAAAA;AACjB,IAAA,MAAML,QAAQM,WAAYP,CAAAA,WAAAA,CAAAA;AAE1B,IAAA,MAAM,EACJQ,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,EACnBC,SAAS,EACV,GAAGZ,MAAMa,OAAO;IAEjB,MAAM,EAAEC,kBAAkB,EAAE,GAAGC,eAAAA,EAAAA;AAC/B,IAAA,MAAM,EAAEC,qBAAqB,EAAEC,uBAAuB,EAAE,GAAGC,2BAAAA,EAAAA;IAC3D,MAAM,EAAEC,cAAc,EAAEC,YAAY,EAAE,GAAGC,aAAAA,CAAc,qBAAuB,EAAA,CAACrB,KAAUA,GAAAA,KAAAA,CAAAA;AACzF,IAAA,MAAMsB,oBAAuBC,GAAAA,uBAAAA,EAAAA;AAE7B,IAAA,MAAMC,YAAYC,YAAa,CAAA,qBAAA,EAAuB,CAACzB,KAAAA,GAAUA,MAAMwB,SAAS,CAAA;AAChF,IAAA,MAAME,SAASF,SAAU,CAAA,sBAAA,CAAA;AACzB,IAAA,MAAMG,aAAaC,UAAW,CAAA,qBAAA,EAAuB,CAAC5B,KAAAA,GAAUA,MAAM2B,UAAU,CAAA;IAChF,MAAM,EAAEE,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAC1B,MAAM,EAAEC,UAAU,EAAE,GAAGC,WAAAA,EAAAA;AACvB,IAAA,MAAMC,qBAAqBC,OAAQ,CAAA,qBAAA,EAAuB,CAAClC,KAAAA,GAAUA,MAAMiC,kBAAkB,CAAA;IAC7F,MAAM,EAAEE,YAAY,EAAE,GAAGC,sBAAAA,EAAAA;AAEzB,IAAA,MAAM,CAACC,QAAUC,EAAAA,WAAAA,CAAY,GAAGC,KAAAA,CAAMC,QAAQ,CAAC,KAAA,CAAA;IAE/C,MAAMC,UAAAA,GAAaF,KAAMG,CAAAA,OAAO,CAAC,IAAA;AAC/B,QAAA,OAAO,EAAEC,OAAAA,CAAQpC,YAAYG,iBAAsBiC,CAAAA,IAAAA,OAAAA,CAAQnC,cAAcG,mBAAmB,CAAA,CAAA;KAC3F,EAAA;AAACJ,QAAAA,UAAAA;AAAYC,QAAAA,YAAAA;AAAcE,QAAAA,iBAAAA;AAAmBC,QAAAA;AAAoB,KAAA,CAAA;AAErE,IAAA,MAAMiC,WAAcC,GAAAA,cAAAA,EAAAA;AAEpB,IAAA,MAAMC,mBAAsBnB,GAAAA,UAAAA;IAE5B,MAAMoB,UAAAA,GAAaR,MAAMS,MAAM,EAAA;AAE/BD,IAAAA,UAAAA,CAAWlC,OAAO,GAAG,UAAA;QACnB,IAAI;AACF,YAAA,MAAM,CAACoC,cAAgBC,EAAAA,qBAAAA,CAAsB,GAAG,MAAMC,OAAAA,CAAQC,GAAG,CAAC;AAChER,gBAAAA,WAAAA,CAAYS,GAAG,CAAC,CAAC,4BAA4B,CAAC,CAAA;AAC9CT,gBAAAA,WAAAA,CAAYS,GAAG,CAAC,CAAC,oCAAoC,CAAC;AACvD,aAAA,CAAA;YAED,MAAM,EAAE9C,UAAU,EAAEC,YAAY,EAAE,GAAGyC,cAAAA,CAAeK,IAAI,CAACA,IAAI;YAE7DlD,QACEmD,CAAAA,OAAAA,CAAQC,IAAI,CAAC;AACXjD,gBAAAA,UAAAA,EAAYkD,SAAUlD,CAAAA,UAAAA,EAAY,CAACmD,SAAAA,IAAe;AAChD,wBAAA,GAAGA,SAAS;wBACZC,MAAQ,EAAA;qBACV,CAAA,CAAA;AACAnD,gBAAAA,YAAAA,EAAciD,SAAUjD,CAAAA,YAAAA,EAAc,CAACoD,WAAAA,IAAiB;AACtD,wBAAA,GAAGA,WAAW;wBACdD,MAAQ,EAAA;qBACV,CAAA,CAAA;AACAlD,gBAAAA,aAAAA,EAAeyC,sBAAsBI;AACvC,aAAA,CAAA,CAAA;AAGFlD,YAAAA,QAAAA,CAASmD,QAAQM,YAAY,EAAA,CAAA;AAC/B,SAAA,CAAE,OAAOC,GAAK,EAAA;AACZC,YAAAA,OAAAA,CAAQC,KAAK,CAAC;AAAEF,gBAAAA;AAAI,aAAA,CAAA;YACpBhD,kBAAmB,CAAA;gBACjBmD,IAAM,EAAA,QAAA;AACNC,gBAAAA,OAAAA,EAASrC,aAAc,CAAA;oBAAEsC,EAAI,EAAA,oBAAA;oBAAsBC,cAAgB,EAAA;AAAoB,iBAAA;AACzF,aAAA,CAAA;AACF;AACF,KAAA;AAEA7B,IAAAA,KAAAA,CAAM8B,SAAS,CAAC,IAAA;AACdtB,QAAAA,UAAAA,CAAWlC,OAAO,EAAA;QAElB,OAAO,IAAA;;AAELT,YAAAA,QAAAA,CAASmD,QAAQe,YAAY,EAAA,CAAA;AAC/B,SAAA;;AAEF,KAAA,EAAG,EAAE,CAAA;AAEL/B,IAAAA,KAAAA,CAAM8B,SAAS,CAAC,IAAA;AACd,QAAA,IAAI,CAAC1C,UAAY,EAAA;YACfb,kBAAmB,CAAA;gBACjBmD,IAAM,EAAA,MAAA;AACNC,gBAAAA,OAAAA,EAASrC,aAAc,CAAA;AAAEsC,oBAAAA,EAAAA,EAAII,OAAQ,CAAA,uCAAA;AAAyC,iBAAA;AAChF,aAAA,CAAA;AACF;KACC,EAAA;AAAC5C,QAAAA,UAAAA;AAAYb,QAAAA,kBAAAA;AAAoBe,QAAAA;AAAc,KAAA,CAAA;AAElD,IAAA,MAAM2C,sDAAsD,CAACjE,UAAAA,GAAAA;AAC3D,QAAA,MAAMkE,mBAAmBC,oCAAqCnE,CAAAA,UAAAA,CAAAA;QAE9D,OAAOkE,gBAAAA;AACT,KAAA;AAEA,IAAA,MAAME,yBAAyB,CAACpE,UAAAA,GAAAA;AAC9B,QAAA,MAAMqE,iBAAiBC,wBAAyBtE,CAAAA,UAAAA,CAAAA;QAEhD,OAAOqE,cAAAA;AACT,KAAA;AAEA,IAAA,MAAME,iBAAoB,GAAA,UAAA;QACxB,MAAM7C,kBAAAA,EAAAA;AACR,KAAA;AAEA,IAAA,MAAM8C,UAAa,GAAA,UAAA;QACjBzC,WAAY,CAAA,IAAA,CAAA;QAEZ,MAAM0C,WAAAA,GAActD,QAAQuD,IAAMC,EAAAA,KAAAA;AAElC,QAAA,MAAMC,UAAaC,GAAAA,MAAAA,CAAOC,OAAO,CAACrF,MAAMa,OAAO,CAACL,YAAY,CAAA,CAAE8E,MAAM,CAClE,CAACC,GAAK,EAAA,CAACC,KAAK5B,WAAY,CAAA,GAAA;YACtB2B,GAAG,CAACC,IAAI,GAAGR,WAAAA,CAAYS,uBAAuB,CAC5C7B,WAAAA,EACAjD,mBAAmB,CAAC6E,GAAI,CAAA,CAAA;YAG1B,OAAOD,GAAAA;AACT,SAAA,EACA,EAAC,CAAA;AAGH,QAAA,MAAM,EAAEG,WAAW,EAAEC,uBAAuB,EAAE,GAAGC,kBAAmB,CAAA;YAClErF,UAAYP,EAAAA,KAAAA,CAAMa,OAAO,CAACN,UAAU;YACpCC,YAAc2E,EAAAA;AAChB,SAAA,CAAA;QAEA,MAAMU,qBAAAA,GAAwBT,MAAOU,CAAAA,IAAI,CAAC9F,KAAAA,CAAMa,OAAO,CAACL,YAAY,CAAEuF,CAAAA,MAAM,GAAG,CAAA;AAE/E/E,QAAAA,qBAAAA,EAAAA;QAEA,IAAI;AACF,YAAA,MAAM4B,YAAYoD,IAAI,CAAC,CAAC,mCAAmC,CAAC,EAAE;gBAAE1C,IAAMoC,EAAAA;AAAY,aAAA,CAAA;AAElF,YAAA,IAAIG,qBAAuB,EAAA;AACzBzE,gBAAAA,YAAAA,CAAa,4BAA8B,EAAA,IAAA,CAAA;gBAC3CW,UAAW,CAAA,mCAAA,CAAA;gBACXZ,cAAe,CAAA,IAAA,CAAA;AACjB;;YAGA,MAAMG,oBAAAA,EAAAA;;;AAGNlB,YAAAA,QAAAA,CAAS6F,QAASC,CAAAA,IAAI,CAACC,cAAc,CAAC;AAAC,gBAAA;AAAiB,aAAA,CAAA,CAAA;;AAExD,YAAA,MAAMpD,WAAWlC,OAAO,EAAA;;YAExB,MAAMiE,iBAAAA,EAAAA;AACR,SAAA,CAAE,OAAOhB,GAAK,EAAA;AACZC,YAAAA,OAAAA,CAAQC,KAAK,CAAC;AAAEF,gBAAAA;AAAI,aAAA,CAAA;YACpBhD,kBAAmB,CAAA;gBACjBmD,IAAM,EAAA,QAAA;AACNC,gBAAAA,OAAAA,EAASrC,aAAc,CAAA;oBAAEsC,EAAI,EAAA,oBAAA;oBAAsBC,cAAgB,EAAA;AAAoB,iBAAA;AACzF,aAAA,CAAA;AAEArC,YAAAA,UAAAA,CAAW,oBAAsB,EAAA;AAAE,gBAAA,GAAG4D,uBAAuB;gBAAES,OAAS,EAAA;AAAM,aAAA,CAAA;SACtE,QAAA;YACR9D,WAAY,CAAA,KAAA,CAAA;AACZrB,YAAAA,uBAAAA,EAAAA;AAEAc,YAAAA,UAAAA,CAAW,oBAAsB,EAAA;AAAE,gBAAA,GAAG4D,uBAAuB;gBAAES,OAAS,EAAA;AAAK,aAAA,CAAA;AAC/E;AACF,KAAA;IAEA,MAAMC,iDAAAA,GAAoD9D,KAAMG,CAAAA,OAAO,CAAC,IAAA;AACtE,QAAA,OAAO8B,mDAAoDjE,CAAAA,UAAAA,CAAAA;KAC1D,EAAA;AAACA,QAAAA;AAAW,KAAA,CAAA;IAEf,MAAM+F,gBAAAA,GAAmB/D,KAAMG,CAAAA,OAAO,CAAC,IAAA;AACrC,QAAA,OAAOiC,sBAAuBpE,CAAAA,UAAAA,CAAAA;KAC7B,EAAA;AAACA,QAAAA;AAAW,KAAA,CAAA;IAEf,MAAMgG,uBAAAA,GAA0BhE,KAAMG,CAAAA,OAAO,CAAC,IAAA;AAC5C,QAAA,OAAO8D,mCAAmCjG,UAAY,EAAA;AAAC,YAAA;AAAW,SAAA,CAAA;KACjE,EAAA;AAACA,QAAAA;AAAW,KAAA,CAAA;IAEf,MAAMkG,2BAAAA,GAA8BlE,KAAMG,CAAAA,OAAO,CAAC,IAAA;AAChD,QAAA,OAAOgE,QAAQnG,UAAY,EAAA,UAAA,CAAA;KAC1B,EAAA;AAACA,QAAAA;AAAW,KAAA,CAAA;IAEf,MAAMoG,sBAAAA,GAAyBpE,KAAMG,CAAAA,OAAO,CAAC,IAAA;AAC3C,QAAA,OAAOkE,eAAgBpG,CAAAA,YAAAA,CAAAA;KACtB,EAAA;AAACA,QAAAA;AAAa,KAAA,CAAA;AAEjB,IAAA,MAAMqG,OAAmC,GAAA;AACvCR,QAAAA,iDAAAA;AACAC,QAAAA,gBAAAA;AACAvB,QAAAA,UAAAA;AACAtE,QAAAA,aAAAA;AACAF,QAAAA,UAAAA;AACAC,QAAAA,YAAAA;AACAE,QAAAA,iBAAAA;AACAC,QAAAA,mBAAAA;AACA0B,QAAAA,QAAAA;AACAI,QAAAA,UAAAA;AACAK,QAAAA,mBAAAA;AACAyD,QAAAA,uBAAAA;AACAE,QAAAA,2BAAAA;AACAE,QAAAA,sBAAAA;AACA/F,QAAAA,SAAAA;AACAkG,QAAAA,YAAAA,CAAAA,CAAaC,OAAO,EAAA;YAClB3G,QAASmD,CAAAA,OAAAA,CAAQuD,YAAY,CAACC,OAAAA,CAAAA,CAAAA;AAChC,SAAA;AACAC,QAAAA,aAAAA,CAAAA,CAAcD,OAAO,EAAA;YACnB3G,QAASmD,CAAAA,OAAAA,CAAQyD,aAAa,CAACD,OAAAA,CAAAA,CAAAA;AACjC,SAAA;AACAE,QAAAA,uBAAAA,CAAAA,CAAwBF,OAAO,EAAA;YAC7B3G,QAASmD,CAAAA,OAAAA,CAAQ0D,uBAAuB,CAACF,OAAAA,CAAAA,CAAAA;AAC3C,SAAA;AACAG,QAAAA,wBAAAA,CAAAA,CAAyBH,OAAO,EAAA;YAC9B3G,QAASmD,CAAAA,OAAAA,CAAQ2D,wBAAwB,CAACH,OAAAA,CAAAA,CAAAA;AAC5C,SAAA;AACAI,QAAAA,gCAAAA,CAAAA,CAAiCJ,OAAO,EAAA;YACtC3G,QAASmD,CAAAA,OAAAA,CAAQ4D,gCAAgC,CAACJ,OAAAA,CAAAA,CAAAA;AACpD,SAAA;AACAK,QAAAA,YAAAA,CAAAA,CAAaL,OAAO,EAAA;YAClB3G,QAASmD,CAAAA,OAAAA,CAAQ6D,YAAY,CAACL,OAAAA,CAAAA,CAAAA;AAChC,SAAA;AACAM,QAAAA,qBAAAA,CAAAA,CAAsB,EAAE/D,IAAI,EAAEkC,GAAG,EAAE8B,iBAAiB,EAAE,EAAA;YACpDlH,QAASmD,CAAAA,OAAAA,CAAQ8D,qBAAqB,CAAC;AAAE/D,gBAAAA,IAAAA;AAAMkC,gBAAAA,GAAAA;AAAK8B,gBAAAA;AAAkB,aAAA,CAAA,CAAA;AACxE,SAAA;QACAC,2BAA4B,CAAA,CAAA,EAAEC,SAAS,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,aAAa,EAAE,EAAA;YACpFvH,QACEmD,CAAAA,OAAAA,CAAQgE,2BAA2B,CAAC;AAClCC,gBAAAA,SAAAA;AACAC,gBAAAA,SAAAA;AACAC,gBAAAA,iBAAAA;AACAC,gBAAAA;AACF,aAAA,CAAA,CAAA;AAEJ,SAAA;AACAC,QAAAA,eAAAA,CAAAA,CAAgBb,OAAO,EAAA;YACrB,IAAIA,OAAAA,CAAQS,SAAS,KAAK,aAAe,EAAA;gBACvCzF,UAAW,CAAA,8BAAA,CAAA;AACb;YAEA3B,QAASmD,CAAAA,OAAAA,CAAQsE,WAAW,CAACd,OAAAA,CAAAA,CAAAA;AAC/B,SAAA;AACAe,QAAAA,8BAAAA,CAAAA,CAA+Bf,OAAO,EAAA;YACpC3G,QAASmD,CAAAA,OAAAA,CAAQuE,8BAA8B,CAACf,OAAAA,CAAAA,CAAAA;AAClD,SAAA;AACAgB,QAAAA,eAAAA,CAAAA,CAAgBvC,GAA2B,EAAA;AACzC,YAAA,MAAMwC,WAAcC,GAAAA,MAAAA,CAAOC,OAAO,CAChCrG,aAAc,CAAA;gBACZsC,EAAII,EAAAA,OAAAA,CAAQ,CAAC,yCAAyC,CAAC;AACzD,aAAA,CAAA,CAAA;AAGF,YAAA,IAAIyD,WAAa,EAAA;AACf7F,gBAAAA,YAAAA,EAAAA;gBAEA/B,QAASmD,CAAAA,OAAAA,CAAQwE,eAAe,CAACvC,GAAAA,CAAAA,CAAAA;AACnC;AACF,SAAA;AACA2C,QAAAA,iBAAAA,CAAAA,CAAkB3C,GAA6B,EAAA;AAC7C,YAAA,MAAMwC,WAAcC,GAAAA,MAAAA,CAAOC,OAAO,CAChCrG,aAAc,CAAA;gBACZsC,EAAII,EAAAA,OAAAA,CAAQ,CAAC,2CAA2C,CAAC;AAC3D,aAAA,CAAA,CAAA;AAGF,YAAA,IAAIyD,WAAa,EAAA;AACf7F,gBAAAA,YAAAA,EAAAA;gBAEA/B,QAASmD,CAAAA,OAAAA,CAAQ4E,iBAAiB,CAAC3C,GAAAA,CAAAA,CAAAA;AACrC;AACF,SAAA;AAEA4C,QAAAA,qBAAAA,CAAAA,CAAsB,EAAE9E,IAAI,EAAE+E,YAAY,EAAE,EAAA;YAC1CjI,QACEmD,CAAAA,OAAAA,CAAQ6E,qBAAqB,CAAC;AAC5B9E,gBAAAA,IAAAA;gBACAkC,GAAK6C,EAAAA;AACP,aAAA,CAAA,CAAA;AAEJ,SAAA;AAEAC,QAAAA,kBAAAA,CAAAA,CAAmB,EAAED,YAAY,EAAEE,eAAe,EAAE,EAAA;YAClDnI,QACEmD,CAAAA,OAAAA,CAAQ+E,kBAAkB,CAAC;gBACzB9C,GAAK6C,EAAAA,YAAAA;AACLE,gBAAAA;AACF,aAAA,CAAA,CAAA;AAEJ,SAAA;AAEAC,QAAAA,YAAAA,CAAAA,CAAaC,IAAI,EAAA;YACfrI,QAASmD,CAAAA,OAAAA,CAAQiF,YAAY,CAACC,IAAAA,CAAAA,CAAAA;AAChC,SAAA;AAEAC,QAAAA,aAAAA,CAAAA,CAAcD,IAAI,EAAA;YAChBrI,QAASmD,CAAAA,OAAAA,CAAQmF,aAAa,CAACD,IAAAA,CAAAA,CAAAA;AACjC,SAAA;AAEAE,QAAAA,WAAAA,CAAAA,CAAYF,IAAI,EAAA;YACdrI,QAASmD,CAAAA,OAAAA,CAAQoF,WAAW,CAACF,IAAAA,CAAAA,CAAAA;AAC/B,SAAA;QAEAG,OAAS,EAAA;AACPC,YAAAA,IAAAA,CAAAA,GAAAA;AACEzI,gBAAAA,QAAAA,CAASmD,QAAQsF,IAAI,EAAA,CAAA;AACvB,aAAA;AAEAC,YAAAA,IAAAA,CAAAA,GAAAA;AACE1I,gBAAAA,QAAAA,CAASmD,QAAQuF,IAAI,EAAA,CAAA;AACvB,aAAA;AAEAC,YAAAA,iBAAAA,CAAAA,GAAAA;AACE3I,gBAAAA,QAAAA,CAASmD,QAAQyF,UAAU,EAAA,CAAA;AAC7B,aAAA;AAEAC,YAAAA,OAAAA,EAASjJ,KAAMkJ,CAAAA,IAAI,CAACnD,MAAM,GAAG,CAAA;AAC7BoD,YAAAA,OAAAA,EAASnJ,KAAMoJ,CAAAA,MAAM,CAACrD,MAAM,GAAG,CAAA;YAC/BsD,aAAe5G,EAAAA;AACjB;AACF,KAAA;IAEA,qBAAO6G,GAAA,CAACC,mBAAmBC,QAAQ,EAAA;QAACC,KAAO5C,EAAAA,OAAAA;AAAU1G,QAAAA,QAAAA,EAAAA;;AACvD;;;;"}