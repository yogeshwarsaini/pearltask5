{"version":3,"file":"DisplayedType.js","sources":["../../../admin/src/components/DisplayedType.tsx"],"sourcesContent":["import { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils/getTrad';\n\ntype DisplayedTypeProps = {\n  type: string;\n  customField?: string | null;\n  repeatable?: boolean;\n  multiple?: boolean;\n};\n\nexport const DisplayedType = ({\n  type,\n  customField = null,\n  repeatable = false,\n  multiple = false,\n}: DisplayedTypeProps) => {\n  const { formatMessage } = useIntl();\n\n  let readableType = type;\n\n  if (['integer', 'biginteger', 'float', 'decimal'].includes(type)) {\n    readableType = 'number';\n  } else if (['string'].includes(type)) {\n    readableType = 'text';\n  }\n\n  if (customField) {\n    return formatMessage({\n      id: getTrad('attribute.customField'),\n      defaultMessage: 'Custom field',\n    });\n  }\n\n  return (\n    <>\n      {repeatable &&\n        formatMessage({\n          id: getTrad('component.repeatable'),\n          defaultMessage: 'Repeatable',\n        })}\n      {multiple &&\n        formatMessage({\n          id: getTrad('media.multiple'),\n          defaultMessage: 'Multiple',\n        })}\n      &nbsp;\n      {formatMessage({\n        id: getTrad(`attribute.${readableType}`),\n        defaultMessage: type,\n      })}\n    </>\n  );\n};\n"],"names":["DisplayedType","type","customField","repeatable","multiple","formatMessage","useIntl","readableType","includes","id","getTrad","defaultMessage","_jsxs","_Fragment"],"mappings":";;;;;;AAWaA,MAAAA,aAAAA,GAAgB,CAAC,EAC5BC,IAAI,EACJC,WAAAA,GAAc,IAAI,EAClBC,UAAa,GAAA,KAAK,EAClBC,QAAAA,GAAW,KAAK,EACG,GAAA;IACnB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;AAE1B,IAAA,IAAIC,YAAeN,GAAAA,IAAAA;IAEnB,IAAI;AAAC,QAAA,SAAA;AAAW,QAAA,YAAA;AAAc,QAAA,OAAA;AAAS,QAAA;KAAU,CAACO,QAAQ,CAACP,IAAO,CAAA,EAAA;QAChEM,YAAe,GAAA,QAAA;AACjB,KAAA,MAAO,IAAI;AAAC,QAAA;KAAS,CAACC,QAAQ,CAACP,IAAO,CAAA,EAAA;QACpCM,YAAe,GAAA,MAAA;AACjB;AAEA,IAAA,IAAIL,WAAa,EAAA;AACf,QAAA,OAAOG,aAAc,CAAA;AACnBI,YAAAA,EAAAA,EAAIC,eAAQ,CAAA,uBAAA,CAAA;YACZC,cAAgB,EAAA;AAClB,SAAA,CAAA;AACF;IAEA,qBACEC,eAAA,CAAAC,mBAAA,EAAA;;AACGV,YAAAA,UAAAA,IACCE,aAAc,CAAA;AACZI,gBAAAA,EAAAA,EAAIC,eAAQ,CAAA,sBAAA,CAAA;gBACZC,cAAgB,EAAA;AAClB,aAAA,CAAA;AACDP,YAAAA,QAAAA,IACCC,aAAc,CAAA;AACZI,gBAAAA,EAAAA,EAAIC,eAAQ,CAAA,gBAAA,CAAA;gBACZC,cAAgB,EAAA;AAClB,aAAA,CAAA;AAAG,YAAA,GAAA;YAEJN,aAAc,CAAA;AACbI,gBAAAA,EAAAA,EAAIC,eAAQ,CAAA,CAAC,UAAU,EAAEH,aAAa,CAAC,CAAA;gBACvCI,cAAgBV,EAAAA;AAClB,aAAA;;;AAGN;;;;"}