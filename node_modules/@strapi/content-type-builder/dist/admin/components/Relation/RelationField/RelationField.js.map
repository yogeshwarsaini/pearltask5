{"version":3,"file":"RelationField.js","sources":["../../../../../admin/src/components/Relation/RelationField/RelationField.tsx"],"sourcesContent":["import { Box, Divider, Flex, Typography } from '@strapi/design-system';\n\nimport { getTrad } from '../../../utils/getTrad';\nimport { GenericInput } from '../../GenericInputs';\n\nimport { RelationTargetPicker } from './RelationTargetPicker/RelationTargetPicker';\n\nimport type { Internal } from '@strapi/types';\n\ninterface RelationFormBoxProps {\n  disabled?: boolean;\n  error?: Record<string, any>;\n  header?: string;\n  isMain?: boolean;\n  name: string;\n  onChange: (value: any) => void;\n  oneThatIsCreatingARelationWithAnother?: string;\n  target?: Internal.UID.ContentType;\n  value?: string;\n}\n\nexport const RelationFormBox = ({\n  disabled = false,\n  error,\n  header,\n  isMain = false,\n  name,\n  onChange,\n  oneThatIsCreatingARelationWithAnother = '',\n  target,\n  value = '',\n}: RelationFormBoxProps) => {\n  return (\n    <Box background=\"neutral100\" hasRadius borderColor=\"neutral200\">\n      <Flex paddingTop={isMain ? 4 : 1} paddingBottom={isMain ? 3 : 1} justifyContent=\"center\">\n        {isMain ? (\n          <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral800\">\n            {header}\n          </Typography>\n        ) : (\n          <RelationTargetPicker\n            target={target!}\n            oneThatIsCreatingARelationWithAnother={oneThatIsCreatingARelationWithAnother}\n          />\n        )}\n      </Flex>\n      <Divider background=\"neutral200\" />\n      <Box padding={4}>\n        <GenericInput\n          disabled={disabled}\n          error={error?.id || null}\n          intlLabel={{\n            id: getTrad('form.attribute.item.defineRelation.fieldName'),\n            defaultMessage: 'Field name',\n          }}\n          name={name}\n          onChange={onChange}\n          type=\"text\"\n          value={value}\n        />\n      </Box>\n    </Box>\n  );\n};\n"],"names":["RelationFormBox","disabled","error","header","isMain","name","onChange","oneThatIsCreatingARelationWithAnother","target","value","_jsxs","Box","background","hasRadius","borderColor","_jsx","Flex","paddingTop","paddingBottom","justifyContent","Typography","variant","fontWeight","textColor","RelationTargetPicker","Divider","padding","GenericInput","id","intlLabel","getTrad","defaultMessage","type"],"mappings":";;;;;;;;AAqBO,MAAMA,eAAkB,GAAA,CAAC,EAC9BC,QAAAA,GAAW,KAAK,EAChBC,KAAK,EACLC,MAAM,EACNC,MAAAA,GAAS,KAAK,EACdC,IAAI,EACJC,QAAQ,EACRC,qCAAAA,GAAwC,EAAE,EAC1CC,MAAM,EACNC,KAAQ,GAAA,EAAE,EACW,GAAA;AACrB,IAAA,qBACEC,eAACC,CAAAA,gBAAAA,EAAAA;QAAIC,UAAW,EAAA,YAAA;QAAaC,SAAS,EAAA,IAAA;QAACC,WAAY,EAAA,YAAA;;0BACjDC,cAACC,CAAAA,iBAAAA,EAAAA;AAAKC,gBAAAA,UAAAA,EAAYb,SAAS,CAAI,GAAA,CAAA;AAAGc,gBAAAA,aAAAA,EAAed,SAAS,CAAI,GAAA,CAAA;gBAAGe,cAAe,EAAA,QAAA;AAC7Ef,gBAAAA,QAAAA,EAAAA,MAAAA,iBACCW,cAACK,CAAAA,uBAAAA,EAAAA;oBAAWC,OAAQ,EAAA,IAAA;oBAAKC,UAAW,EAAA,MAAA;oBAAOC,SAAU,EAAA,YAAA;AAClDpB,oBAAAA,QAAAA,EAAAA;mCAGHY,cAACS,CAAAA,yCAAAA,EAAAA;oBACChB,MAAQA,EAAAA,MAAAA;oBACRD,qCAAuCA,EAAAA;;;0BAI7CQ,cAACU,CAAAA,oBAAAA,EAAAA;gBAAQb,UAAW,EAAA;;0BACpBG,cAACJ,CAAAA,gBAAAA,EAAAA;gBAAIe,OAAS,EAAA,CAAA;AACZ,gBAAA,QAAA,gBAAAX,cAACY,CAAAA,0BAAAA,EAAAA;oBACC1B,QAAUA,EAAAA,QAAAA;AACVC,oBAAAA,KAAAA,EAAOA,OAAO0B,EAAM,IAAA,IAAA;oBACpBC,SAAW,EAAA;AACTD,wBAAAA,EAAAA,EAAIE,eAAQ,CAAA,8CAAA,CAAA;wBACZC,cAAgB,EAAA;AAClB,qBAAA;oBACA1B,IAAMA,EAAAA,IAAAA;oBACNC,QAAUA,EAAAA,QAAAA;oBACV0B,IAAK,EAAA,MAAA;oBACLvB,KAAOA,EAAAA;;;;;AAKjB;;;;"}