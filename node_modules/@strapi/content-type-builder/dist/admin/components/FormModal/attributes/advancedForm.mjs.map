{"version":3,"file":"advancedForm.mjs","sources":["../../../../../admin/src/components/FormModal/attributes/advancedForm.ts"],"sourcesContent":["import { getTrad } from '../../../utils/getTrad';\nimport { componentForm } from '../component/componentForm';\n\nimport { attributeOptions } from './attributeOptions';\n\ntype DataType = 'biginteger' | 'string' | 'integer' | 'float' | 'decimal';\n\nconst conditionSection = {\n  sectionTitle: {\n    id: getTrad('form.attribute.condition.title'),\n    defaultMessage: 'Condition',\n  },\n  intlLabel: {\n    id: getTrad('form.attribute.condition.description'),\n    defaultMessage:\n      'Toggle field settings depending on the value of another boolean or enumeration field.',\n  },\n  items: [\n    {\n      name: 'conditions',\n      type: 'condition-form',\n      intlLabel: {\n        id: getTrad('form.attribute.condition.label'),\n        defaultMessage: 'Conditions',\n      },\n      validations: {\n        required: true,\n      },\n    },\n  ],\n};\n\nexport const advancedForm = {\n  blocks() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  boolean() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              type: 'select-default-boolean',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              name: 'default',\n              options: [\n                {\n                  value: 'true',\n                  key: 'true',\n                  metadatas: { intlLabel: { id: 'true', defaultMessage: 'true' } },\n                },\n                {\n                  value: '',\n                  key: 'null',\n                  metadatas: { intlLabel: { id: 'null', defaultMessage: 'null' } },\n                },\n                {\n                  value: 'false',\n                  key: 'false',\n                  metadatas: { intlLabel: { id: 'false', defaultMessage: 'false' } },\n                },\n              ],\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  component({ repeatable }: { repeatable: boolean }, step: string) {\n    if (step === '1') {\n      return { sections: componentForm.advanced() };\n    }\n\n    if (repeatable) {\n      const minComponentsAttribute = {\n        ...attributeOptions.min,\n        intlLabel: {\n          id: getTrad('form.attribute.item.minimumComponents'),\n          defaultMessage: 'Minimum components',\n        },\n      };\n      const maxComponentsAttribute = {\n        ...attributeOptions.max,\n        intlLabel: {\n          id: getTrad('form.attribute.item.maximumComponents'),\n          defaultMessage: 'Maximum components',\n        },\n      };\n      return {\n        sections: [\n          {\n            sectionTitle: {\n              id: 'global.settings',\n              defaultMessage: 'Settings',\n            },\n            items: [\n              attributeOptions.required,\n              attributeOptions.private,\n              minComponentsAttribute,\n              maxComponentsAttribute,\n            ],\n          },\n          conditionSection,\n        ],\n      };\n    }\n\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  date({ type }: { type: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: type || 'date',\n              value: null,\n              withDefaultValue: false,\n              disabled: !type,\n              autoFocus: false,\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.unique, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  dynamiczone() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.max, attributeOptions.min],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  email() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: 'email',\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  enumeration(data: { enum: Array<string> }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              name: 'default',\n              type: 'select',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: {\n                    intlLabel: {\n                      id: 'components.InputSelect.option.placeholder',\n                      defaultMessage: 'Choose here',\n                    },\n                  },\n                },\n                ...(data.enum || [])\n                  .filter((value, index) => data.enum.indexOf(value) === index && value)\n                  .map((value) => {\n                    return {\n                      key: value,\n                      value,\n                      metadatas: {\n                        intlLabel: { id: `${value}.no-override`, defaultMessage: value },\n                      },\n                    };\n                  }),\n              ],\n            },\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.item.enumeration.graphql'),\n                defaultMessage: 'Name override for GraphQL',\n              },\n              name: 'enumName',\n              type: 'text',\n              validations: {},\n              description: {\n                id: getTrad('form.attribute.item.enumeration.graphql.description'),\n                defaultMessage: 'Allows you to override the default generated name for GraphQL',\n              },\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  json() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  media() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.media.allowed-types'),\n                defaultMessage: 'Select allowed types of media',\n              },\n              name: 'allowedTypes',\n              type: 'allowed-types-select',\n              size: 7,\n              value: '',\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  number(data: { type: DataType }) {\n    const inputStep = data.type === 'decimal' || data.type === 'float' ? 'any' : 1;\n\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              name: 'default',\n              type: data.type === 'biginteger' ? 'text' : 'number',\n              step: inputStep,\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.max,\n            attributeOptions.min,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  password() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  relation() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  richtext() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  text() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default, attributeOptions.regex] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  uid(data: { targetField: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            { ...attributeOptions.default, disabled: Boolean(data.targetField), type: 'text' },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n            attributeOptions.regex,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n};\n"],"names":["conditionSection","sectionTitle","id","getTrad","defaultMessage","intlLabel","items","name","type","validations","required","advancedForm","blocks","sections","attributeOptions","private","boolean","autoFocus","options","value","key","metadatas","component","repeatable","step","componentForm","advanced","minComponentsAttribute","min","maxComponentsAttribute","max","date","default","withDefaultValue","disabled","unique","dynamiczone","email","maxLength","minLength","enumeration","data","enum","filter","index","indexOf","map","description","json","media","size","number","inputStep","password","relation","richtext","text","regex","uid","Boolean","targetField"],"mappings":"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"}