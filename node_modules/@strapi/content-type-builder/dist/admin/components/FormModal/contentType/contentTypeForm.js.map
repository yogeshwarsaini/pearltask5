{"version":3,"file":"contentTypeForm.js","sources":["../../../../../admin/src/components/FormModal/contentType/contentTypeForm.ts"],"sourcesContent":["import { getTrad } from '../../../utils/getTrad';\n\nconst nameField = {\n  name: 'displayName',\n  type: 'text',\n  intlLabel: {\n    id: getTrad('contentType.displayName.label'),\n    defaultMessage: 'Display name',\n  },\n};\n\nexport const contentTypeForm = {\n  advanced: {\n    default() {\n      return {\n        sections: [\n          {\n            items: [\n              {\n                intlLabel: {\n                  id: getTrad('contentType.draftAndPublish.label'),\n                  defaultMessage: 'Draft & publish',\n                },\n                description: {\n                  id: getTrad('contentType.draftAndPublish.description'),\n                  defaultMessage:\n                    'Allows writing a draft version of an entry, before it is published',\n                },\n                name: 'draftAndPublish',\n                type: 'toggle-draft-publish',\n                validations: {},\n              },\n            ],\n          },\n        ],\n      };\n    },\n  },\n  base: {\n    create() {\n      return {\n        sections: [\n          {\n            sectionTitle: null,\n            items: [\n              nameField,\n              {\n                description: {\n                  id: getTrad('contentType.apiId-singular.description'),\n                  defaultMessage:\n                    'Used to generate the API routes and databases tables/collections',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-singular.label'),\n                  defaultMessage: 'API ID (Singular)',\n                },\n                name: 'singularName',\n                type: 'text-singular',\n              },\n              {\n                type: 'pushRight',\n                size: 6,\n                intlLabel: { id: '', defaultMessage: '' },\n                name: 'pushRight',\n              },\n              {\n                description: {\n                  id: getTrad('contentType.apiId-plural.description'),\n                  defaultMessage: 'Pluralized API ID',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-plural.label'),\n                  defaultMessage: 'API ID (Plural)',\n                },\n                name: 'pluralName',\n                type: 'text-plural',\n              },\n            ],\n          },\n        ],\n      };\n    },\n    edit() {\n      return {\n        sections: [\n          {\n            sectionTitle: null,\n            items: [\n              nameField,\n              {\n                disabled: true,\n                description: {\n                  id: getTrad('contentType.apiId-singular.description'),\n                  defaultMessage:\n                    'Used to generate the API routes and databases tables/collections',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-singular.label'),\n                  defaultMessage: 'API ID (Singular)',\n                },\n                name: 'singularName',\n                type: 'text',\n              },\n              {\n                type: 'pushRight',\n                size: 6,\n                intlLabel: { id: '', defaultMessage: '' },\n                name: 'pushRight',\n              },\n              {\n                disabled: true,\n                description: {\n                  id: getTrad('contentType.apiId-plural.description'),\n                  defaultMessage: 'Pluralized API ID',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-plural.label'),\n                  defaultMessage: 'API ID (Plural)',\n                },\n                name: 'pluralName',\n                type: 'text',\n              },\n              {\n                intlLabel: {\n                  id: 'global.type',\n                  defaultMessage: 'Type',\n                },\n                name: 'kind',\n                type: 'content-type-radio-group',\n                size: 12,\n                radios: [\n                  {\n                    title: {\n                      id: getTrad('form.button.collection-type.name'),\n                      defaultMessage: 'Collection Type',\n                    },\n                    description: {\n                      id: getTrad('form.button.collection-type.description'),\n                      defaultMessage:\n                        'Best for multiple instances like articles, products, comments, etc.',\n                    },\n                    value: 'collectionType',\n                  },\n                  {\n                    title: {\n                      id: getTrad('form.button.single-type.name'),\n                      defaultMessage: 'Single Type',\n                    },\n                    description: {\n                      id: getTrad('form.button.single-type.description'),\n                      defaultMessage: 'Best for single instance like about us, homepage, etc.',\n                    },\n                    value: 'singleType',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      };\n    },\n  },\n};\n"],"names":["nameField","name","type","intlLabel","id","getTrad","defaultMessage","contentTypeForm","advanced","default","sections","items","description","validations","base","create","sectionTitle","size","edit","disabled","radios","title","value"],"mappings":"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"}