{"version":3,"file":"BooleanDefaultValueSelect.mjs","sources":["../../../admin/src/components/BooleanDefaultValueSelect.tsx"],"sourcesContent":["import { Field, SingleSelect, SingleSelectOption } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { IntlLabel } from '../types';\n\ninterface Metadata {\n  intlLabel: IntlLabel;\n  disabled?: boolean;\n  hidden?: boolean;\n}\n\ninterface Option {\n  metadatas: Metadata;\n  key: string | number;\n  value: string | number;\n}\n\ninterface BooleanDefaultValueSelectProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  options: Option[];\n  value?: any;\n}\n\nexport const BooleanDefaultValueSelect = ({\n  intlLabel,\n  name,\n  options,\n  onChange,\n  value = null,\n}: BooleanDefaultValueSelectProps) => {\n  const { formatMessage } = useIntl();\n  const label = intlLabel.id\n    ? formatMessage(\n        { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n        { ...intlLabel.values }\n      )\n    : name;\n\n  const handleChange = (value: any) => {\n    let nextValue: boolean | string = '';\n\n    if (value === 'true') {\n      nextValue = true;\n    }\n\n    if (value === 'false') {\n      nextValue = false;\n    }\n\n    onChange({ target: { name, value: nextValue, type: 'select-default-boolean' } });\n  };\n\n  return (\n    <Field.Root name={name}>\n      <Field.Label>{label}</Field.Label>\n      <SingleSelect onChange={handleChange} value={(value === null ? '' : value).toString()}>\n        {options.map(({ metadatas: { intlLabel, disabled, hidden }, key, value }) => {\n          return (\n            <SingleSelectOption key={key} value={value} disabled={disabled} hidden={hidden}>\n              {/* No need to translate the options */}\n              {intlLabel.defaultMessage}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n    </Field.Root>\n  );\n};\n"],"names":["BooleanDefaultValueSelect","intlLabel","name","options","onChange","value","formatMessage","useIntl","label","id","defaultMessage","values","handleChange","nextValue","target","type","_jsxs","Field","Root","_jsx","Label","SingleSelect","toString","map","metadatas","disabled","hidden","key","SingleSelectOption"],"mappings":";;;;AAyBaA,MAAAA,yBAAAA,GAA4B,CAAC,EACxCC,SAAS,EACTC,IAAI,EACJC,OAAO,EACPC,QAAQ,EACRC,KAAAA,GAAQ,IAAI,EACmB,GAAA;IAC/B,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAC1B,IAAA,MAAMC,KAAQP,GAAAA,SAAAA,CAAUQ,EAAE,GACtBH,aACE,CAAA;AAAEG,QAAAA,EAAAA,EAAIR,UAAUQ,EAAE;AAAEC,QAAAA,cAAAA,EAAgBT,UAAUS;KAC9C,EAAA;AAAE,QAAA,GAAGT,UAAUU;KAEjBT,CAAAA,GAAAA,IAAAA;AAEJ,IAAA,MAAMU,eAAe,CAACP,KAAAA,GAAAA;AACpB,QAAA,IAAIQ,SAA8B,GAAA,EAAA;AAElC,QAAA,IAAIR,UAAU,MAAQ,EAAA;YACpBQ,SAAY,GAAA,IAAA;AACd;AAEA,QAAA,IAAIR,UAAU,OAAS,EAAA;YACrBQ,SAAY,GAAA,KAAA;AACd;QAEAT,QAAS,CAAA;YAAEU,MAAQ,EAAA;AAAEZ,gBAAAA,IAAAA;gBAAMG,KAAOQ,EAAAA,SAAAA;gBAAWE,IAAM,EAAA;AAAyB;AAAE,SAAA,CAAA;AAChF,KAAA;IAEA,qBACEC,IAAA,CAACC,MAAMC,IAAI,EAAA;QAAChB,IAAMA,EAAAA,IAAAA;;AAChB,0BAAAiB,GAAA,CAACF,MAAMG,KAAK,EAAA;AAAEZ,gBAAAA,QAAAA,EAAAA;;0BACdW,GAACE,CAAAA,YAAAA,EAAAA;gBAAajB,QAAUQ,EAAAA,YAAAA;AAAcP,gBAAAA,KAAAA,EAAO,CAACA,KAAAA,KAAU,OAAO,EAAKA,GAAAA,KAAI,EAAGiB,QAAQ,EAAA;AAChFnB,gBAAAA,QAAAA,EAAAA,OAAAA,CAAQoB,GAAG,CAAC,CAAC,EAAEC,SAAAA,EAAW,EAAEvB,SAAS,EAAEwB,QAAQ,EAAEC,MAAM,EAAE,EAAEC,GAAG,EAAEtB,KAAK,EAAE,GAAA;AACtE,oBAAA,qBACEc,GAACS,CAAAA,kBAAAA,EAAAA;wBAA6BvB,KAAOA,EAAAA,KAAAA;wBAAOoB,QAAUA,EAAAA,QAAAA;wBAAUC,MAAQA,EAAAA,MAAAA;AAErEzB,wBAAAA,QAAAA,EAAAA,SAAAA,CAAUS;AAFYiB,qBAAAA,EAAAA,GAAAA,CAAAA;AAK7B,iBAAA;;;;AAIR;;;;"}