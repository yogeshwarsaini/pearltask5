{"version":3,"file":"LinkToCMSettingsView.mjs","sources":["../../../../admin/src/pages/ListView/LinkToCMSettingsView.tsx"],"sourcesContent":["import { memo } from 'react';\n\nimport { type Permission, useRBAC } from '@strapi/admin/strapi-admin';\nimport { Button } from '@strapi/design-system';\nimport { ListPlus } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport type { Component, ContentType } from '../../types';\n\nconst cmPermissions: Record<string, Permission[]> = {\n  collectionTypesConfigurations: [\n    {\n      action: 'plugin::content-manager.collection-types.configure-view',\n      subject: null,\n    },\n  ],\n  componentsConfigurations: [\n    {\n      action: 'plugin::content-manager.components.configure-layout',\n      subject: null,\n    },\n  ],\n  singleTypesConfigurations: [\n    {\n      action: 'plugin::content-manager.single-types.configure-view',\n      subject: null,\n    },\n  ],\n};\n\nconst getPermission = (type: Component | ContentType) => {\n  if (type.modelType === 'contentType') {\n    if (type.kind === 'singleType') {\n      return cmPermissions.singleTypesConfigurations;\n    }\n\n    return cmPermissions.collectionTypesConfigurations;\n  }\n\n  return cmPermissions.componentsConfigurations;\n};\n\ninterface LinkToCMSettingsViewProps {\n  disabled: boolean;\n  type: Component | ContentType;\n}\n\nconst getLink = (type: Component | ContentType) => {\n  switch (type.modelType) {\n    case 'contentType':\n      switch (type.kind) {\n        case 'singleType':\n          return `/content-manager/single-types/${type.uid}/configurations/edit`;\n        case 'collectionType':\n          return `/content-manager/collection-types/${type.uid}/configurations/edit`;\n      }\n    case 'component':\n      return `/content-manager/components/${type.uid}/configurations/edit`;\n  }\n};\n\nconst StyledButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nexport const LinkToCMSettingsView = memo(({ disabled, type }: LinkToCMSettingsViewProps) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const permissionsToApply = getPermission(type);\n\n  const label = formatMessage({\n    id: 'content-type-builder.form.button.configure-view',\n    defaultMessage: 'Configure the view',\n  });\n\n  const handleClick = () => {\n    if (disabled) {\n      return false;\n    }\n\n    const link = getLink(type);\n\n    navigate(link);\n\n    return false;\n  };\n\n  const { isLoading, allowedActions } = useRBAC(permissionsToApply);\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (!allowedActions.canConfigureView && !allowedActions.canConfigureLayout) {\n    return null;\n  }\n\n  return (\n    <StyledButton\n      startIcon={<ListPlus />}\n      variant=\"tertiary\"\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </StyledButton>\n  );\n});\n"],"names":["cmPermissions","collectionTypesConfigurations","action","subject","componentsConfigurations","singleTypesConfigurations","getPermission","type","modelType","kind","getLink","uid","StyledButton","styled","Button","LinkToCMSettingsView","memo","disabled","formatMessage","useIntl","navigate","useNavigate","permissionsToApply","label","id","defaultMessage","handleClick","link","isLoading","allowedActions","useRBAC","canConfigureView","canConfigureLayout","_jsx","startIcon","ListPlus","variant","onClick"],"mappings":";;;;;;;;;AAWA,MAAMA,aAA8C,GAAA;IAClDC,6BAA+B,EAAA;AAC7B,QAAA;YACEC,MAAQ,EAAA,yDAAA;YACRC,OAAS,EAAA;AACX;AACD,KAAA;IACDC,wBAA0B,EAAA;AACxB,QAAA;YACEF,MAAQ,EAAA,qDAAA;YACRC,OAAS,EAAA;AACX;AACD,KAAA;IACDE,yBAA2B,EAAA;AACzB,QAAA;YACEH,MAAQ,EAAA,qDAAA;YACRC,OAAS,EAAA;AACX;AACD;AACH,CAAA;AAEA,MAAMG,gBAAgB,CAACC,IAAAA,GAAAA;IACrB,IAAIA,IAAAA,CAAKC,SAAS,KAAK,aAAe,EAAA;QACpC,IAAID,IAAAA,CAAKE,IAAI,KAAK,YAAc,EAAA;AAC9B,YAAA,OAAOT,cAAcK,yBAAyB;AAChD;AAEA,QAAA,OAAOL,cAAcC,6BAA6B;AACpD;AAEA,IAAA,OAAOD,cAAcI,wBAAwB;AAC/C,CAAA;AAOA,MAAMM,UAAU,CAACH,IAAAA,GAAAA;AACf,IAAA,OAAQA,KAAKC,SAAS;QACpB,KAAK,aAAA;AACH,YAAA,OAAQD,KAAKE,IAAI;gBACf,KAAK,YAAA;AACH,oBAAA,OAAO,CAAC,8BAA8B,EAAEF,KAAKI,GAAG,CAAC,oBAAoB,CAAC;gBACxE,KAAK,gBAAA;AACH,oBAAA,OAAO,CAAC,kCAAkC,EAAEJ,KAAKI,GAAG,CAAC,oBAAoB,CAAC;AAC9E;QACF,KAAK,WAAA;AACH,YAAA,OAAO,CAAC,4BAA4B,EAAEJ,KAAKI,GAAG,CAAC,oBAAoB,CAAC;AACxE;AACF,CAAA;AAEA,MAAMC,YAAAA,GAAeC,MAAOC,CAAAA,MAAAA,CAAO;;AAEnC,CAAC;AAEM,MAAMC,qCAAuBC,IAAK,CAAA,CAAC,EAAEC,QAAQ,EAAEV,IAAI,EAA6B,GAAA;IACrF,MAAM,EAAEW,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAC1B,IAAA,MAAMC,QAAWC,GAAAA,WAAAA,EAAAA;AACjB,IAAA,MAAMC,qBAAqBhB,aAAcC,CAAAA,IAAAA,CAAAA;AAEzC,IAAA,MAAMgB,QAAQL,aAAc,CAAA;QAC1BM,EAAI,EAAA,iDAAA;QACJC,cAAgB,EAAA;AAClB,KAAA,CAAA;AAEA,IAAA,MAAMC,WAAc,GAAA,IAAA;AAClB,QAAA,IAAIT,QAAU,EAAA;YACZ,OAAO,KAAA;AACT;AAEA,QAAA,MAAMU,OAAOjB,OAAQH,CAAAA,IAAAA,CAAAA;QAErBa,QAASO,CAAAA,IAAAA,CAAAA;QAET,OAAO,KAAA;AACT,KAAA;AAEA,IAAA,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAE,GAAGC,OAAQR,CAAAA,kBAAAA,CAAAA;AAE9C,IAAA,IAAIM,SAAW,EAAA;QACb,OAAO,IAAA;AACT;AAEA,IAAA,IAAI,CAACC,cAAeE,CAAAA,gBAAgB,IAAI,CAACF,cAAAA,CAAeG,kBAAkB,EAAE;QAC1E,OAAO,IAAA;AACT;AAEA,IAAA,qBACEC,GAACrB,CAAAA,YAAAA,EAAAA;AACCsB,QAAAA,SAAAA,gBAAWD,GAACE,CAAAA,QAAAA,EAAAA,EAAAA,CAAAA;QACZC,OAAQ,EAAA,UAAA;QACRC,OAASX,EAAAA,WAAAA;QACTT,QAAUA,EAAAA,QAAAA;AAETM,QAAAA,QAAAA,EAAAA;;AAGP,CAAG;;;;"}