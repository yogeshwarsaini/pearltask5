{"version":3,"file":"get-attributes-prompts.js","sources":["../../../src/plops/prompts/get-attributes-prompts.ts"],"sourcesContent":["import validateAttributeInput from '../utils/validate-attribute-input';\n\ninterface AttributeAnswer {\n  attributeName: string;\n  attributeType: (typeof DEFAULT_TYPES)[number];\n  enum?: string;\n  multiple?: boolean;\n}\n\nconst DEFAULT_TYPES = [\n  // advanced types\n  'media',\n\n  // scalar types\n  'string',\n  'text',\n  'richtext',\n  'json',\n  'enumeration',\n  'password',\n  'email',\n  'integer',\n  'biginteger',\n  'float',\n  'decimal',\n  'date',\n  'time',\n  'datetime',\n  'timestamp',\n  'boolean',\n] as const;\n\nconst getAttributesPrompts = async (inquirer: any) => {\n  const { addAttributes } = await inquirer.prompt([\n    {\n      type: 'confirm',\n      name: 'addAttributes',\n      message: 'Do you want to add attributes?',\n    },\n  ]);\n\n  const attributes: Array<AttributeAnswer> = [];\n\n  /**\n   * @param {import('inquirer').Inquirer} inquirer\n   * @returns {Promise<void>}\n   */\n  const createNewAttributes = async (inquirer: any) => {\n    const answers = await inquirer.prompt([\n      {\n        type: 'input',\n        name: 'attributeName',\n        message: 'Name of attribute',\n        validate: (input: string) => validateAttributeInput(input),\n      },\n      {\n        type: 'list',\n        name: 'attributeType',\n        message: 'What type of attribute',\n        pageSize: DEFAULT_TYPES.length,\n        choices: DEFAULT_TYPES.map((type) => {\n          return { name: type, value: type };\n        }),\n      },\n      {\n        when: (answers: AttributeAnswer) => answers.attributeType === 'enumeration',\n        type: 'input',\n        name: 'enum',\n        message: 'Add values separated by a comma',\n      },\n      {\n        when: (answers: AttributeAnswer) => answers.attributeType === 'media',\n        type: 'list',\n        name: 'multiple',\n        message: 'Choose media type',\n        choices: [\n          { name: 'Multiple', value: true },\n          { name: 'Single', value: false },\n        ],\n      },\n      {\n        type: 'confirm',\n        name: 'addAttributes',\n        message: 'Do you want to add another attribute?',\n      },\n    ]);\n\n    attributes.push(answers);\n\n    if (!answers.addAttributes) {\n      return;\n    }\n\n    await createNewAttributes(inquirer);\n  };\n\n  if (addAttributes) {\n    await createNewAttributes(inquirer);\n  } else {\n    console.warn(\n      `You won't be able to manage entries from the admin, you can still add attributes later from the content type builder.`\n    );\n  }\n\n  return attributes;\n};\n\nexport default getAttributesPrompts;\n"],"names":["DEFAULT_TYPES","getAttributesPrompts","inquirer","addAttributes","prompt","type","name","message","attributes","createNewAttributes","answers","validate","input","validateAttributeInput","pageSize","length","choices","map","value","when","attributeType","push","console","warn"],"mappings":";;;;AASA,MAAMA,aAAgB,GAAA;;AAEpB,IAAA,OAAA;;AAGA,IAAA,QAAA;AACA,IAAA,MAAA;AACA,IAAA,UAAA;AACA,IAAA,MAAA;AACA,IAAA,aAAA;AACA,IAAA,UAAA;AACA,IAAA,OAAA;AACA,IAAA,SAAA;AACA,IAAA,YAAA;AACA,IAAA,OAAA;AACA,IAAA,SAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,UAAA;AACA,IAAA,WAAA;AACA,IAAA;AACD,CAAA;AAED,MAAMC,uBAAuB,OAAOC,QAAAA,GAAAA;AAClC,IAAA,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAMD,QAAAA,CAASE,MAAM,CAAC;AAC9C,QAAA;YACEC,IAAM,EAAA,SAAA;YACNC,IAAM,EAAA,eAAA;YACNC,OAAS,EAAA;AACX;AACD,KAAA,CAAA;AAED,IAAA,MAAMC,aAAqC,EAAE;AAE7C;;;MAIA,MAAMC,sBAAsB,OAAOP,QAAAA,GAAAA;AACjC,QAAA,MAAMQ,OAAU,GAAA,MAAMR,QAASE,CAAAA,MAAM,CAAC;AACpC,YAAA;gBACEC,IAAM,EAAA,OAAA;gBACNC,IAAM,EAAA,eAAA;gBACNC,OAAS,EAAA,mBAAA;gBACTI,QAAU,EAAA,CAACC,QAAkBC,sBAAuBD,CAAAA,KAAAA;AACtD,aAAA;AACA,YAAA;gBACEP,IAAM,EAAA,MAAA;gBACNC,IAAM,EAAA,eAAA;gBACNC,OAAS,EAAA,wBAAA;AACTO,gBAAAA,QAAAA,EAAUd,cAAce,MAAM;gBAC9BC,OAAShB,EAAAA,aAAAA,CAAciB,GAAG,CAAC,CAACZ,IAAAA,GAAAA;oBAC1B,OAAO;wBAAEC,IAAMD,EAAAA,IAAAA;wBAAMa,KAAOb,EAAAA;AAAK,qBAAA;AACnC,iBAAA;AACF,aAAA;AACA,YAAA;AACEc,gBAAAA,IAAAA,EAAM,CAACT,OAAAA,GAA6BA,OAAQU,CAAAA,aAAa,KAAK,aAAA;gBAC9Df,IAAM,EAAA,OAAA;gBACNC,IAAM,EAAA,MAAA;gBACNC,OAAS,EAAA;AACX,aAAA;AACA,YAAA;AACEY,gBAAAA,IAAAA,EAAM,CAACT,OAAAA,GAA6BA,OAAQU,CAAAA,aAAa,KAAK,OAAA;gBAC9Df,IAAM,EAAA,MAAA;gBACNC,IAAM,EAAA,UAAA;gBACNC,OAAS,EAAA,mBAAA;gBACTS,OAAS,EAAA;AACP,oBAAA;wBAAEV,IAAM,EAAA,UAAA;wBAAYY,KAAO,EAAA;AAAK,qBAAA;AAChC,oBAAA;wBAAEZ,IAAM,EAAA,QAAA;wBAAUY,KAAO,EAAA;AAAM;AAChC;AACH,aAAA;AACA,YAAA;gBACEb,IAAM,EAAA,SAAA;gBACNC,IAAM,EAAA,eAAA;gBACNC,OAAS,EAAA;AACX;AACD,SAAA,CAAA;AAEDC,QAAAA,UAAAA,CAAWa,IAAI,CAACX,OAAAA,CAAAA;QAEhB,IAAI,CAACA,OAAQP,CAAAA,aAAa,EAAE;AAC1B,YAAA;AACF;AAEA,QAAA,MAAMM,mBAAoBP,CAAAA,QAAAA,CAAAA;AAC5B,KAAA;AAEA,IAAA,IAAIC,aAAe,EAAA;AACjB,QAAA,MAAMM,mBAAoBP,CAAAA,QAAAA,CAAAA;KACrB,MAAA;AACLoB,QAAAA,OAAAA,CAAQC,IAAI,CACV,CAAC,qHAAqH,CAAC,CAAA;AAE3H;IAEA,OAAOf,UAAAA;AACT;;;;"}