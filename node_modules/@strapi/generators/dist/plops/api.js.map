{"version":3,"file":"api.js","sources":["../../src/plops/api.ts"],"sourcesContent":["import { join } from 'path';\nimport type { NodePlopAPI } from 'plop';\nimport fs from 'fs-extra';\nimport tsUtils from '@strapi/typescript-utils';\n\nimport validateInput from './utils/validate-input';\n\nexport default (plop: NodePlopAPI) => {\n  // API generator\n  plop.setGenerator('api', {\n    description: 'Generate a basic API',\n    prompts: [\n      {\n        type: 'input',\n        name: 'id',\n        message: 'API name',\n        validate: (input) => validateInput(input),\n      },\n      {\n        type: 'confirm',\n        name: 'isPluginApi',\n        message: 'Is this API for a plugin?',\n      },\n      {\n        when: (answers) => answers.isPluginApi,\n        type: 'list',\n        name: 'plugin',\n        message: 'Plugin name',\n        async choices() {\n          const pluginsPath = join(plop.getDestBasePath(), 'plugins');\n          const exists = await fs.pathExists(pluginsPath);\n          if (!exists) {\n            throw Error('Couldn\\'t find a \"plugins\" directory');\n          }\n\n          const pluginsDir = await fs.readdir(pluginsPath, { withFileTypes: true });\n          const pluginsDirContent = pluginsDir.filter((fd) => fd.isDirectory());\n\n          if (pluginsDirContent.length === 0) {\n            throw Error('The \"plugins\" directory is empty');\n          }\n\n          return pluginsDirContent;\n        },\n      },\n    ],\n    actions(answers) {\n      if (!answers) {\n        return [];\n      }\n\n      const filePath =\n        answers.isPluginApi && answers.plugin ? 'plugins/{{ plugin }}/server' : 'api/{{ id }}';\n      const currentDir = process.cwd();\n      const language = tsUtils.isUsingTypeScriptSync(currentDir) ? 'ts' : 'js';\n\n      const baseActions = [\n        {\n          type: 'add',\n          path: `${filePath}/controllers/{{ id }}.${language}`,\n          templateFile: `templates/${language}/controller.${language}.hbs`,\n        },\n        {\n          type: 'add',\n          path: `${filePath}/services/{{ id }}.${language}`,\n          templateFile: `templates/${language}/service.${language}.hbs`,\n        },\n      ];\n\n      if (answers.isPluginApi) {\n        return baseActions;\n      }\n\n      return [\n        {\n          type: 'add',\n          path: `${filePath}/routes/{{ id }}.${language}`,\n          templateFile: `templates/${language}/single-route.${language}.hbs`,\n        },\n        ...baseActions,\n      ];\n    },\n  });\n};\n"],"names":["plop","setGenerator","description","prompts","type","name","message","validate","input","validateInput","when","answers","isPluginApi","choices","pluginsPath","join","getDestBasePath","exists","fs","pathExists","Error","pluginsDir","readdir","withFileTypes","pluginsDirContent","filter","fd","isDirectory","length","actions","filePath","plugin","currentDir","process","cwd","language","tsUtils","isUsingTypeScriptSync","baseActions","path","templateFile"],"mappings":"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"}