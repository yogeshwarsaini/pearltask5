{"version":3,"file":"locales.mjs","sources":["../../../admin/src/services/locales.ts"],"sourcesContent":["import { i18nApi } from './api';\n\nimport type { GetISOLocales } from '../../../shared/contracts/iso-locales';\nimport type {\n  GetLocales,\n  CreateLocale,\n  DeleteLocale,\n  UpdateLocale,\n} from '../../../shared/contracts/locales';\n\nconst localesApi = i18nApi.injectEndpoints({\n  endpoints: (builder) => ({\n    createLocale: builder.mutation<CreateLocale.Response, CreateLocale.Request['body']>({\n      query: (data) => ({\n        url: '/i18n/locales',\n        method: 'POST',\n        data,\n      }),\n      invalidatesTags: [{ type: 'Locale', id: 'LIST' }],\n    }),\n    deleteLocale: builder.mutation<DeleteLocale.Response, DeleteLocale.Params['id']>({\n      query: (id) => ({\n        url: `/i18n/locales/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: (result, error, id) => [{ type: 'Locale', id }],\n    }),\n    getLocales: builder.query<GetLocales.Response, void>({\n      query: () => '/i18n/locales',\n      providesTags: (res) => [\n        { type: 'Locale', id: 'LIST' },\n        ...(Array.isArray(res)\n          ? res.map((locale) => ({\n              type: 'Locale' as const,\n              id: locale.id,\n            }))\n          : []),\n      ],\n    }),\n    getDefaultLocales: builder.query<GetISOLocales.Response, void>({\n      query: () => '/i18n/iso-locales',\n    }),\n    updateLocale: builder.mutation<\n      UpdateLocale.Response,\n      UpdateLocale.Request['body'] & UpdateLocale.Params\n    >({\n      query: ({ id, ...data }) => ({\n        url: `/i18n/locales/${id}`,\n        method: 'PUT',\n        data,\n      }),\n      invalidatesTags: (result, error, { id }) => [{ type: 'Locale', id }],\n    }),\n  }),\n});\n\nconst {\n  useCreateLocaleMutation,\n  useDeleteLocaleMutation,\n  useGetLocalesQuery,\n  useGetDefaultLocalesQuery,\n  useUpdateLocaleMutation,\n} = localesApi;\n\nexport {\n  useCreateLocaleMutation,\n  useDeleteLocaleMutation,\n  useGetLocalesQuery,\n  useGetDefaultLocalesQuery,\n  useUpdateLocaleMutation,\n};\n"],"names":["localesApi","i18nApi","injectEndpoints","endpoints","builder","createLocale","mutation","query","data","url","method","invalidatesTags","type","id","deleteLocale","result","error","getLocales","providesTags","res","Array","isArray","map","locale","getDefaultLocales","updateLocale","useCreateLocaleMutation","useDeleteLocaleMutation","useGetLocalesQuery","useGetDefaultLocalesQuery","useUpdateLocaleMutation"],"mappings":";;AAUA,MAAMA,UAAAA,GAAaC,OAAQC,CAAAA,eAAe,CAAC;IACzCC,SAAW,EAAA,CAACC,WAAa;YACvBC,YAAcD,EAAAA,OAAAA,CAAQE,QAAQ,CAAsD;gBAClFC,KAAO,EAAA,CAACC,QAAU;wBAChBC,GAAK,EAAA,eAAA;wBACLC,MAAQ,EAAA,MAAA;AACRF,wBAAAA;qBACF,CAAA;gBACAG,eAAiB,EAAA;AAAC,oBAAA;wBAAEC,IAAM,EAAA,QAAA;wBAAUC,EAAI,EAAA;AAAO;AAAE;AACnD,aAAA,CAAA;YACAC,YAAcV,EAAAA,OAAAA,CAAQE,QAAQ,CAAmD;gBAC/EC,KAAO,EAAA,CAACM,MAAQ;AACdJ,wBAAAA,GAAAA,EAAK,CAAC,cAAc,EAAEI,EAAAA,CAAG,CAAC;wBAC1BH,MAAQ,EAAA;qBACV,CAAA;gBACAC,eAAiB,EAAA,CAACI,MAAQC,EAAAA,KAAAA,EAAOH,EAAO,GAAA;AAAC,wBAAA;4BAAED,IAAM,EAAA,QAAA;AAAUC,4BAAAA;AAAG;AAAE;AAClE,aAAA,CAAA;YACAI,UAAYb,EAAAA,OAAAA,CAAQG,KAAK,CAA4B;AACnDA,gBAAAA,KAAAA,EAAO,IAAM,eAAA;AACbW,gBAAAA,YAAAA,EAAc,CAACC,GAAQ,GAAA;AACrB,wBAAA;4BAAEP,IAAM,EAAA,QAAA;4BAAUC,EAAI,EAAA;AAAO,yBAAA;2BACzBO,KAAMC,CAAAA,OAAO,CAACF,GACdA,CAAAA,GAAAA,GAAAA,CAAIG,GAAG,CAAC,CAACC,UAAY;gCACnBX,IAAM,EAAA,QAAA;AACNC,gCAAAA,EAAAA,EAAIU,OAAOV;AACb,6BAAA,KACA;AACL;AACH,aAAA,CAAA;YACAW,iBAAmBpB,EAAAA,OAAAA,CAAQG,KAAK,CAA+B;AAC7DA,gBAAAA,KAAAA,EAAO,IAAM;AACf,aAAA,CAAA;YACAkB,YAAcrB,EAAAA,OAAAA,CAAQE,QAAQ,CAG5B;AACAC,gBAAAA,KAAAA,EAAO,CAAC,EAAEM,EAAE,EAAE,GAAGL,IAAAA,EAAM,IAAM;AAC3BC,wBAAAA,GAAAA,EAAK,CAAC,cAAc,EAAEI,EAAAA,CAAG,CAAC;wBAC1BH,MAAQ,EAAA,KAAA;AACRF,wBAAAA;qBACF,CAAA;AACAG,gBAAAA,eAAAA,EAAiB,CAACI,MAAQC,EAAAA,KAAAA,EAAO,EAAEH,EAAE,EAAE,GAAK;AAAC,wBAAA;4BAAED,IAAM,EAAA,QAAA;AAAUC,4BAAAA;AAAG;AAAE;AACtE,aAAA;SACF;AACF,CAAA,CAAA;AAEM,MAAA,EACJa,uBAAuB,EACvBC,uBAAuB,EACvBC,kBAAkB,EAClBC,yBAAyB,EACzBC,uBAAuB,EACxB,GAAG9B;;;;"}