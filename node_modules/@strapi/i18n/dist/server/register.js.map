{"version":3,"file":"register.js","sources":["../../server/src/register.ts"],"sourcesContent":["import _ from 'lodash';\nimport type { Core } from '@strapi/types';\n\nimport validateLocaleCreation from './controllers/validate-locale-creation';\nimport graphqlProvider from './graphql';\nimport { getService } from './utils';\n\nexport default ({ strapi }: { strapi: Core.Strapi }) => {\n  extendContentTypes(strapi);\n  addContentManagerLocaleMiddleware(strapi);\n};\n\n// TODO: v5 if implemented in the CM => delete this middleware\n/**\n * Adds middleware on CM creation routes to use i18n locale passed in a specific param\n * @param {Strapi} strapi\n */\nconst addContentManagerLocaleMiddleware = (strapi: Core.Strapi) => {\n  strapi.server.router.use('/content-manager/collection-types/:model', (ctx, next) => {\n    if (ctx.method === 'POST' || ctx.method === 'PUT') {\n      return validateLocaleCreation(ctx, next);\n    }\n\n    return next();\n  });\n\n  strapi.server.router.use('/content-manager/single-types/:model', (ctx, next) => {\n    if (ctx.method === 'POST' || ctx.method === 'PUT') {\n      return validateLocaleCreation(ctx, next);\n    }\n\n    return next();\n  });\n};\n\n/**\n * Adds locale and localization fields to all content types\n * Even if content type is not localized, it will have these fields\n * @param {Strapi} strapi\n */\nconst extendContentTypes = (strapi: Core.Strapi) => {\n  const { isLocalizedContentType } = getService('content-types');\n\n  Object.values(strapi.contentTypes).forEach((contentType) => {\n    const { attributes } = contentType;\n\n    const isLocalized = isLocalizedContentType(contentType);\n\n    _.set(attributes, 'locale', {\n      writable: true,\n      private: !isLocalized,\n      configurable: false,\n      visible: false,\n      type: 'string',\n    });\n\n    _.set(attributes, 'localizations', {\n      type: 'relation',\n      relation: 'oneToMany',\n      target: contentType.uid,\n      writable: false,\n      private: !isLocalized,\n      configurable: false,\n      visible: false,\n      unstable_virtual: true,\n      joinColumn: {\n        name: 'document_id',\n        referencedColumn: 'document_id',\n        referencedTable: strapi.db.metadata.identifiers.getTableName(contentType.collectionName!),\n        // ensure the population will not include the results we already loaded\n        on({ results }: { results: any[] }) {\n          return {\n            id: {\n              $notIn: results.map((r) => r.id),\n            },\n          };\n        },\n      },\n    });\n  });\n\n  if (strapi.plugin('graphql')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    graphqlProvider({ strapi }).register();\n  }\n};\n"],"names":["strapi","extendContentTypes","addContentManagerLocaleMiddleware","server","router","use","ctx","next","method","validateLocaleCreation","isLocalizedContentType","getService","Object","values","contentTypes","forEach","contentType","attributes","isLocalized","_","set","writable","private","configurable","visible","type","relation","target","uid","unstable_virtual","joinColumn","name","referencedColumn","referencedTable","db","metadata","identifiers","getTableName","collectionName","on","results","id","$notIn","map","r","plugin","graphqlProvider","register"],"mappings":";;;;;;;AAOA,eAAe,CAAA,CAAC,EAAEA,MAAM,EAA2B,GAAA;IACjDC,kBAAmBD,CAAAA,MAAAA,CAAAA;IACnBE,iCAAkCF,CAAAA,MAAAA,CAAAA;AACpC,CAAA;AAEA;AACA;;;IAIA,MAAME,oCAAoC,CAACF,MAAAA,GAAAA;IACzCA,MAAOG,CAAAA,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,0CAAA,EAA4C,CAACC,GAAKC,EAAAA,IAAAA,GAAAA;AACzE,QAAA,IAAID,IAAIE,MAAM,KAAK,UAAUF,GAAIE,CAAAA,MAAM,KAAK,KAAO,EAAA;AACjD,YAAA,OAAOC,uBAAuBH,GAAKC,EAAAA,IAAAA,CAAAA;AACrC;QAEA,OAAOA,IAAAA,EAAAA;AACT,KAAA,CAAA;IAEAP,MAAOG,CAAAA,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,sCAAA,EAAwC,CAACC,GAAKC,EAAAA,IAAAA,GAAAA;AACrE,QAAA,IAAID,IAAIE,MAAM,KAAK,UAAUF,GAAIE,CAAAA,MAAM,KAAK,KAAO,EAAA;AACjD,YAAA,OAAOC,uBAAuBH,GAAKC,EAAAA,IAAAA,CAAAA;AACrC;QAEA,OAAOA,IAAAA,EAAAA;AACT,KAAA,CAAA;AACF,CAAA;AAEA;;;;IAKA,MAAMN,qBAAqB,CAACD,MAAAA,GAAAA;AAC1B,IAAA,MAAM,EAAEU,sBAAsB,EAAE,GAAGC,gBAAW,CAAA,eAAA,CAAA;AAE9CC,IAAAA,MAAAA,CAAOC,MAAM,CAACb,MAAAA,CAAOc,YAAY,CAAEC,CAAAA,OAAO,CAAC,CAACC,WAAAA,GAAAA;QAC1C,MAAM,EAAEC,UAAU,EAAE,GAAGD,WAAAA;AAEvB,QAAA,MAAME,cAAcR,sBAAuBM,CAAAA,WAAAA,CAAAA;QAE3CG,CAAEC,CAAAA,GAAG,CAACH,UAAAA,EAAY,QAAU,EAAA;YAC1BI,QAAU,EAAA,IAAA;AACVC,YAAAA,OAAAA,EAAS,CAACJ,WAAAA;YACVK,YAAc,EAAA,KAAA;YACdC,OAAS,EAAA,KAAA;YACTC,IAAM,EAAA;AACR,SAAA,CAAA;QAEAN,CAAEC,CAAAA,GAAG,CAACH,UAAAA,EAAY,eAAiB,EAAA;YACjCQ,IAAM,EAAA,UAAA;YACNC,QAAU,EAAA,WAAA;AACVC,YAAAA,MAAAA,EAAQX,YAAYY,GAAG;YACvBP,QAAU,EAAA,KAAA;AACVC,YAAAA,OAAAA,EAAS,CAACJ,WAAAA;YACVK,YAAc,EAAA,KAAA;YACdC,OAAS,EAAA,KAAA;YACTK,gBAAkB,EAAA,IAAA;YAClBC,UAAY,EAAA;gBACVC,IAAM,EAAA,aAAA;gBACNC,gBAAkB,EAAA,aAAA;gBAClBC,eAAiBjC,EAAAA,MAAAA,CAAOkC,EAAE,CAACC,QAAQ,CAACC,WAAW,CAACC,YAAY,CAACrB,WAAAA,CAAYsB,cAAc,CAAA;;gBAEvFC,EAAG,CAAA,CAAA,EAAEC,OAAO,EAAsB,EAAA;oBAChC,OAAO;wBACLC,EAAI,EAAA;AACFC,4BAAAA,MAAAA,EAAQF,QAAQG,GAAG,CAAC,CAACC,CAAAA,GAAMA,EAAEH,EAAE;AACjC;AACF,qBAAA;AACF;AACF;AACF,SAAA,CAAA;AACF,KAAA,CAAA;IAEA,IAAIzC,MAAAA,CAAO6C,MAAM,CAAC,SAAY,CAAA,EAAA;;QAE5BC,OAAgB,CAAA;AAAE9C,YAAAA;AAAO,SAAA,CAAA,CAAG+C,QAAQ,EAAA;AACtC;AACF,CAAA;;;;"}